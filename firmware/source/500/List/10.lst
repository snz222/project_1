
AVRASM ver. 2.1.30  C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm Fri Dec 02 13:56:21 2016

C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1104): warning: Register r3 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1105): warning: Register r4 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1106): warning: Register r5 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1107): warning: Register r6 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1108): warning: Register r7 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1109): warning: Register r2 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1110): warning: Register r8 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1111): warning: Register r9 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1112): warning: Register r11 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1113): warning: Register r10 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1114): warning: Register r13 already defined by the .DEF directive
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1115): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATxmega256A3B
                 ;Program type           : Application
                 ;Clock frequency        : 32.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 4096 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATxmega256A3B
                 	#pragma AVRPART MEMORY PROG_FLASH 270336
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 16384
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x2000
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU CCP=0x34
                 	.EQU RAMPD=0x38
                 	.EQU RAMPX=0x39
                 	.EQU RAMPY=0x3A
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU WDT_CTRL=0x80
                 	.EQU PMIC_CTRL=0xA2
                 	.EQU NVM_ADDR0=0X01C0
                 	.EQU NVM_ADDR1=NVM_ADDR0+1
                 	.EQU NVM_ADDR2=NVM_ADDR1+1
                 	.EQU NVM_DATA0=NVM_ADDR0+4
                 	.EQU NVM_CMD=NVM_ADDR0+0xA
                 	.EQU NVM_CTRLA=NVM_ADDR0+0xB
                 	.EQU NVM_CTRLB=NVM_ADDR0+0xC
                 	.EQU NVM_STATUS=NVM_ADDR0+0xF
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIO0=0x00
                 	.EQU GPIO1=0x01
                 	.EQU GPIO2=0x02
                 	.EQU GPIO3=0x03
                 	.EQU GPIO4=0x04
                 	.EQU GPIO5=0x05
                 	.EQU GPIO6=0x06
                 	.EQU GPIO7=0x07
                 	.EQU GPIO8=0x08
                 	.EQU GPIO9=0x09
                 	.EQU GPIO10=0x0A
                 	.EQU GPIO11=0x0B
                 	.EQU GPIO12=0x0C
                 	.EQU GPIO13=0x0D
                 	.EQU GPIO14=0x0E
                 	.EQU GPIO15=0x0F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x2000
                 	.EQU __SRAM_END=0x5FFF
                 	.EQU __DSTACK_SIZE=0x1000
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _izm=R3
                 	.DEF _T_analog=R4
                 	.DEF _T_analog_msb=R5
                 	.DEF _Tempf_K=R6
                 	.DEF _Tempf_K_msb=R7
                 	.DEF _CLBR=R2
                 	.DEF _KALC_PULS=R8
                 	.DEF _KALC_PULS_msb=R9
                 	.DEF _RX_BUFFER_SIZE_USARTC0=R11
                 	.DEF _rx_wr_index_usartc0=R10
                 	.DEF _rx_rd_index_usartc0=R13
                 	.DEF _rx_counter_usartc0=R12
                 
                 ;GPIO0-GPIO15 INITIALIZATION VALUES
                 	.EQU __GPIO0_INIT=0x00
                 	.EQU __GPIO1_INIT=0x00
                 	.EQU __GPIO2_INIT=0x00
                 	.EQU __GPIO3_INIT=0x00
                 	.EQU __GPIO4_INIT=0x00
                 	.EQU __GPIO5_INIT=0x00
                 	.EQU __GPIO6_INIT=0x00
                 	.EQU __GPIO7_INIT=0x00
                 	.EQU __GPIO8_INIT=0x00
                 	.EQU __GPIO9_INIT=0x00
                 	.EQU __GPIO10_INIT=0x00
                 	.EQU __GPIO11_INIT=0x00
                 	.EQU __GPIO12_INIT=0x00
                 	.EQU __GPIO13_INIT=0x00
                 	.EQU __GPIO14_INIT=0x00
                 	.EQU __GPIO15_INIT=0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION VALUES
                 	.EQU __R2_INIT=0x00
                 	.EQU __R3_INIT=0x00
                 	.EQU __R4_INIT=0x00
                 	.EQU __R5_INIT=0x00
                 	.EQU __R6_INIT=0x00
                 	.EQU __R7_INIT=0x00
                 	.EQU __R8_INIT=0x00
                 	.EQU __R9_INIT=0x00
                 	.EQU __R10_INIT=0x00
                 	.EQU __R11_INIT=0x01
                 	.EQU __R12_INIT=0x00
                 	.EQU __R13_INIT=0x00
                 	.EQU __R14_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0292 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 1801 	JMP  _tcc0_overflow_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 1817 	JMP  _tcc1_overflow_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 09d9 	JMP  _usartc0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 117e 	JMP  _twie_master_isr
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
000072 940c 0000 	JMP  0x00
000074 940c 0000 	JMP  0x00
000076 940c 0000 	JMP  0x00
000078 940c 0000 	JMP  0x00
00007a 940c 0000 	JMP  0x00
00007c 940c 0000 	JMP  0x00
00007e 940c 0000 	JMP  0x00
000080 940c 0000 	JMP  0x00
000082 940c 0000 	JMP  0x00
000084 940c 0000 	JMP  0x00
000086 940c 0000 	JMP  0x00
000088 940c 0000 	JMP  0x00
00008a 940c 0000 	JMP  0x00
00008c 940c 0000 	JMP  0x00
00008e 940c 0000 	JMP  0x00
000090 940c 0000 	JMP  0x00
000092 940c 0000 	JMP  0x00
000094 940c 0000 	JMP  0x00
000096 940c 0000 	JMP  0x00
000098 940c 0000 	JMP  0x00
00009a 940c 1968 	JMP  _tcd0_overflow_isr
00009c 940c 0000 	JMP  0x00
00009e 940c 0000 	JMP  0x00
0000a0 940c 0000 	JMP  0x00
0000a2 940c 0000 	JMP  0x00
0000a4 940c 0000 	JMP  0x00
0000a6 940c 0000 	JMP  0x00
0000a8 940c 0000 	JMP  0x00
0000aa 940c 0000 	JMP  0x00
0000ac 940c 0000 	JMP  0x00
0000ae 940c 0000 	JMP  0x00
0000b0 940c 0000 	JMP  0x00
0000b2 940c 0000 	JMP  0x00
0000b4 940c 0000 	JMP  0x00
0000b6 940c 0000 	JMP  0x00
0000b8 940c 0000 	JMP  0x00
0000ba 940c 0000 	JMP  0x00
0000bc 940c 0000 	JMP  0x00
0000be 940c 0000 	JMP  0x00
0000c0 940c 0000 	JMP  0x00
0000c2 940c 0000 	JMP  0x00
0000c4 940c 0000 	JMP  0x00
0000c6 940c 0000 	JMP  0x00
0000c8 940c 0000 	JMP  0x00
0000ca 940c 0000 	JMP  0x00
0000cc 940c 0000 	JMP  0x00
0000ce 940c 0000 	JMP  0x00
0000d0 940c 0000 	JMP  0x00
0000d2 940c 0000 	JMP  0x00
0000d4 940c 0000 	JMP  0x00
0000d6 940c 0000 	JMP  0x00
0000d8 940c 1971 	JMP  _tcf0_overflow_isr
0000da 940c 0000 	JMP  0x00
0000dc 940c 0000 	JMP  0x00
0000de 940c 0000 	JMP  0x00
0000e0 940c 0000 	JMP  0x00
0000e2 940c 0000 	JMP  0x00
0000e4 940c 0000 	JMP  0x00
0000e6 940c 0000 	JMP  0x00
0000e8 940c 0000 	JMP  0x00
0000ea 940c 0000 	JMP  0x00
0000ec 940c 0000 	JMP  0x00
0000ee 940c 0000 	JMP  0x00
0000f0 940c 0000 	JMP  0x00
0000f2 940c 0000 	JMP  0x00
                 
                 _error_msg:
0000f4 02de
0000f5 02df
0000f6 02eb
0000f7 02eb      	.DB  LOW(_0x0*2),HIGH(_0x0*2),LOW(_0x0*2+1),HIGH(_0x0*2+1),LOW(_0x0*2+13),HIGH(_0x0*2+13),LOW(_0x0*2+13),HIGH(_0x0*2+13)
0000f8 02f6
0000f9 0303
0000fa 030e
0000fb 0319      	.DB  LOW(_0x0*2+24),HIGH(_0x0*2+24),LOW(_0x0*2+37),HIGH(_0x0*2+37),LOW(_0x0*2+48),HIGH(_0x0*2+48),LOW(_0x0*2+59),HIGH(_0x0*2+59)
0000fc 0329
0000fd 0333
0000fe 033c
0000ff 034e      	.DB  LOW(_0x0*2+75),HIGH(_0x0*2+75),LOW(_0x0*2+85),HIGH(_0x0*2+85),LOW(_0x0*2+94),HIGH(_0x0*2+94),LOW(_0x0*2+112),HIGH(_0x0*2+112)
000100 0361
000101 0372
000102 0381
000103 0392      	.DB  LOW(_0x0*2+131),HIGH(_0x0*2+131),LOW(_0x0*2+148),HIGH(_0x0*2+148),LOW(_0x0*2+163),HIGH(_0x0*2+163),LOW(_0x0*2+180),HIGH(_0x0*2+180)
000104 03a2      	.DB  LOW(_0x0*2+196),HIGH(_0x0*2+196)
                 _k1:
000105 2220
000106 2b2a
000107 5b2c
000108 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
000109 7f7c
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1288): warning: .cseg .db misalignment - padding zero byte
00010a 0000      	.DB  0x7C,0x7F,0x0
                 _vst_G101:
00010b 0400
00010c 0200
00010d 0100
00010e 0080      	.DB  0x0,0x4,0x0,0x2,0x0,0x1,0x80,0x0
00010f 0040
000110 0020
000111 0010
000112 0008      	.DB  0x40,0x0,0x20,0x0,0x10,0x0,0x8,0x0
000113 0004
000114 0002
000115 0000      	.DB  0x4,0x0,0x2,0x0,0x0,0x0
                 _cst_G101:
000116 8000
000117 4000
000118 2000
000119 1000      	.DB  0x0,0x80,0x0,0x40,0x0,0x20,0x0,0x10
00011a 0800
00011b 4000
00011c 2000
00011d 1000      	.DB  0x0,0x8,0x0,0x40,0x0,0x20,0x0,0x10
00011e 0800
00011f 0400
000120 0200      	.DB  0x0,0x8,0x0,0x4,0x0,0x2
                 
                 _0x1B:
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1299): warning: .cseg .db misalignment - padding zero byte
000121 00ff      	.DB  0xFF
                 _0x69:
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0001
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
00012a 0001
00012b 0000
00012c 07b2
00012d 0000      	.DB  0x1,0x0,0x0,0x0,0xB2,0x7,0x0,0x0
00012e de80
00012f 0028
000130 3380
000131 01e1      	.DB  0x80,0xDE,0x28,0x0,0x80,0x33,0xE1,0x1
000132 0000
000133 0000
000134 001f
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
000136 001c
000137 0000
000138 001f
000139 0000      	.DB  0x1C,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
00013a 001e
00013b 0000
00013c 001f
00013d 0000      	.DB  0x1E,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
00013e 001e
00013f 0000
000140 001f
000141 0000      	.DB  0x1E,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
000142 001f
000143 0000
000144 001e
000145 0000      	.DB  0x1F,0x0,0x0,0x0,0x1E,0x0,0x0,0x0
000146 001f
000147 0000
000148 001e
000149 0000      	.DB  0x1F,0x0,0x0,0x0,0x1E,0x0,0x0,0x0
00014a 001f
00014b 0000      	.DB  0x1F,0x0,0x0,0x0
                 _0x88:
00014c 0000
00014d 0000
00014e 001f
00014f 0000      	.DB  0x0,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
000150 001c
000151 0000
000152 001f
000153 0000      	.DB  0x1C,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
000154 001e
000155 0000
000156 001f
000157 0000      	.DB  0x1E,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
000158 001e
000159 0000
00015a 001f
00015b 0000      	.DB  0x1E,0x0,0x0,0x0,0x1F,0x0,0x0,0x0
00015c 001f
00015d 0000
00015e 001e
00015f 0000      	.DB  0x1F,0x0,0x0,0x0,0x1E,0x0,0x0,0x0
000160 001f
000161 0000
000162 001e
000163 0000      	.DB  0x1F,0x0,0x0,0x0,0x1E,0x0,0x0,0x0
000164 001f
000165 0000      	.DB  0x1F,0x0,0x0,0x0
                 _0x18B:
000166 3a30
000167 742f
000168 7365
000169 2e74      	.DB  0x30,0x3A,0x2F,0x74,0x65,0x73,0x74,0x2E
00016a 7874
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1322): warning: .cseg .db misalignment - padding zero byte
00016b 0074      	.DB  0x74,0x78,0x74
                 _0x18C:
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1324): warning: .cseg .db misalignment - padding zero byte
00016c 0001      	.DB  0x1
                 _0x193:
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1326): warning: .cseg .db misalignment - padding zero byte
00016d 0003      	.DB  0x3
                 _0x196:
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1328): warning: .cseg .db misalignment - padding zero byte
00016e 0001      	.DB  0x1
                 _0x0:
00016f 4600
000170 5f52
000171 4944
000172 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
000173 455f
000174 5252
000175 4600
000176 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
000177 4e49
000178 5f54
000179 5245
00017a 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
00017b 5246
00017c 4e5f
00017d 544f
00017e 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
00017f 4145
000180 5944
000181 4600
000182 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
000183 4f4e
000184 465f
000185 4c49
000186 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
000187 5246
000188 4e5f
000189 5f4f
00018a 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
00018b 4854
00018c 4600
00018d 5f52
00018e 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
00018f 4156
000190 494c
000191 5f44
000192 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
000193 454d
000194 4600
000195 5f52
000196 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
000197 494e
000198 4445
000199 4600
00019a 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
00019b 5845
00019c 5349
00019d 0054
00019e 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
00019f 495f
0001a0 564e
0001a1 4c41
0001a2 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
0001a3 4f5f
0001a4 4a42
0001a5 4345
0001a6 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
0001a7 5246
0001a8 575f
0001a9 4952
0001aa 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
0001ab 505f
0001ac 4f52
0001ad 4554
0001ae 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
0001af 4445
0001b0 4600
0001b1 5f52
0001b2 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
0001b3 4156
0001b4 494c
0001b5 5f44
0001b6 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
0001b7 5649
0001b8 0045
0001b9 5246
0001ba 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
0001bb 544f
0001bc 455f
0001bd 414e
0001be 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
0001bf 4445
0001c0 4600
0001c1 5f52
0001c2 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
0001c3 465f
0001c4 4c49
0001c5 5345
0001c6 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
0001c7 4554
0001c8 004d
0001c9 5246
0001ca 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
0001cb 464b
0001cc 5f53
0001cd 4241
0001ce 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
0001cf 4554
0001d0 0044
0001d1 5246
0001d2 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
0001d3 4d49
0001d4 4f45
0001d5 5455
0001d6 4500      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x45
0001d7 5252
0001d8 524f
0001d9 203a
0001da 7025      	.DB  0x52,0x52,0x4F,0x52,0x3A,0x20,0x25,0x70
0001db 0a0d
0001dc 3000
0001dd 2f3a
0001de 6c25      	.DB  0xD,0xA,0x0,0x30,0x3A,0x2F,0x25,0x6C
0001df 2e64
0001e0 6962
0001e1 006e
0001e2 3625      	.DB  0x64,0x2E,0x62,0x69,0x6E,0x0,0x25,0x36
0001e3 646c
0001e4 4c00
0001e5 676f
0001e6 6369      	.DB  0x6C,0x64,0x0,0x4C,0x6F,0x67,0x69,0x63
0001e7 6c61
0001e8 6420
0001e9 6972
0001ea 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
0001eb 3020
0001ec 203a
0001ed 6f6d
0001ee 6e75      	.DB  0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75,0x6E
0001ef 6574
0001f0 2064
0001f1 4b4f
0001f2 0a0d      	.DB  0x74,0x65,0x64,0x20,0x4F,0x4B,0xD,0xA
0001f3 4600
0001f4 6c69
0001f5 2065
0001f6 7325      	.DB  0x0,0x46,0x69,0x6C,0x65,0x20,0x25,0x73
0001f7 6320
0001f8 6572
0001f9 7461
0001fa 6465      	.DB  0x20,0x63,0x72,0x65,0x61,0x74,0x65,0x64
0001fb 4f20
0001fc 0d4b
0001fd 000a
0001fe 6874      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x74,0x68
0001ff 7369
000200 6920
000201 2073
000202 6574      	.DB  0x69,0x73,0x20,0x69,0x73,0x20,0x74,0x65
000203 7473
000204 2500
000205 2075
000206 7962      	.DB  0x73,0x74,0x0,0x25,0x75,0x20,0x62,0x79
000207 6574
000208 2073
000209 7277
00020a 7469      	.DB  0x74,0x65,0x73,0x20,0x77,0x72,0x69,0x74
00020b 6574
00020c 206e
00020d 666f
00020e 2520      	.DB  0x74,0x65,0x6E,0x20,0x6F,0x66,0x20,0x25
00020f 0d75
000210 000a
000211 6966
000212 656c      	.DB  0x75,0xD,0xA,0x0,0x66,0x69,0x6C,0x65
000213 7320
000214 2064
000215 6163
000216 6472      	.DB  0x20,0x73,0x64,0x20,0x63,0x61,0x72,0x64
000217 4600
000218 6c69
000219 2065
00021a 7325      	.DB  0x0,0x46,0x69,0x6C,0x65,0x20,0x25,0x73
00021b 6320
00021c 6f6c
00021d 6573
00021e 2064      	.DB  0x20,0x63,0x6C,0x6F,0x73,0x65,0x64,0x20
00021f 4b4f
000220 0a0d
000221 4600
000222 6c69      	.DB  0x4F,0x4B,0xD,0xA,0x0,0x46,0x69,0x6C
000223 2065
000224 7365
000225 2074
000226 7a79      	.DB  0x65,0x20,0x65,0x73,0x74,0x20,0x79,0x7A
000227 0065
000228 7473
000229 7261
00022a 2074      	.DB  0x65,0x0,0x73,0x74,0x61,0x72,0x74,0x20
00022b 3269
00022c 0063
00022d 7562
00022e 2066      	.DB  0x69,0x32,0x63,0x0,0x62,0x75,0x66,0x20
00022f 3269
000230 2063
000231 7473
000232 7261      	.DB  0x69,0x32,0x63,0x20,0x73,0x74,0x61,0x72
000233 2074
000234 6b6f
000235 6200
000236 706d      	.DB  0x74,0x20,0x6F,0x6B,0x0,0x62,0x6D,0x70
000237 6920
000238 6332
000239 7320
00023a 6174      	.DB  0x20,0x69,0x32,0x63,0x20,0x73,0x74,0x61
00023b 7472
00023c 6f20
00023d 006b
00023e 5053      	.DB  0x72,0x74,0x20,0x6F,0x6B,0x0,0x53,0x50
00023f 2049
000240 5453
000241 5241
000242 0054      	.DB  0x49,0x20,0x53,0x54,0x41,0x52,0x54,0x0
000243 6461
000244 3737
000245 3530
000246 7320      	.DB  0x61,0x64,0x37,0x37,0x30,0x35,0x20,0x73
000247 6174
000248 7472
000249 6f20
00024a 006b      	.DB  0x74,0x61,0x72,0x74,0x20,0x6F,0x6B,0x0
00024b 7473
00024c 7261
00024d 2074
00024e 6564      	.DB  0x73,0x74,0x61,0x72,0x74,0x20,0x64,0x65
00024f 6976
000250 6563
000251 5300
000252 4154      	.DB  0x76,0x69,0x63,0x65,0x0,0x53,0x54,0x41
000253 5452
000254 5720
000255 4948
000256 454c      	.DB  0x52,0x54,0x20,0x57,0x48,0x49,0x4C,0x45
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1388): warning: .cseg .db misalignment - padding zero byte
000257 0000      	.DB  0x0
                 _0x2000003:
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1390): warning: .cseg .db misalignment - padding zero byte
000258 0001      	.DB  0x1
                 _0x2020000:
000259 feeb
00025a 4d90
00025b 4453
00025c 534f      	.DB  0xEB,0xFE,0x90,0x4D,0x53,0x44,0x4F,0x53
00025d 2e35
00025e 0030
00025f 4f4e
000260 4e20      	.DB  0x35,0x2E,0x30,0x0,0x4E,0x4F,0x20,0x4E
000261 4d41
000262 2045
000263 2020
000264 4620      	.DB  0x41,0x4D,0x45,0x20,0x20,0x20,0x20,0x46
000265 5441
000266 3233
000267 2020
000268 0020      	.DB  0x41,0x54,0x33,0x32,0x20,0x20,0x20,0x0
000269 4f4e
00026a 4e20
00026b 4d41
00026c 2045      	.DB  0x4E,0x4F,0x20,0x4E,0x41,0x4D,0x45,0x20
00026d 2020
00026e 4620
00026f 5441
000270 2020      	.DB  0x20,0x20,0x20,0x46,0x41,0x54,0x20,0x20
000271 2020
000272 0020      	.DB  0x20,0x20,0x20,0x0
                 _0x2040000:
000273 4e2d
000274 4e41
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1400): warning: .cseg .db misalignment - padding zero byte
000275 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1402): warning: .cseg .db misalignment - padding zero byte
000276 0001      	.DB  0x1
                 _0x2080000:
000277 4e2d
000278 4e41
000279 4900
00027a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\artna\Documents\GitHub\project_1\firmware\исходник\500\List\10.asm(1405): warning: .cseg .db misalignment - padding zero byte
00027b 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00027c 0001      	.DW  0x01
00027d 314a      	.DW  _Mx
00027e 0242      	.DW  _0x1B*2
                 
00027f 000b      	.DW  0x0B
000280 35b7      	.DW  _path
000281 02cc      	.DW  _0x18B*2
                 
000282 0001      	.DW  0x01
000283 35c3      	.DW  _SD_IN
000284 02d8      	.DW  _0x18C*2
                 
000285 0001      	.DW  0x01
000286 362c      	.DW  _oss
000287 02da      	.DW  _0x193*2
                 
000288 0001      	.DW  0x01
000289 36b3      	.DW  _chan
00028a 02dc      	.DW  _0x196*2
                 
00028b 0001      	.DW  0x01
00028c 36bd      	.DW  _status_G100
00028d 04b0      	.DW  _0x2000003*2
                 
00028e 0001      	.DW  0x01
00028f 36c6      	.DW  __seed_G104
000290 04ec      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000291 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000292 94f8      	CLI
000293 27ee      	CLR  R30
                 
                 ;MEMORY MAPPED EEPROM ACCESS IS USED
000294 91f0 01cc 	LDS  R31,NVM_CTRLB
000296 60f8      	ORI  R31,0x08
000297 93f0 01cc 	STS  NVM_CTRLB,R31
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000299 edf8      	LDI  R31,0xD8
00029a bff4      	OUT  CCP,R31
00029b 93e0 00a2 	STS  PMIC_CTRL,R30
                 
                 ;DISABLE WATCHDOG
00029d 91a0 0080 	LDS  R26,WDT_CTRL
00029f 7fad      	CBR  R26,2
0002a0 60a1      	SBR  R26,1
0002a1 bff4      	OUT  CCP,R31
0002a2 93a0 0080 	STS  WDT_CTRL,R26
                 
                 ;CLEAR SRAM
0002a4 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0002a5 e490      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0002a6 e0a0      	LDI  R26,LOW(__SRAM_START)
0002a7 e2b0      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0002a8 93ed      	ST   X+,R30
0002a9 9701      	SBIW R24,1
0002aa f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0002ab efe8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0002ac e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0002ad 9185      	LPM  R24,Z+
0002ae 9195      	LPM  R25,Z+
0002af 9700      	SBIW R24,0
0002b0 f061      	BREQ __GLOBAL_INI_END
0002b1 91a5      	LPM  R26,Z+
0002b2 91b5      	LPM  R27,Z+
0002b3 9005      	LPM  R0,Z+
0002b4 9015      	LPM  R1,Z+
0002b5 01bf      	MOVW R22,R30
0002b6 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002b7 9005      	LPM  R0,Z+
0002b8 920d      	ST   X+,R0
0002b9 9701      	SBIW R24,1
0002ba f7e1      	BRNE __GLOBAL_INI_LOOP
0002bb 01fb      	MOVW R30,R22
0002bc cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002bd bf8b      	OUT  RAMPZ,R24
                 
0002be bf8c      	OUT  EIND,R24
                 
                 ;GPIO0-GPIO15 INITIALIZATION
0002bf e0e0      	LDI  R30,__GPIO0_INIT
0002c0 b9e0      	OUT  GPIO0,R30
                 	;__GPIO1_INIT = __GPIO0_INIT
0002c1 b9e1      	OUT  GPIO1,R30
                 	;__GPIO2_INIT = __GPIO0_INIT
0002c2 b9e2      	OUT  GPIO2,R30
                 	;__GPIO3_INIT = __GPIO0_INIT
0002c3 b9e3      	OUT  GPIO3,R30
                 	;__GPIO4_INIT = __GPIO0_INIT
0002c4 b9e4      	OUT  GPIO4,R30
                 	;__GPIO5_INIT = __GPIO0_INIT
0002c5 b9e5      	OUT  GPIO5,R30
                 	;__GPIO6_INIT = __GPIO0_INIT
0002c6 b9e6      	OUT  GPIO6,R30
                 	;__GPIO7_INIT = __GPIO0_INIT
0002c7 b9e7      	OUT  GPIO7,R30
                 	;__GPIO8_INIT = __GPIO0_INIT
0002c8 b9e8      	OUT  GPIO8,R30
                 	;__GPIO9_INIT = __GPIO0_INIT
0002c9 b9e9      	OUT  GPIO9,R30
                 	;__GPIO10_INIT = __GPIO0_INIT
0002ca b9ea      	OUT  GPIO10,R30
                 	;__GPIO11_INIT = __GPIO0_INIT
0002cb b9eb      	OUT  GPIO11,R30
                 	;__GPIO12_INIT = __GPIO0_INIT
0002cc b9ec      	OUT  GPIO12,R30
                 	;__GPIO13_INIT = __GPIO0_INIT
0002cd b9ed      	OUT  GPIO13,R30
                 	;__GPIO14_INIT = __GPIO0_INIT
0002ce b9ee      	OUT  GPIO14,R30
                 	;__GPIO15_INIT = __GPIO0_INIT
0002cf b9ef      	OUT  GPIO15,R30
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 	;__R3_INIT = __GPIO0_INIT
0002d0 2e3e      	MOV  R3,R30
                 	;__R4_INIT = __GPIO0_INIT
0002d1 2e4e      	MOV  R4,R30
                 	;__R5_INIT = __GPIO0_INIT
0002d2 2e5e      	MOV  R5,R30
                 	;__R6_INIT = __GPIO0_INIT
0002d3 2e6e      	MOV  R6,R30
                 	;__R7_INIT = __GPIO0_INIT
0002d4 2e7e      	MOV  R7,R30
                 	;__R8_INIT = __GPIO0_INIT
0002d5 2e8e      	MOV  R8,R30
                 	;__R9_INIT = __GPIO0_INIT
0002d6 2e9e      	MOV  R9,R30
                 	;__R10_INIT = __GPIO0_INIT
0002d7 2eae      	MOV  R10,R30
0002d8 e0e1      	LDI  R30,__R11_INIT
0002d9 2ebe      	MOV  R11,R30
0002da e0e0      	LDI  R30,__R12_INIT
0002db 2ece      	MOV  R12,R30
                 	;__R13_INIT = __R12_INIT
0002dc 2ede      	MOV  R13,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002dd efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002de bfed      	OUT  SPL,R30
0002df e5ef      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002e0 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002e1 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002e2 e3d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002e3 940c 19d1 	JMP  _main
                 
                 	.ESEG
                 	.ORG 1
                 
                 	.DSEG
                 	.ORG 0x3000
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATxmega256A3B
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 32,000000 MHz
                 ;Memory model            : Small
                 ;Data Stack size         : 4096
                 ;*****************************************************/
                 ;// I/O Registers definitions
                 ;#include <io.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <twix.h>
                 ;#include "ADC_vn.c"
                 ;// Function used to read the calibration byte from the
                 ;// signature row, specified by 'index'
                 ;#pragma optsize-
                 ;unsigned char read_calibration_byte(unsigned char index)
                 ; 0000 000F {
                 
                 	.CSEG
                 _read_calibration_byte:
                 ; .FSTART _read_calibration_byte
                 ;unsigned char r;
                 ;NVM.CMD=NVM_CMD_READ_CALIB_ROW_gc;
0002e5 93aa      	ST   -Y,R26
0002e6 931a      	ST   -Y,R17
                 ;	index -> Y+1
                 ;	r -> R17
0002e7 e0e2      	LDI  R30,LOW(2)
0002e8 93e0 01ca 	STS  458,R30
                 ;r=*((flash unsigned char*) index);
0002ea 81e9      	LDD  R30,Y+1
0002eb e0f0      	LDI  R31,0
0002ec 9114      	LPM  R17,Z
                 ;// Clean up NVM command register
                 ;NVM.CMD=NVM_CMD_NO_OPERATION_gc;
0002ed e0e0      	LDI  R30,LOW(0)
0002ee 93e0 01ca 	STS  458,R30
                 ;return r;
0002f0 2fe1      	MOV  R30,R17
0002f1 8118      	LDD  R17,Y+0
0002f2 c460      	RJMP _0x210002C
                 ;}
                 ; .FEND
                 ;#pragma optsize_default
                 ;
                 ;// ADCA initialization
                 ;void adca_init(void)
                 ;{
                 _adca_init:
                 ; .FSTART _adca_init
                 ;// ADCA is enabled
                 ;// Resolution: 12 Bits
                 ;// Load the calibration value for 12 Bit resolution
                 ;// from the signature row
                 ;ADCA.CALL=read_calibration_byte(PROD_SIGNATURES_START+ADCACAL0_offset);
0002f3 e2a0      	LDI  R26,LOW(32)
0002f4 dff0      	RCALL _read_calibration_byte
0002f5 93e0 020c 	STS  524,R30
                 ;ADCA.CALH=read_calibration_byte(PROD_SIGNATURES_START+ADCACAL1_offset);
0002f7 e2a1      	LDI  R26,LOW(33)
0002f8 dfec      	RCALL _read_calibration_byte
0002f9 93e0 020d 	STS  525,R30
                 ;
                 ;// Free Running mode: Off
                 ;// Conversion mode: Unsigned
                 ;ADCA.CTRLB=(0<<ADC_CONMODE_bp) | ADC_RESOLUTION_12BIT_gc;
0002fb e0e0      	LDI  R30,LOW(0)
0002fc 93e0 0201 	STS  513,R30
                 ;
                 ;// Clock frequency: 1000,000 kHz
                 ;ADCA.PRESCALER=ADC_PRESCALER_DIV32_gc;
0002fe e0e3      	LDI  R30,LOW(3)
0002ff 93e0 0204 	STS  516,R30
                 ;
                 ;// Reference: Internal Vcc/1.6
                 ;// Temperature reference: On
                 ;ADCA.REFCTRL=ADC_REFSEL_VCC_gc | (1<<ADC_TEMPREF_bp) | (0<<ADC_BANDGAP_bp);
000301 e1e1      	LDI  R30,LOW(17)
000302 93e0 0202 	STS  514,R30
                 ;
                 ;// Initialize the ADC Compare register
                 ;ADCA.CMPL=0x00;
000304 e0e0      	LDI  R30,LOW(0)
000305 93e0 0218 	STS  536,R30
                 ;ADCA.CMPH=0x00;
000307 93e0 0219 	STS  537,R30
                 ;
                 ;// ADC channel 0 gain: 1
                 ;// ADC channel 0 input mode: Single-ended positive input signal
                 ;ADCA.CH0.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
000309 e0e1      	LDI  R30,LOW(1)
00030a 93e0 0220 	STS  544,R30
                 ;
                 ;// ADC channel 0 positive input: ADC4 pin
                 ;// ADC channel 0 negative input: GND
                 ;ADCA.CH0.MUXCTRL=ADC_CH_MUXPOS_PIN4_gc;
00030c e2e0      	LDI  R30,LOW(32)
00030d 93e0 0221 	STS  545,R30
                 ;
                 ;// ADC channel 1 gain: 1
                 ;// ADC channel 1 input mode: Single-ended positive input signal
                 ;ADCA.CH1.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
00030f e0e1      	LDI  R30,LOW(1)
000310 93e0 0228 	STS  552,R30
                 ;
                 ;// ADC channel 1 positive input: ADC5 pin
                 ;// ADC channel 1 negative input: GND
                 ;ADCA.CH1.MUXCTRL=ADC_CH_MUXPOS_PIN5_gc;
000312 e2e8      	LDI  R30,LOW(40)
000313 93e0 0229 	STS  553,R30
                 ;
                 ;// ADC channel 2 gain: 1
                 ;// ADC channel 2 input mode: Single-ended positive input signal
                 ;ADCA.CH2.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
000315 e0e1      	LDI  R30,LOW(1)
000316 93e0 0230 	STS  560,R30
                 ;
                 ;// ADC channel 2 positive input: ADC6 pin
                 ;// ADC channel 2 negative input: GND
                 ;ADCA.CH2.MUXCTRL=ADC_CH_MUXPOS_PIN6_gc;
000318 e3e0      	LDI  R30,LOW(48)
000319 93e0 0231 	STS  561,R30
                 ;
                 ;// ADC channel 3 gain: 1
                 ;// ADC channel 3 input mode: Single-ended positive input signal
                 ;ADCA.CH3.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
00031b e0e1      	LDI  R30,LOW(1)
00031c 93e0 0238 	STS  568,R30
                 ;
                 ;// ADC channel 3 positive input: ADC7 pin
                 ;// ADC channel 3 negative input: GND
                 ;ADCA.CH3.MUXCTRL=ADC_CH_MUXPOS_PIN7_gc;
00031e e3e8      	LDI  R30,LOW(56)
00031f 93e0 0239 	STS  569,R30
                 ;
                 ;// AD conversion is started by software
                 ;ADCA.EVCTRL=ADC_EVACT_NONE_gc;
000321 e0e0      	LDI  R30,LOW(0)
000322 93e0 0203 	STS  515,R30
                 ;
                 ;// Channel 0 interrupt: Disabled
                 ;ADCA.CH0.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000324 93e0 0222 	STS  546,R30
                 ;// Channel 1 interrupt: Disabled
                 ;ADCA.CH1.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000326 93e0 022a 	STS  554,R30
                 ;// Channel 2 interrupt: Disabled
                 ;ADCA.CH2.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000328 93e0 0232 	STS  562,R30
                 ;// Channel 3 interrupt: Disabled
                 ;ADCA.CH3.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
00032a 93e0 023a 	STS  570,R30
                 ;
                 ;// Enable the ADC
                 ;ADCA.CTRLA|=ADC_ENABLE_bm;
00032c 91e0 0200 	LDS  R30,512
00032e 60e1      	ORI  R30,1
00032f 93e0 0200 	STS  512,R30
                 ;// Insert a delay to allow the ADC common mode voltage to stabilize
                 ;delay_us(2);
000331 c04c      	RJMP _0x210002E
                 ;}
                 ; .FEND
                 ;
                 ;// ADCA channel data read function using polled mode
                 ;unsigned int adca_read(unsigned char channel)
                 ;{
                 _adca_read:
                 ; .FSTART _adca_read
                 ;ADC_CH_t *pch=&ADCA.CH0+channel;
                 ;unsigned int data;
                 ;
                 ;// Start the AD conversion
                 ;pch->CTRL|= 1<<ADC_CH_START_bp;
000332 93aa      	ST   -Y,R26
000333 940e 42e6 	CALL __SAVELOCR4
                 ;	channel -> Y+4
                 ;	*pch -> R16,R17
                 ;	data -> R18,R19
000335 81ec      	LDD  R30,Y+4
000336 e0f0      	LDI  R31,0
000337 e2a0      	LDI  R26,LOW(544)
000338 e0b2      	LDI  R27,HIGH(544)
000339 940e 35e5 	CALL SUBOPT_0x0
                 ;// Wait for the AD conversion to complete
                 ;while ((pch->INTFLAGS & ADC_CH_CHIF_bm)==0);
                 _0x3:
00033b 01f8      	MOVW R30,R16
00033c 81a3      	LDD  R26,Z+3
00033d 70a1      	ANDI R26,LOW(0x1)
00033e f3e1      	BREQ _0x3
                 ;// Clear the interrupt flag
                 ;pch->INTFLAGS=ADC_CH_CHIF_bm;
00033f c04f      	RJMP _0x210002D
                 ;// Read the AD conversion result
                 ;((unsigned char *) &data)[0]=pch->RESL;
                 ;((unsigned char *) &data)[1]=pch->RESH;
                 ;return data;
                 ;}
                 ; .FEND
                 ;
                 ;// ADCA sweeped channel(s) data read function
                 ;// for software triggered mode
                 ;void adca_sweep_read(unsigned char nch, unsigned int *pdata)
                 ;{
                 ;ADC_CH_t *pch=&ADCA.CH0;
                 ;unsigned char i,j,m;
                 ;
                 ;// Sweep starts with channel 0
                 ;j=ADC_CH0START_bm;
                 ;	nch -> Y+8
                 ;	*pdata -> Y+6
                 ;	*pch -> R16,R17
                 ;	i -> R19
                 ;	j -> R18
                 ;	m -> R21
                 ;// Prepare the AD conversion start mask for the sweeped channel(s)
                 ;m=0;
                 ;i=0;
                 ;do
                 ;  {
                 ;  m|=j;
                 ;  j<<=1;
                 ;  }
                 ;while (++i<nch);
                 ;// Ensure the interrupt flags are cleared
                 ;ADCA.INTFLAGS=ADCA.INTFLAGS;
                 ;// Start the AD conversion for the sweeped channel(s)
                 ;ADCA.CTRLA=(ADCA.CTRLA & (ADC_DMASEL_gm | ADC_FLUSH_bm | ADC_ENABLE_bm)) | m;
                 ;// Read and store the AD conversion results for all the sweeped channels
                 ;for (i=0; i<nch; i++)
                 ;    {
                 ;    // Wait for the AD conversion to complete
                 ;    while ((pch->INTFLAGS & ADC_CH_CHIF_bm)==0);
                 ;    // Clear the interrupt flag
                 ;    pch->INTFLAGS=ADC_CH_CHIF_bm;
                 ;    // Read the AD conversion result
                 ;    ((unsigned char *) pdata)[0]=pch->RESL;
                 ;    ((unsigned char *) pdata)[1]=pch->RESH;
                 ;    pdata++;
                 ;    pch++;
                 ;    }
                 ;}
                 ;
                 ;// ADCB initialization
                 ;void adcb_init(void)
                 ;{
                 _adcb_init:
                 ; .FSTART _adcb_init
                 ;// ADCB is enabled
                 ;// Resolution: 12 Bits
                 ;// Load the calibration value for 12 Bit resolution
                 ;// from the signature row
                 ;ADCB.CALL=read_calibration_byte(PROD_SIGNATURES_START+ADCBCAL0_offset);
000340 e2a4      	LDI  R26,LOW(36)
000341 dfa3      	RCALL _read_calibration_byte
000342 93e0 024c 	STS  588,R30
                 ;ADCB.CALH=read_calibration_byte(PROD_SIGNATURES_START+ADCBCAL1_offset);
000344 e2a5      	LDI  R26,LOW(37)
000345 df9f      	RCALL _read_calibration_byte
000346 93e0 024d 	STS  589,R30
                 ;
                 ;// Free Running mode: Off
                 ;// Conversion mode: Unsigned
                 ;ADCB.CTRLB=(0<<ADC_CONMODE_bp) | ADC_RESOLUTION_12BIT_gc;
000348 e0e0      	LDI  R30,LOW(0)
000349 93e0 0241 	STS  577,R30
                 ;
                 ;// Clock frequency: 1000,000 kHz
                 ;ADCB.PRESCALER=ADC_PRESCALER_DIV32_gc;
00034b e0e3      	LDI  R30,LOW(3)
00034c 93e0 0244 	STS  580,R30
                 ;
                 ;// Reference: Internal Vcc/1.6
                 ;// Temperature reference: Off
                 ;ADCB.REFCTRL=ADC_REFSEL_VCC_gc | (0<<ADC_TEMPREF_bp) | (0<<ADC_BANDGAP_bp);
00034e e1e0      	LDI  R30,LOW(16)
00034f 93e0 0242 	STS  578,R30
                 ;
                 ;// Initialize the ADC Compare register
                 ;ADCB.CMPL=0x00;
000351 e0e0      	LDI  R30,LOW(0)
000352 93e0 0258 	STS  600,R30
                 ;ADCB.CMPH=0x00;
000354 93e0 0259 	STS  601,R30
                 ;
                 ;// ADC channel 0 gain: 1
                 ;// ADC channel 0 input mode: Single-ended positive input signal
                 ;ADCB.CH0.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
000356 e0e1      	LDI  R30,LOW(1)
000357 93e0 0260 	STS  608,R30
                 ;
                 ;// ADC channel 0 positive input: ADC0 pin
                 ;// ADC channel 0 negative input: GND
                 ;ADCB.CH0.MUXCTRL=ADC_CH_MUXPOS_PIN0_gc;
000359 e0e0      	LDI  R30,LOW(0)
00035a 93e0 0261 	STS  609,R30
                 ;
                 ;// ADC channel 1 gain: 1
                 ;// ADC channel 1 input mode: Single-ended positive input signal
                 ;ADCB.CH1.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
00035c e0e1      	LDI  R30,LOW(1)
00035d 93e0 0268 	STS  616,R30
                 ;
                 ;// ADC channel 1 positive input: ADC1 pin
                 ;// ADC channel 1 negative input: GND
                 ;ADCB.CH1.MUXCTRL=ADC_CH_MUXPOS_PIN1_gc;
00035f e0e8      	LDI  R30,LOW(8)
000360 93e0 0269 	STS  617,R30
                 ;
                 ;// ADC channel 2 gain: 1
                 ;// ADC channel 2 input mode: Single-ended positive input signal
                 ;ADCB.CH2.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
000362 e0e1      	LDI  R30,LOW(1)
000363 93e0 0270 	STS  624,R30
                 ;
                 ;// ADC channel 2 positive input: ADC2 pin
                 ;// ADC channel 2 negative input: GND
                 ;ADCB.CH2.MUXCTRL=ADC_CH_MUXPOS_PIN2_gc;
000365 e1e0      	LDI  R30,LOW(16)
000366 93e0 0271 	STS  625,R30
                 ;
                 ;// ADC channel 3 gain: 1
                 ;// ADC channel 3 input mode: Single-ended positive input signal
                 ;ADCB.CH3.CTRL=(0<<ADC_CH_START_bp) | ADC_CH_GAIN_1X_gc | ADC_CH_INPUTMODE_SINGLEENDED_gc;
000368 e0e1      	LDI  R30,LOW(1)
000369 93e0 0278 	STS  632,R30
                 ;
                 ;// ADC channel 3 positive input: ADC3 pin
                 ;// ADC channel 3 negative input: GND
                 ;ADCB.CH3.MUXCTRL=ADC_CH_MUXPOS_PIN3_gc;
00036b e1e8      	LDI  R30,LOW(24)
00036c 93e0 0279 	STS  633,R30
                 ;
                 ;// AD conversion is started by software
                 ;ADCB.EVCTRL=ADC_EVACT_NONE_gc;
00036e e0e0      	LDI  R30,LOW(0)
00036f 93e0 0243 	STS  579,R30
                 ;
                 ;// Channel 0 interrupt: Disabled
                 ;ADCB.CH0.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000371 93e0 0262 	STS  610,R30
                 ;// Channel 1 interrupt: Disabled
                 ;ADCB.CH1.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000373 93e0 026a 	STS  618,R30
                 ;// Channel 2 interrupt: Disabled
                 ;ADCB.CH2.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000375 93e0 0272 	STS  626,R30
                 ;// Channel 3 interrupt: Disabled
                 ;ADCB.CH3.INTCTRL=ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_OFF_gc;
000377 93e0 027a 	STS  634,R30
                 ;
                 ;// Enable the ADC
                 ;ADCB.CTRLA|=ADC_ENABLE_bm;
000379 91e0 0240 	LDS  R30,576
00037b 60e1      	ORI  R30,1
00037c 93e0 0240 	STS  576,R30
                 ;// Insert a delay to allow the ADC common mode voltage to stabilize
                 ;delay_us(2);
                 _0x210002E:
                +
00037e e185     +LDI R24 , LOW ( 21 )
                +__DELAY_USB_LOOP :
00037f 958a     +DEC R24
000380 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 21
                 ;}
000381 9508      	RET
                 ; .FEND
                 ;
                 ;// ADCB channel data read function using polled mode
                 ;unsigned int adcb_read(unsigned char channel)
                 ;{
                 _adcb_read:
                 ; .FSTART _adcb_read
                 ;ADC_CH_t *pch=&ADCB.CH0+channel;
                 ;unsigned int data;
                 ;
                 ;// Start the AD conversion
                 ;pch->CTRL|= 1<<ADC_CH_START_bp;
000382 93aa      	ST   -Y,R26
000383 940e 42e6 	CALL __SAVELOCR4
                 ;	channel -> Y+4
                 ;	*pch -> R16,R17
                 ;	data -> R18,R19
000385 81ec      	LDD  R30,Y+4
000386 e0f0      	LDI  R31,0
000387 e6a0      	LDI  R26,LOW(608)
000388 e0b2      	LDI  R27,HIGH(608)
000389 940e 35e5 	CALL SUBOPT_0x0
                 ;// Wait for the AD conversion to complete
                 ;while ((pch->INTFLAGS & ADC_CH_CHIF_bm)==0);
                 _0xF:
00038b 01f8      	MOVW R30,R16
00038c 81a3      	LDD  R26,Z+3
00038d 70a1      	ANDI R26,LOW(0x1)
00038e f3e1      	BREQ _0xF
                 ;// Clear the interrupt flag
                 ;pch->INTFLAGS=ADC_CH_CHIF_bm;
                 _0x210002D:
00038f 01d8      	MOVW R26,R16
000390 9613      	ADIW R26,3
000391 e0e1      	LDI  R30,LOW(1)
000392 93ec      	ST   X,R30
                 ;// Read the AD conversion result
                 ;((unsigned char *) &data)[0]=pch->RESL;
000393 01f8      	MOVW R30,R16
000394 8124      	LDD  R18,Z+4
                 ;((unsigned char *) &data)[1]=pch->RESH;
000395 8135      	LDD  R19,Z+5
                 ;return data;
000396 01f9      	MOVW R30,R18
000397 940e 42ed 	CALL __LOADLOCR4
000399 9625      	ADIW R28,5
00039a 9508      	RET
                 ;}
                 ; .FEND
                 ;
                 ;// ADCB sweeped channel(s) data read function
                 ;// for software triggered mode
                 ;void adcb_sweep_read(unsigned char nch, unsigned int *pdata)
                 ;{
                 ;ADC_CH_t *pch=&ADCB.CH0;
                 ;unsigned char i,j,m;
                 ;
                 ;// Sweep starts with channel 0
                 ;j=ADC_CH0START_bm;
                 ;	nch -> Y+8
                 ;	*pdata -> Y+6
                 ;	*pch -> R16,R17
                 ;	i -> R19
                 ;	j -> R18
                 ;	m -> R21
                 ;// Prepare the AD conversion start mask for the sweeped channel(s)
                 ;m=0;
                 ;i=0;
                 ;do
                 ;  {
                 ;  m|=j;
                 ;  j<<=1;
                 ;  }
                 ;while (++i<nch);
                 ;// Ensure the interrupt flags are cleared
                 ;ADCB.INTFLAGS=ADCB.INTFLAGS;
                 ;// Start the AD conversion for the sweeped channel(s)
                 ;ADCB.CTRLA=(ADCB.CTRLA & (ADC_DMASEL_gm | ADC_FLUSH_bm | ADC_ENABLE_bm)) | m;
                 ;// Read and store the AD conversion results for all the sweeped channels
                 ;for (i=0; i<nch; i++)
                 ;    {
                 ;    // Wait for the AD conversion to complete
                 ;    while ((pch->INTFLAGS & ADC_CH_CHIF_bm)==0);
                 ;    // Clear the interrupt flag
                 ;    pch->INTFLAGS=ADC_CH_CHIF_bm;
                 ;    // Read the AD conversion result
                 ;    ((unsigned char *) pdata)[0]=pch->RESL;
                 ;    ((unsigned char *) pdata)[1]=pch->RESH;
                 ;    pdata++;
                 ;    pch++;
                 ;    }
                 ;}
                 ;#include "datafile.c"
                 ;//файл для протокола общения с ПК
                 ;/*Байт  //
                 ;1    Маркер (А5)
                 ;2    Ток ФЭУ
                 ;2    Расход помпы.
                 ;2    Напряжение ФЭУ.
                 ;2    Сигнал  усилителя
                 ;2    Доп АЦП 3
                 ;2    Температура воздуха в аналитической кювете.
                 ;2    Температура контрольной кюветы
                 ;2     Давление воздуха в аналитической кювете.
                 ;1    Доп АЦП 1 младший байт
                 ;1    Доп АЦП 1 старший байт
                 ;1    Доп АЦП 2 младший байт
                 ;1    Доп АЦП 2 старший байт
                 ;1	Статус
                 ;1	Контрольная сумма
                 ;*/
                 ;//#include "usart_init.c"
                 ;
                 ;// USARTC0 Receiver buffer
                 ;//char RX_BUFFER_SIZE_USARTC0=30;
                 ;//char rx_counter_usartc0=0;
                 ;//char rx_wr_index_usartc0=0,rx_rd_index_usartc0=0,rx_counter_usartc0=0;
                 ;//char rx_buffer_usartc0[RX_BUFFER_SIZE_USARTC0];
                 ;
                 ;/* NAME file */
                 ;char fNAME[15];
                 ;bit flag_sd=0;
                 ;char tSDACARD[45];
                 ;bool izm=0;
                 ;char potok1[36];
                 ;unsigned int T_analog,Tempf_K;
                 ;bool CLBR=0;
                 ;unsigned int KALC_PULS;
                 ;
                 ;char RX_BUFFER_SIZE_USARTC0=1;
                 ;char rx_buffer_usartc0[30];
                 ;unsigned char rx_wr_index_usartc0=0,rx_rd_index_usartc0=0,rx_counter_usartc0=0;
                 ;
                 ;
                 ;#define VREF 2050.0 // ADC reference voltage [mV]
                 ;#define CHANNELS 4
                 ;unsigned char nn,xx;
                 ;
                 ;// Store ADC result
                 ;unsigned int adcb_store[4];//0,1,2,3
                 ;unsigned int adca_store[4];//4,5,6,7
                 ;
                 ;unsigned int adcb_SD[4];//0,1,2,3
                 ;unsigned int adca_SD[4];//4,5,6,7
                 ;
                 ;unsigned char B5upr;
                 ;
                 ;////////////////////////////////////////////
                 ;char A0[6];//данные пакета A0
                 ;char AF[18];//данные пакета AF
                 ;char AA[4];//данные пакета AA
                 ;char A1[27];//данные пакета A1
                 ;///////////////////////////////////////////
                 ;char AD[6];//данные пакета AD
                 ;char A7[3];//данные пакета A7
                 ;char p77[4];//данные пакета 77
                 ;char p76[4];//данные пакета 76
                 ;char ch,l;//переменная перебора для контольного байта
                 ;char AB[12];//данные пакета AB
                 ;char A2[4];//данные пакета A2
                 ;char AE[10];//данные пакета AE
                 ;char p6A[6];//данные пакета 6a
                 ;////////////////////////////////////////////////////
                 ;char A4[6];//данные пакета A4
                 ;char p58[6];//данные пакета 58
                 ;char A6[6];//данные пакета A6
                 ;//////////////////////////////////////////////////
                 ;unsigned char check_sum=0;
                 ;char info[30];
                 ;//перебор s1
                 ;//usart функции в этом файле!!
                 ;unsigned char status;
                 ;char data;
                 ;//////////usart функции в этом файле!!
                 ;
                 ;//bit mb=0;//0-малый 1-большой пакет
                 ;//отправка
                 ;char S0[23];
                 ;//прием
                 ;char S1[30];
                 ;
                 ;char send=0;
                 ;char indexs1=0;
                 ;char s1suml;
                 ;char Mx=0xFF,markerok=0,dl=0;
                 
                 	.DSEG
                 ;
                 ;char B5buf[4];
                 ;
                 ;void topk(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _topk:
                 ; .FSTART _topk
                 ;
                 ;unsigned char x,SUM;
                 ;PORTR.OUT=PORTR.OUT&0b11111110;
00039b 931a      	ST   -Y,R17
00039c 930a      	ST   -Y,R16
                 ;	x -> R17
                 ;	SUM -> R16
00039d 91e0 07e4 	LDS  R30,2020
00039f 7fee      	ANDI R30,0xFE
0003a0 93e0 07e4 	STS  2020,R30
                 ;
                 ;for (x=0,SUM=0;x<22;x++)
0003a2 e010      	LDI  R17,LOW(0)
0003a3 e000      	LDI  R16,LOW(0)
                 _0x1D:
0003a4 3116      	CPI  R17,22
0003a5 f488      	BRSH _0x1E
                 ;{
                 ;if (x!=0) SUM=SUM+S0[x];
0003a6 3010      	CPI  R17,0
0003a7 f031      	BREQ _0x1F
0003a8 2fe1      	MOV  R30,R17
0003a9 e0f0      	LDI  R31,0
0003aa 5eec      	SUBI R30,LOW(-_S0)
0003ab 4cfe      	SBCI R31,HIGH(-_S0)
0003ac 81e0      	LD   R30,Z
0003ad 0f0e      	ADD  R16,R30
                 ;putchar(S0[x]);
                 _0x1F:
0003ae 2fe1      	MOV  R30,R17
0003af e0f0      	LDI  R31,0
0003b0 5eec      	SUBI R30,LOW(-_S0)
0003b1 4cfe      	SBCI R31,HIGH(-_S0)
0003b2 81a0      	LD   R26,Z
0003b3 940e 0fbc 	CALL _putchar
                 ;}
0003b5 5f1f      	SUBI R17,-1
0003b6 cfed      	RJMP _0x1D
                 _0x1E:
                 ;S0[22]=SUM;
                +
0003b7 9300 312a+STS _S0 + ( 22 ) , R16
                 	__PUTBMRN _S0,22,16
                 ;putchar(S0[22]);
                +
0003b9 91a0 312a+LDS R26 , _S0 + ( 22 )
                 	__GETB2MN _S0,22
0003bb 940e 0fbc 	CALL _putchar
                 ;PORTR.OUT=PORTR.OUT|0b00000001;
0003bd 91e0 07e4 	LDS  R30,2020
0003bf 60e1      	ORI  R30,1
0003c0 93e0 07e4 	STS  2020,R30
                 ;}
0003c2 9109      	LD   R16,Y+
0003c3 9119      	LD   R17,Y+
0003c4 9508      	RET
                 ; .FEND
                 ;
                 ;//при первом включении прописать данные
                 ;void initzavod (void)
                 ;{
                 _initzavod:
                 ; .FSTART _initzavod
                 ;//заводская инициализация A0
                 ;A0[0]=0xA0;
0003c5 eae0      	LDI  R30,LOW(160)
0003c6 93e0 3077 	STS  _A0,R30
                 ;A0[1]=0x30;
0003c8 e3e0      	LDI  R30,LOW(48)
                +
0003c9 93e0 3078+STS _A0 + ( 1 ) , R30
                 	__PUTB1MN _A0,1
                 ;A0[2]=0x33;
0003cb e3e3      	LDI  R30,LOW(51)
                +
0003cc 93e0 3079+STS _A0 + ( 2 ) , R30
                 	__PUTB1MN _A0,2
                 ;A0[3]=0x35;
0003ce e3e5      	LDI  R30,LOW(53)
                +
0003cf 93e0 307a+STS _A0 + ( 3 ) , R30
                 	__PUTB1MN _A0,3
                 ;A0[4]=0x00;
0003d1 e0e0      	LDI  R30,LOW(0)
                +
0003d2 93e0 307b+STS _A0 + ( 4 ) , R30
                 	__PUTB1MN _A0,4
                 ;l=sizeof(A0);
0003d4 940e 35ef 	CALL SUBOPT_0x1
                 ;//checksum2(A0);
                 ;for(ch=1,A0[l-1]=0;ch<l-1;ch++)
0003d6 58e9      	SUBI R30,LOW(-_A0)
0003d7 4cff      	SBCI R31,HIGH(-_A0)
0003d8 e0a0      	LDI  R26,LOW(0)
0003d9 83a0      	STD  Z+0,R26
                 _0x21:
0003da 940e 35fa 	CALL SUBOPT_0x2
0003dc 940e 35ff 	CALL SUBOPT_0x3
0003de f43c      	BRGE _0x22
                 ;{
                 ;A0[l-1]=A0[l-1]+A0[ch];
0003df 940e 35fa 	CALL SUBOPT_0x2
0003e1 940e 3605 	CALL SUBOPT_0x4
                 ;}
0003e3 940e 3613 	CALL SUBOPT_0x5
0003e5 cff4      	RJMP _0x21
                 _0x22:
                 ;l=0;
0003e6 e0e0      	LDI  R30,LOW(0)
0003e7 93e0 30c0 	STS  _l,R30
                 ;
                 ;AF[0]=0xAF;
0003e9 eaef      	LDI  R30,LOW(175)
0003ea 93e0 307d 	STS  _AF,R30
                 ;AF[1]=0x01;
0003ec e0e1      	LDI  R30,LOW(1)
                +
0003ed 93e0 307e+STS _AF + ( 1 ) , R30
                 	__PUTB1MN _AF,1
                 ;AF[2]=0x63;
0003ef e6e3      	LDI  R30,LOW(99)
                +
0003f0 93e0 307f+STS _AF + ( 2 ) , R30
                 	__PUTB1MN _AF,2
                 ;AF[3]=0x60;
0003f2 e6e0      	LDI  R30,LOW(96)
                +
0003f3 93e0 3080+STS _AF + ( 3 ) , R30
                 	__PUTB1MN _AF,3
                 ;AF[4]=0x64;
0003f5 e6e4      	LDI  R30,LOW(100)
                +
0003f6 93e0 3081+STS _AF + ( 4 ) , R30
                 	__PUTB1MN _AF,4
                 ;AF[5]=0x00;
0003f8 e0e0      	LDI  R30,LOW(0)
                +
0003f9 93e0 3082+STS _AF + ( 5 ) , R30
                 	__PUTB1MN _AF,5
                 ;AF[6]=0x00;
                +
0003fb 93e0 3083+STS _AF + ( 6 ) , R30
                 	__PUTB1MN _AF,6
                 ;AF[7]=0x00;
                +
0003fd 93e0 3084+STS _AF + ( 7 ) , R30
                 	__PUTB1MN _AF,7
                 ;AF[8]=0x00;
                +
0003ff 93e0 3085+STS _AF + ( 8 ) , R30
                 	__PUTB1MN _AF,8
                 ;AF[9]=0x00;
                +
000401 93e0 3086+STS _AF + ( 9 ) , R30
                 	__PUTB1MN _AF,9
                 ;AF[10]=0x00;
                +
000403 93e0 3087+STS _AF + ( 10 ) , R30
                 	__PUTB1MN _AF,10
                 ;AF[11]=0x00;
                +
000405 93e0 3088+STS _AF + ( 11 ) , R30
                 	__PUTB1MN _AF,11
                 ;AF[12]=0x98;
000407 e9e8      	LDI  R30,LOW(152)
                +
000408 93e0 3089+STS _AF + ( 12 ) , R30
                 	__PUTB1MN _AF,12
                 ;AF[13]=0x3A;
00040a e3ea      	LDI  R30,LOW(58)
                +
00040b 93e0 308a+STS _AF + ( 13 ) , R30
                 	__PUTB1MN _AF,13
                 ;AF[14]=0xDC;
00040d edec      	LDI  R30,LOW(220)
                +
00040e 93e0 308b+STS _AF + ( 14 ) , R30
                 	__PUTB1MN _AF,14
                 ;AF[15]=0x05;
000410 e0e5      	LDI  R30,LOW(5)
                +
000411 93e0 308c+STS _AF + ( 15 ) , R30
                 	__PUTB1MN _AF,15
                 ;AF[16]=0x05;
                +
000413 93e0 308d+STS _AF + ( 16 ) , R30
                 	__PUTB1MN _AF,16
                 ;l=sizeof(AF);
000415 940e 3619 	CALL SUBOPT_0x6
                 ;for(ch=1,AF[l-1]=0;ch<l-1;ch++)
000417 58e3      	SUBI R30,LOW(-_AF)
000418 4cff      	SBCI R31,HIGH(-_AF)
000419 e0a0      	LDI  R26,LOW(0)
00041a 83a0      	STD  Z+0,R26
                 _0x24:
00041b 940e 35fa 	CALL SUBOPT_0x2
00041d 940e 35ff 	CALL SUBOPT_0x3
00041f f43c      	BRGE _0x25
                 ;AF[l-1]=AF[l-1]+AF[ch];
000420 940e 35fa 	CALL SUBOPT_0x2
000422 940e 3620 	CALL SUBOPT_0x7
000424 940e 3613 	CALL SUBOPT_0x5
000426 cff4      	RJMP _0x24
                 _0x25:
000427 e0e0      	LDI  R30,LOW(0)
000428 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;AA[0]=0xAA;
00042a eaea      	LDI  R30,LOW(170)
00042b 93e0 308f 	STS  _AA,R30
                 ;AA[1]=0x60;
00042d e6e0      	LDI  R30,LOW(96)
                +
00042e 93e0 3090+STS _AA + ( 1 ) , R30
                 	__PUTB1MN _AA,1
                 ;AA[2]=0xEA;
000430 eeea      	LDI  R30,LOW(234)
                +
000431 93e0 3091+STS _AA + ( 2 ) , R30
                 	__PUTB1MN _AA,2
                 ;l=sizeof(AA);
000433 940e 362e 	CALL SUBOPT_0x8
                 ;for(ch=1,AA[l-1]=0;ch<l-1;ch++)
000435 57e1      	SUBI R30,LOW(-_AA)
000436 4cff      	SBCI R31,HIGH(-_AA)
000437 e0a0      	LDI  R26,LOW(0)
000438 83a0      	STD  Z+0,R26
                 _0x27:
000439 940e 35fa 	CALL SUBOPT_0x2
00043b 940e 35ff 	CALL SUBOPT_0x3
00043d f43c      	BRGE _0x28
                 ;AA[l-1]=AA[l-1]+AA[ch];
00043e 940e 35fa 	CALL SUBOPT_0x2
000440 940e 3635 	CALL SUBOPT_0x9
000442 940e 3613 	CALL SUBOPT_0x5
000444 cff4      	RJMP _0x27
                 _0x28:
000445 e0e0      	LDI  R30,LOW(0)
000446 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;A2[0]=0xA2;
000448 eae2      	LDI  R30,LOW(162)
000449 93e0 30cd 	STS  _A2,R30
                 ;A2[1]=0x01;
00044b e0e1      	LDI  R30,LOW(1)
                +
00044c 93e0 30ce+STS _A2 + ( 1 ) , R30
                 	__PUTB1MN _A2,1
                 ;A2[2]=0x00;
00044e e0e0      	LDI  R30,LOW(0)
                +
00044f 93e0 30cf+STS _A2 + ( 2 ) , R30
                 	__PUTB1MN _A2,2
                 ;l=sizeof(A2);
000451 940e 362e 	CALL SUBOPT_0x8
                 ;for(ch=1,A2[l-1]=0;ch<l-1;ch++)
000453 53e3      	SUBI R30,LOW(-_A2)
000454 4cff      	SBCI R31,HIGH(-_A2)
000455 e0a0      	LDI  R26,LOW(0)
000456 83a0      	STD  Z+0,R26
                 _0x2A:
000457 940e 35fa 	CALL SUBOPT_0x2
000459 940e 35ff 	CALL SUBOPT_0x3
00045b f43c      	BRGE _0x2B
                 ;A2[l-1]=A2[l-1]+A2[ch];
00045c 940e 35fa 	CALL SUBOPT_0x2
00045e 940e 3643 	CALL SUBOPT_0xA
000460 940e 3613 	CALL SUBOPT_0x5
000462 cff4      	RJMP _0x2A
                 _0x2B:
000463 e0e0      	LDI  R30,LOW(0)
000464 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;AD[0]=0xAD;
000466 eaed      	LDI  R30,LOW(173)
000467 93e0 30ae 	STS  _AD,R30
                 ;AD[1]=0x5A;
000469 e5ea      	LDI  R30,LOW(90)
                +
00046a 93e0 30af+STS _AD + ( 1 ) , R30
                 	__PUTB1MN _AD,1
                 ;AD[2]=0x00;
00046c e0e0      	LDI  R30,LOW(0)
                +
00046d 93e0 30b0+STS _AD + ( 2 ) , R30
                 	__PUTB1MN _AD,2
                 ;AD[3]=0x5A;
00046f e5ea      	LDI  R30,LOW(90)
                +
000470 93e0 30b1+STS _AD + ( 3 ) , R30
                 	__PUTB1MN _AD,3
                 ;AD[4]=0x00;
000472 e0e0      	LDI  R30,LOW(0)
                +
000473 93e0 30b2+STS _AD + ( 4 ) , R30
                 	__PUTB1MN _AD,4
                 ;l=sizeof(AD);
000475 940e 35ef 	CALL SUBOPT_0x1
                 ;for(ch=1,AD[l-1]=0;ch<l-1;ch++)
000477 55e2      	SUBI R30,LOW(-_AD)
000478 4cff      	SBCI R31,HIGH(-_AD)
000479 e0a0      	LDI  R26,LOW(0)
00047a 83a0      	STD  Z+0,R26
                 _0x2D:
00047b 940e 35fa 	CALL SUBOPT_0x2
00047d 940e 35ff 	CALL SUBOPT_0x3
00047f f43c      	BRGE _0x2E
                 ;AD[l-1]=AD[l-1]+AD[ch];
000480 940e 35fa 	CALL SUBOPT_0x2
000482 940e 3651 	CALL SUBOPT_0xB
000484 940e 3613 	CALL SUBOPT_0x5
000486 cff4      	RJMP _0x2D
                 _0x2E:
000487 e0e0      	LDI  R30,LOW(0)
000488 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;
                 ;A6[0]=0xA6;
00048a eae6      	LDI  R30,LOW(166)
00048b 93e0 30ed 	STS  _A6,R30
                 ;A6[1]=0x00;
00048d e0e0      	LDI  R30,LOW(0)
                +
00048e 93e0 30ee+STS _A6 + ( 1 ) , R30
                 	__PUTB1MN _A6,1
                 ;A6[2]=0x00;
                +
000490 93e0 30ef+STS _A6 + ( 2 ) , R30
                 	__PUTB1MN _A6,2
                 ;A6[3]=0x01;
000492 e0e1      	LDI  R30,LOW(1)
                +
000493 93e0 30f0+STS _A6 + ( 3 ) , R30
                 	__PUTB1MN _A6,3
                 ;A6[4]=0x00;
000495 e0e0      	LDI  R30,LOW(0)
                +
000496 93e0 30f1+STS _A6 + ( 4 ) , R30
                 	__PUTB1MN _A6,4
                 ;l=sizeof(A6);
000498 940e 35ef 	CALL SUBOPT_0x1
                 ;for(ch=1,A6[l-1]=0;ch<l-1;ch++)
00049a 51e3      	SUBI R30,LOW(-_A6)
00049b 4cff      	SBCI R31,HIGH(-_A6)
00049c e0a0      	LDI  R26,LOW(0)
00049d 83a0      	STD  Z+0,R26
                 _0x30:
00049e 940e 35fa 	CALL SUBOPT_0x2
0004a0 940e 35ff 	CALL SUBOPT_0x3
0004a2 f43c      	BRGE _0x31
                 ;A6[l-1]=A6[l-1]+A6[ch];
0004a3 940e 35fa 	CALL SUBOPT_0x2
0004a5 940e 365f 	CALL SUBOPT_0xC
0004a7 940e 3613 	CALL SUBOPT_0x5
0004a9 cff4      	RJMP _0x30
                 _0x31:
0004aa e0e0      	LDI  R30,LOW(0)
0004ab 93e0 30c0 	STS  _l,R30
                 ;
                 ;A1[0]=0xA1;
0004ad eae1      	LDI  R30,LOW(161)
0004ae 93e0 3093 	STS  _A1,R30
                 ;A1[1]=0x53;
0004b0 e5e3      	LDI  R30,LOW(83)
                +
0004b1 93e0 3094+STS _A1 + ( 1 ) , R30
                 	__PUTB1MN _A1,1
                 ;A1[2]=0x75;
0004b3 e7e5      	LDI  R30,LOW(117)
                +
0004b4 93e0 3095+STS _A1 + ( 2 ) , R30
                 	__PUTB1MN _A1,2
                 ;A1[3]=0x6E;
0004b6 e6ee      	LDI  R30,LOW(110)
                +
0004b7 93e0 3096+STS _A1 + ( 3 ) , R30
                 	__PUTB1MN _A1,3
                 ;A1[4]=0x20;
0004b9 e2e0      	LDI  R30,LOW(32)
                +
0004ba 93e0 3097+STS _A1 + ( 4 ) , R30
                 	__PUTB1MN _A1,4
                 ;///////////////
                 ;A1[5]=0x53;
0004bc e5e3      	LDI  R30,LOW(83)
                +
0004bd 93e0 3098+STS _A1 + ( 5 ) , R30
                 	__PUTB1MN _A1,5
                 ;A1[6]=0x65;
0004bf e6e5      	LDI  R30,LOW(101)
                +
0004c0 93e0 3099+STS _A1 + ( 6 ) , R30
                 	__PUTB1MN _A1,6
                 ;A1[7]=0x70;
0004c2 e7e0      	LDI  R30,LOW(112)
                +
0004c3 93e0 309a+STS _A1 + ( 7 ) , R30
                 	__PUTB1MN _A1,7
                 ;A1[8]=0x20;
0004c5 e2e0      	LDI  R30,LOW(32)
                +
0004c6 93e0 309b+STS _A1 + ( 8 ) , R30
                 	__PUTB1MN _A1,8
                 ;A1[9]=0x32;
0004c8 e3e2      	LDI  R30,LOW(50)
                +
0004c9 93e0 309c+STS _A1 + ( 9 ) , R30
                 	__PUTB1MN _A1,9
                 ;///////////////
                 ;A1[10]=0x31;
0004cb e3e1      	LDI  R30,LOW(49)
                +
0004cc 93e0 309d+STS _A1 + ( 10 ) , R30
                 	__PUTB1MN _A1,10
                 ;A1[11]=0x20;
0004ce e2e0      	LDI  R30,LOW(32)
                +
0004cf 93e0 309e+STS _A1 + ( 11 ) , R30
                 	__PUTB1MN _A1,11
                 ;A1[12]=0x32;
0004d1 e3e2      	LDI  R30,LOW(50)
                +
0004d2 93e0 309f+STS _A1 + ( 12 ) , R30
                 	__PUTB1MN _A1,12
                 ;A1[13]=0x33;
0004d4 e3e3      	LDI  R30,LOW(51)
                +
0004d5 93e0 30a0+STS _A1 + ( 13 ) , R30
                 	__PUTB1MN _A1,13
                 ;A1[14]=0x3A;
0004d7 e3ea      	LDI  R30,LOW(58)
                +
0004d8 93e0 30a1+STS _A1 + ( 14 ) , R30
                 	__PUTB1MN _A1,14
                 ;/////////////
                 ;A1[15]=0x33;
0004da e3e3      	LDI  R30,LOW(51)
                +
0004db 93e0 30a2+STS _A1 + ( 15 ) , R30
                 	__PUTB1MN _A1,15
                 ;A1[16]=0x36;
0004dd e3e6      	LDI  R30,LOW(54)
                +
0004de 93e0 30a3+STS _A1 + ( 16 ) , R30
                 	__PUTB1MN _A1,16
                 ;A1[17]=0x3A;
0004e0 e3ea      	LDI  R30,LOW(58)
                +
0004e1 93e0 30a4+STS _A1 + ( 17 ) , R30
                 	__PUTB1MN _A1,17
                 ;A1[18]=0x32;
0004e3 e3e2      	LDI  R30,LOW(50)
                +
0004e4 93e0 30a5+STS _A1 + ( 18 ) , R30
                 	__PUTB1MN _A1,18
                 ;A1[19]=0x34;
0004e6 e3e4      	LDI  R30,LOW(52)
                +
0004e7 93e0 30a6+STS _A1 + ( 19 ) , R30
                 	__PUTB1MN _A1,19
                 ;////////////
                 ;A1[20]=0x20;
0004e9 e2e0      	LDI  R30,LOW(32)
                +
0004ea 93e0 30a7+STS _A1 + ( 20 ) , R30
                 	__PUTB1MN _A1,20
                 ;A1[21]=0x32;
0004ec e3e2      	LDI  R30,LOW(50)
                +
0004ed 93e0 30a8+STS _A1 + ( 21 ) , R30
                 	__PUTB1MN _A1,21
                 ;A1[22]=0x30;
0004ef e3e0      	LDI  R30,LOW(48)
                +
0004f0 93e0 30a9+STS _A1 + ( 22 ) , R30
                 	__PUTB1MN _A1,22
                 ;A1[23]=0x31;
0004f2 e3e1      	LDI  R30,LOW(49)
                +
0004f3 93e0 30aa+STS _A1 + ( 23 ) , R30
                 	__PUTB1MN _A1,23
                 ;A1[24]=0x34;
0004f5 e3e4      	LDI  R30,LOW(52)
                +
0004f6 93e0 30ab+STS _A1 + ( 24 ) , R30
                 	__PUTB1MN _A1,24
                 ;A1[25]=0x00;
0004f8 e0e0      	LDI  R30,LOW(0)
                +
0004f9 93e0 30ac+STS _A1 + ( 25 ) , R30
                 	__PUTB1MN _A1,25
                 ;//B0
                 ;//////////////
                 ;l=sizeof(A1);
0004fb 940e 366d 	CALL SUBOPT_0xD
                 ;for(ch=1,A1[l-1]=0;ch<l-1;ch++)
0004fd 56ed      	SUBI R30,LOW(-_A1)
0004fe 4cff      	SBCI R31,HIGH(-_A1)
0004ff e0a0      	LDI  R26,LOW(0)
000500 83a0      	STD  Z+0,R26
                 _0x33:
000501 940e 35fa 	CALL SUBOPT_0x2
000503 940e 35ff 	CALL SUBOPT_0x3
000505 f43c      	BRGE _0x34
                 ;A1[l-1]=A1[l-1]+A1[ch];
000506 940e 35fa 	CALL SUBOPT_0x2
000508 940e 3674 	CALL SUBOPT_0xE
00050a 940e 3613 	CALL SUBOPT_0x5
00050c cff4      	RJMP _0x33
                 _0x34:
00050d e0e0      	LDI  R30,LOW(0)
00050e 93e0 30c0 	STS  _l,R30
                 ;A7[0]=0xA7;
000510 eae7      	LDI  R30,LOW(167)
000511 93e0 30b4 	STS  _A7,R30
                 ;A7[1]=0x42;
000513 e4e2      	LDI  R30,LOW(66)
                +
000514 93e0 30b5+STS _A7 + ( 1 ) , R30
                 	__PUTB1MN _A7,1
                 ;l=sizeof(A7);
000516 940e 3682 	CALL SUBOPT_0xF
                 ;for(ch=1,A7[l-1]=0;ch<l-1;ch++)
000518 54ec      	SUBI R30,LOW(-_A7)
000519 4cff      	SBCI R31,HIGH(-_A7)
00051a e0a0      	LDI  R26,LOW(0)
00051b 83a0      	STD  Z+0,R26
                 _0x36:
00051c 940e 35fa 	CALL SUBOPT_0x2
00051e 940e 35ff 	CALL SUBOPT_0x3
000520 f43c      	BRGE _0x37
                 ;A7[l-1]=A7[l-1]+A7[ch];
000521 940e 35fa 	CALL SUBOPT_0x2
000523 940e 3689 	CALL SUBOPT_0x10
000525 940e 3613 	CALL SUBOPT_0x5
000527 cff4      	RJMP _0x36
                 _0x37:
000528 e0e0      	LDI  R30,LOW(0)
000529 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;p77[0]=0x77;
00052b e7e7      	LDI  R30,LOW(119)
00052c 93e0 30b7 	STS  _p77,R30
                 ;p77[1]=0x00;
00052e e0e0      	LDI  R30,LOW(0)
                +
00052f 93e0 30b8+STS _p77 + ( 1 ) , R30
                 	__PUTB1MN _p77,1
                 ;p77[2]=0xFC;
000531 efec      	LDI  R30,LOW(252)
                +
000532 93e0 30b9+STS _p77 + ( 2 ) , R30
                 	__PUTB1MN _p77,2
                 ;//p77[3]=0xFC;
                 ;l=sizeof(p77);
000534 940e 362e 	CALL SUBOPT_0x8
                 ;for(ch=1,p77[l-1]=0;ch<l-1;ch++)
000536 54e9      	SUBI R30,LOW(-_p77)
000537 4cff      	SBCI R31,HIGH(-_p77)
000538 e0a0      	LDI  R26,LOW(0)
000539 83a0      	STD  Z+0,R26
                 _0x39:
00053a 940e 35fa 	CALL SUBOPT_0x2
00053c 940e 35ff 	CALL SUBOPT_0x3
00053e f43c      	BRGE _0x3A
                 ;p77[l-1]=p77[l-1]+p77[ch];
00053f 940e 35fa 	CALL SUBOPT_0x2
000541 940e 3697 	CALL SUBOPT_0x11
000543 940e 3613 	CALL SUBOPT_0x5
000545 cff4      	RJMP _0x39
                 _0x3A:
000546 e0e0      	LDI  R30,LOW(0)
000547 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;AB[0]=0xAB;
000549 eaeb      	LDI  R30,LOW(171)
00054a 93e0 30c1 	STS  _AB,R30
                 ;AB[1]=0x75;
00054c e7e5      	LDI  R30,LOW(117)
                +
00054d 93e0 30c2+STS _AB + ( 1 ) , R30
                 	__PUTB1MN _AB,1
                 ;AB[2]=0x6E;
00054f e6ee      	LDI  R30,LOW(110)
                +
000550 93e0 30c3+STS _AB + ( 2 ) , R30
                 	__PUTB1MN _AB,2
                 ;AB[3]=0x37;
000552 e3e7      	LDI  R30,LOW(55)
                +
000553 93e0 30c4+STS _AB + ( 3 ) , R30
                 	__PUTB1MN _AB,3
                 ;AB[4]=0x30;
000555 e3e0      	LDI  R30,LOW(48)
                +
000556 93e0 30c5+STS _AB + ( 4 ) , R30
                 	__PUTB1MN _AB,4
                 ;AB[5]=0x32;
000558 e3e2      	LDI  R30,LOW(50)
                +
000559 93e0 30c6+STS _AB + ( 5 ) , R30
                 	__PUTB1MN _AB,5
                 ;AB[6]=0x62;
00055b e6e2      	LDI  R30,LOW(98)
                +
00055c 93e0 30c7+STS _AB + ( 6 ) , R30
                 	__PUTB1MN _AB,6
                 ;AB[7]=0x0E;
00055e e0ee      	LDI  R30,LOW(14)
                +
00055f 93e0 30c8+STS _AB + ( 7 ) , R30
                 	__PUTB1MN _AB,7
                 ;AB[8]=0x04;
000561 e0e4      	LDI  R30,LOW(4)
                +
000562 93e0 30c9+STS _AB + ( 8 ) , R30
                 	__PUTB1MN _AB,8
                 ;AB[9]=0x14;
000564 e1e4      	LDI  R30,LOW(20)
                +
000565 93e0 30ca+STS _AB + ( 9 ) , R30
                 	__PUTB1MN _AB,9
                 ;AB[10]=0x0E;
000567 e0ee      	LDI  R30,LOW(14)
                +
000568 93e0 30cb+STS _AB + ( 10 ) , R30
                 	__PUTB1MN _AB,10
                 ;//
                 ;l=sizeof(AB);
00056a 940e 36a5 	CALL SUBOPT_0x12
                 ;for(ch=1,AB[l-1]=0;ch<l-1;ch++)
00056c 53ef      	SUBI R30,LOW(-_AB)
00056d 4cff      	SBCI R31,HIGH(-_AB)
00056e e0a0      	LDI  R26,LOW(0)
00056f 83a0      	STD  Z+0,R26
                 _0x3C:
000570 940e 35fa 	CALL SUBOPT_0x2
000572 940e 35ff 	CALL SUBOPT_0x3
000574 f43c      	BRGE _0x3D
                 ;AB[l-1]=AB[l-1]+AB[ch];
000575 940e 35fa 	CALL SUBOPT_0x2
000577 940e 36ac 	CALL SUBOPT_0x13
000579 940e 3613 	CALL SUBOPT_0x5
00057b cff4      	RJMP _0x3C
                 _0x3D:
00057c e0e0      	LDI  R30,LOW(0)
00057d 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;AE[0]=0xAE;
00057f eaee      	LDI  R30,LOW(174)
000580 93e0 30d1 	STS  _AE,R30
                 ;AE[1]=0xFF;
000582 efef      	LDI  R30,LOW(255)
                +
000583 93e0 30d2+STS _AE + ( 1 ) , R30
                 	__PUTB1MN _AE,1
                 ;AE[2]=0xFF;
                +
000585 93e0 30d3+STS _AE + ( 2 ) , R30
                 	__PUTB1MN _AE,2
                 ;AE[3]=0xFF;
                +
000587 93e0 30d4+STS _AE + ( 3 ) , R30
                 	__PUTB1MN _AE,3
                 ;AE[4]=0xFF;
                +
000589 93e0 30d5+STS _AE + ( 4 ) , R30
                 	__PUTB1MN _AE,4
                 ;AE[5]=0xFF;
                +
00058b 93e0 30d6+STS _AE + ( 5 ) , R30
                 	__PUTB1MN _AE,5
                 ;AE[6]=0xFF;
                +
00058d 93e0 30d7+STS _AE + ( 6 ) , R30
                 	__PUTB1MN _AE,6
                 ;AE[7]=0xFF;
                +
00058f 93e0 30d8+STS _AE + ( 7 ) , R30
                 	__PUTB1MN _AE,7
                 ;AE[8]=0xFF;
                +
000591 93e0 30d9+STS _AE + ( 8 ) , R30
                 	__PUTB1MN _AE,8
                 ;//AE[9]=0x14;
                 ;l=sizeof(AE);
000593 940e 36ba 	CALL SUBOPT_0x14
                 ;for(ch=1,AE[l-1]=0;ch<l-1;ch++)
000595 52ef      	SUBI R30,LOW(-_AE)
000596 4cff      	SBCI R31,HIGH(-_AE)
000597 e0a0      	LDI  R26,LOW(0)
000598 83a0      	STD  Z+0,R26
                 _0x3F:
000599 940e 35fa 	CALL SUBOPT_0x2
00059b 940e 35ff 	CALL SUBOPT_0x3
00059d f43c      	BRGE _0x40
                 ;AE[l-1]=AE[l-1]+AE[ch];
00059e 940e 35fa 	CALL SUBOPT_0x2
0005a0 940e 36c1 	CALL SUBOPT_0x15
0005a2 940e 3613 	CALL SUBOPT_0x5
0005a4 cff4      	RJMP _0x3F
                 _0x40:
0005a5 e0e0      	LDI  R30,LOW(0)
0005a6 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;A4[0]=0xA4;
0005a8 eae4      	LDI  R30,LOW(164)
0005a9 93e0 30e1 	STS  _A4,R30
                 ;A4[1]=0x00;
0005ab e0e0      	LDI  R30,LOW(0)
                +
0005ac 93e0 30e2+STS _A4 + ( 1 ) , R30
                 	__PUTB1MN _A4,1
                 ;A4[2]=0xFC;
0005ae efec      	LDI  R30,LOW(252)
                +
0005af 93e0 30e3+STS _A4 + ( 2 ) , R30
                 	__PUTB1MN _A4,2
                 ;A4[3]=0x68;
0005b1 e6e8      	LDI  R30,LOW(104)
                +
0005b2 93e0 30e4+STS _A4 + ( 3 ) , R30
                 	__PUTB1MN _A4,3
                 ;A4[4]=0xF7;
0005b4 efe7      	LDI  R30,LOW(247)
                +
0005b5 93e0 30e5+STS _A4 + ( 4 ) , R30
                 	__PUTB1MN _A4,4
                 ;//
                 ;l=sizeof(A4);
0005b7 940e 35ef 	CALL SUBOPT_0x1
                 ;for(ch=1,A4[l-1]=0;ch<l-1;ch++)
0005b9 51ef      	SUBI R30,LOW(-_A4)
0005ba 4cff      	SBCI R31,HIGH(-_A4)
0005bb e0a0      	LDI  R26,LOW(0)
0005bc 83a0      	STD  Z+0,R26
                 _0x42:
0005bd 940e 35fa 	CALL SUBOPT_0x2
0005bf 940e 35ff 	CALL SUBOPT_0x3
0005c1 f43c      	BRGE _0x43
                 ;A4[l-1]=A4[l-1]+A4[ch];
0005c2 940e 35fa 	CALL SUBOPT_0x2
0005c4 940e 36cf 	CALL SUBOPT_0x16
0005c6 940e 3613 	CALL SUBOPT_0x5
0005c8 cff4      	RJMP _0x42
                 _0x43:
0005c9 e0e0      	LDI  R30,LOW(0)
0005ca 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;p58[0]=0x58;
0005cc e5e8      	LDI  R30,LOW(88)
0005cd 93e0 30e7 	STS  _p58,R30
                 ;p58[1]=0x00;
0005cf e0e0      	LDI  R30,LOW(0)
                +
0005d0 93e0 30e8+STS _p58 + ( 1 ) , R30
                 	__PUTB1MN _p58,1
                 ;p58[2]=0x00;
                +
0005d2 93e0 30e9+STS _p58 + ( 2 ) , R30
                 	__PUTB1MN _p58,2
                 ;p58[3]=0x01;
0005d4 e0e1      	LDI  R30,LOW(1)
                +
0005d5 93e0 30ea+STS _p58 + ( 3 ) , R30
                 	__PUTB1MN _p58,3
                 ;p58[4]=0x00;
0005d7 e0e0      	LDI  R30,LOW(0)
                +
0005d8 93e0 30eb+STS _p58 + ( 4 ) , R30
                 	__PUTB1MN _p58,4
                 ;//
                 ;l=sizeof(p58);
0005da 940e 35ef 	CALL SUBOPT_0x1
                 ;for(ch=1,p58[l-1]=0;ch<l-1;ch++)
0005dc 51e9      	SUBI R30,LOW(-_p58)
0005dd 4cff      	SBCI R31,HIGH(-_p58)
0005de e0a0      	LDI  R26,LOW(0)
0005df 83a0      	STD  Z+0,R26
                 _0x45:
0005e0 940e 35fa 	CALL SUBOPT_0x2
0005e2 940e 35ff 	CALL SUBOPT_0x3
0005e4 f43c      	BRGE _0x46
                 ;p58[l-1]=p58[l-1]+p58[ch];
0005e5 940e 35fa 	CALL SUBOPT_0x2
0005e7 940e 36dd 	CALL SUBOPT_0x17
0005e9 940e 3613 	CALL SUBOPT_0x5
0005eb cff4      	RJMP _0x45
                 _0x46:
0005ec e0e0      	LDI  R30,LOW(0)
0005ed 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;p76[0]=0x76;
0005ef e7e6      	LDI  R30,LOW(118)
0005f0 93e0 30bb 	STS  _p76,R30
                 ;p76[1]=0xFF;
0005f2 efef      	LDI  R30,LOW(255)
                +
0005f3 93e0 30bc+STS _p76 + ( 1 ) , R30
                 	__PUTB1MN _p76,1
                 ;p76[2]=0xFF;
                +
0005f5 93e0 30bd+STS _p76 + ( 2 ) , R30
                 	__PUTB1MN _p76,2
                 ;//p77[3]=0xFE;
                 ;l=sizeof(p76);
0005f7 940e 362e 	CALL SUBOPT_0x8
                 ;for(ch=1,p76[l-1]=0;ch<l-1;ch++)
0005f9 54e5      	SUBI R30,LOW(-_p76)
0005fa 4cff      	SBCI R31,HIGH(-_p76)
0005fb e0a0      	LDI  R26,LOW(0)
0005fc 83a0      	STD  Z+0,R26
                 _0x48:
0005fd 940e 35fa 	CALL SUBOPT_0x2
0005ff 940e 35ff 	CALL SUBOPT_0x3
000601 f43c      	BRGE _0x49
                 ;p76[l-1]=p76[l-1]+p76[ch];
000602 940e 35fa 	CALL SUBOPT_0x2
000604 940e 36eb 	CALL SUBOPT_0x18
000606 940e 3613 	CALL SUBOPT_0x5
000608 cff4      	RJMP _0x48
                 _0x49:
000609 e0e0      	LDI  R30,LOW(0)
00060a 93e0 30c0 	STS  _l,R30
                 ;
                 ;
                 ;
                 ;p6A[0]=0x6A;
00060c e6ea      	LDI  R30,LOW(106)
00060d 93e0 30db 	STS  _p6A,R30
                 ;p6A[1]=0x00;
00060f e0e0      	LDI  R30,LOW(0)
                +
000610 93e0 30dc+STS _p6A + ( 1 ) , R30
                 	__PUTB1MN _p6A,1
                 ;p6A[2]=0x00;
                +
000612 93e0 30dd+STS _p6A + ( 2 ) , R30
                 	__PUTB1MN _p6A,2
                 ;p6A[3]=0x00;
                +
000614 93e0 30de+STS _p6A + ( 3 ) , R30
                 	__PUTB1MN _p6A,3
                 ;p6A[4]=0x00;
                +
000616 93e0 30df+STS _p6A + ( 4 ) , R30
                 	__PUTB1MN _p6A,4
                 ;//p77[3]=0xFE;
                 ;l=sizeof(p6A);
000618 940e 35ef 	CALL SUBOPT_0x1
                 ;for(ch=1,p6A[l-1]=0;ch<l-1;ch++)
00061a 52e5      	SUBI R30,LOW(-_p6A)
00061b 4cff      	SBCI R31,HIGH(-_p6A)
00061c e0a0      	LDI  R26,LOW(0)
00061d 83a0      	STD  Z+0,R26
                 _0x4B:
00061e 940e 35fa 	CALL SUBOPT_0x2
000620 940e 35ff 	CALL SUBOPT_0x3
000622 f43c      	BRGE _0x4C
                 ;p6A[l-1]=p6A[l-1]+p6A[ch];
000623 940e 35fa 	CALL SUBOPT_0x2
000625 940e 36f9 	CALL SUBOPT_0x19
000627 940e 3613 	CALL SUBOPT_0x5
000629 cff4      	RJMP _0x4B
                 _0x4C:
00062a e0e0      	LDI  R30,LOW(0)
00062b 93e0 30c0 	STS  _l,R30
                 ;
                 ;}
00062d 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;//инициализация массива для передачи %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                 ;void reginit (void)
                 ;{
                 _reginit:
                 ; .FSTART _reginit
                 ;S0[0]=0xA5;// Маркер (А5)
00062e eae5      	LDI  R30,LOW(165)
00062f 93e0 3114 	STS  _S0,R30
                 ;//тест
                 ;S0[1]=0x40;// Ток ФЭУ
000631 e4e0      	LDI  R30,LOW(64)
                +
000632 93e0 3115+STS _S0 + ( 1 ) , R30
                 	__PUTB1MN _S0,1
                 ;S0[2]=0x1F;// Ток ФЭУ
000634 e1ef      	LDI  R30,LOW(31)
                +
000635 93e0 3116+STS _S0 + ( 2 ) , R30
                 	__PUTB1MN _S0,2
                 ;
                 ;//S0[1]=0x98;// Ток ФЭУ
                 ;//S0[2]=0x3A;// Ток ФЭУ
                 ;
                 ;//S0[3]=0x30;// Расход помпы
                 ;//S0[4]=0x75;// Расход помпы.
                 ;
                 ;S0[3]=0x78;// Расход помпы.
000637 e7e8      	LDI  R30,LOW(120)
                +
000638 93e0 3117+STS _S0 + ( 3 ) , R30
                 	__PUTB1MN _S0,3
                 ;S0[4]=0x00; // Расход помпы.
00063a e0e0      	LDI  R30,LOW(0)
                +
00063b 93e0 3118+STS _S0 + ( 4 ) , R30
                 	__PUTB1MN _S0,4
                 ;
                 ;S0[5]=0xBB;// Напряжение ФЭУ
00063d ebeb      	LDI  R30,LOW(187)
                +
00063e 93e0 3119+STS _S0 + ( 5 ) , R30
                 	__PUTB1MN _S0,5
                 ;S0[6]=0x0B; // Напряжение ФЭУ
000640 e0eb      	LDI  R30,LOW(11)
                +
000641 93e0 311a+STS _S0 + ( 6 ) , R30
                 	__PUTB1MN _S0,6
                 ;
                 ;//S0[7]=0x00;// Сигнал  усилителя
                 ;//S0[8]=0xFF; //Сигнал  усилителя
                 ;
                 ;
                 ;S0[9]=0x00;// Доп АЦП 3
000643 e0e0      	LDI  R30,LOW(0)
                +
000644 93e0 311d+STS _S0 + ( 9 ) , R30
                 	__PUTB1MN _S0,9
                 ;S0[10]=0x08; //Доп АЦП 3
000646 e0e8      	LDI  R30,LOW(8)
                +
000647 93e0 311e+STS _S0 + ( 10 ) , R30
                 	__PUTB1MN _S0,10
                 ;
                 ;S0[11]=0xAD;// Температура воздуха в аналитической кювете.
000649 eaed      	LDI  R30,LOW(173)
                +
00064a 93e0 311f+STS _S0 + ( 11 ) , R30
                 	__PUTB1MN _S0,11
                 ;S0[12]=0x0D; //Температура воздуха в аналитической кювете.
00064c e0ed      	LDI  R30,LOW(13)
                +
00064d 93e0 3120+STS _S0 + ( 12 ) , R30
                 	__PUTB1MN _S0,12
                 ;
                 ;S0[13]=0xAC;// Температура контрольной кюветы
00064f eaec      	LDI  R30,LOW(172)
                +
000650 93e0 3121+STS _S0 + ( 13 ) , R30
                 	__PUTB1MN _S0,13
                 ;S0[14]=0x0D; //Температура контрольной кюветы
000652 e0ed      	LDI  R30,LOW(13)
                +
000653 93e0 3122+STS _S0 + ( 14 ) , R30
                 	__PUTB1MN _S0,14
                 ;
                 ;//S0[15]=0x15; //!! // Давление воздуха в аналитической кювете. мл
                 ;//S0[16]=0x0C; //!!//Давление воздуха в аналитической кювете.     ст
                 ;
                 ;S0[15]=0x10;  // Давление воздуха в аналитической кювете. мл
000655 e1e0      	LDI  R30,LOW(16)
                +
000656 93e0 3123+STS _S0 + ( 15 ) , R30
                 	__PUTB1MN _S0,15
                 ;S0[16]=0x27;
000658 e2e7      	LDI  R30,LOW(39)
                +
000659 93e0 3124+STS _S0 + ( 16 ) , R30
                 	__PUTB1MN _S0,16
                 ;
                 ;S0[17]=0x00; // Доп АЦП 1 младший байт
00065b e0e0      	LDI  R30,LOW(0)
                +
00065c 93e0 3125+STS _S0 + ( 17 ) , R30
                 	__PUTB1MN _S0,17
                 ;S0[18]=0x04; // Доп АЦП 1 старший байт
00065e e0e4      	LDI  R30,LOW(4)
                +
00065f 93e0 3126+STS _S0 + ( 18 ) , R30
                 	__PUTB1MN _S0,18
                 ;
                 ;S0[19]=0x00; // Доп АЦП 2 младший байт
000661 e0e0      	LDI  R30,LOW(0)
                +
000662 93e0 3127+STS _S0 + ( 19 ) , R30
                 	__PUTB1MN _S0,19
                 ;S0[20]=0x06; // Доп АЦП 2 старший байт
000664 e0e6      	LDI  R30,LOW(6)
                +
000665 93e0 3128+STS _S0 + ( 20 ) , R30
                 	__PUTB1MN _S0,20
                 ;
                 ;//S0[21]=0b11111011; // Статус
                 ;S0[21]=0;
000667 e0e0      	LDI  R30,LOW(0)
                +
000668 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ;//S0[22]=checksum(); // Контрольная сумма
                 ;}
00066a 9508      	RET
                 ; .FEND
                 ;
                 ;/*
                 ;запрос на сброс мк F5,5F,check
                 ;Ответ f5,f5, chek;
                 ;*/
                 ;////////////////////////////////////////////////////////////////////////
                 ;//Программный RESET
                 ;//void (*funcptr)( void ) = 0x0000;
                 ;//unsigned char tmp=RST_SWRST_bm;
                 ;//CCP = CCP_IOREG_gc;
                 ;//RST.CTRL=RST_SWRST_bm;
                 ;//Программный RESET
                 ;////////////////////////////////////////////////////////////////////////
                 ;//очистка строки
                 ;void clrs1(void)
                 ;{
                 ;memset(S1, 0, sizeof(S1));
                 ;}
                 ;#include "port_init.c"
                 ;// Ports initialization
                 ;void ports_init(void)
                 ; 0000 0011 {
                 _ports_init:
                 ; .FSTART _ports_init
                 ;// PORTA initialization
                 ;PORTA.OUT=0x00;
00066b e0e0      	LDI  R30,LOW(0)
00066c 93e0 0604 	STS  1540,R30
                 ;PORTA.DIR=0x00;
00066e 93e0 0600 	STS  1536,R30
                 ;PORTA.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000670 93e0 0610 	STS  1552,R30
                 ;PORTA.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000672 93e0 0611 	STS  1553,R30
                 ;PORTA.PIN2CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000674 93e0 0612 	STS  1554,R30
                 ;PORTA.PIN3CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000676 93e0 0613 	STS  1555,R30
                 ;PORTA.PIN4CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000678 93e0 0614 	STS  1556,R30
                 ;PORTA.PIN5CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00067a 93e0 0615 	STS  1557,R30
                 ;PORTA.PIN6CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00067c 93e0 0616 	STS  1558,R30
                 ;PORTA.PIN7CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00067e 93e0 0617 	STS  1559,R30
                 ;
                 ;PORTA.INTCTRL=(PORTA.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
000680 91e0 0609 	LDS  R30,1545
000682 7fe0      	ANDI R30,LOW(0xF0)
000683 93e0 0609 	STS  1545,R30
                 ;PORTA.INT0MASK=0x00;
000685 e0e0      	LDI  R30,LOW(0)
000686 93e0 060a 	STS  1546,R30
                 ;PORTA.INT1MASK=0x00;
000688 93e0 060b 	STS  1547,R30
                 ;
                 ;// PORTB initialization
                 ;PORTB.OUT=0x00;
00068a 93e0 0624 	STS  1572,R30
                 ;PORTB.DIR=0x00;
00068c 93e0 0620 	STS  1568,R30
                 ;PORTB.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00068e 93e0 0630 	STS  1584,R30
                 ;PORTB.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000690 93e0 0631 	STS  1585,R30
                 ;PORTB.PIN2CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000692 93e0 0632 	STS  1586,R30
                 ;PORTB.PIN3CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000694 93e0 0633 	STS  1587,R30
                 ;PORTB.PIN4CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000696 93e0 0634 	STS  1588,R30
                 ;PORTB.PIN5CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000698 93e0 0635 	STS  1589,R30
                 ;PORTB.PIN6CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00069a 93e0 0636 	STS  1590,R30
                 ;PORTB.PIN7CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00069c 93e0 0637 	STS  1591,R30
                 ;PORTB.INTCTRL=(PORTB.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
00069e 91e0 0629 	LDS  R30,1577
0006a0 7fe0      	ANDI R30,LOW(0xF0)
0006a1 93e0 0629 	STS  1577,R30
                 ;
                 ;PORTB.INT0MASK=0x00;
0006a3 e0e0      	LDI  R30,LOW(0)
0006a4 93e0 062a 	STS  1578,R30
                 ;PORTB.INT1MASK=0x00;
0006a6 93e0 062b 	STS  1579,R30
                 ;
                 ;// PORTC initialization
                 ;PORTC.OUT=0x18;
0006a8 940e 3707 	CALL SUBOPT_0x1A
                 ;// Bit0: Output
                 ;// Bit1: Input
                 ;// Bit2: Input
                 ;// Bit3: Output
                 ;// Bit4: Output
                 ;// Bit5: Output
                 ;// Bit6: Input
                 ;// Bit7: Output
                 ;PORTC.DIR=0xB9;
                 ;PORTC.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006aa e0e0      	LDI  R30,LOW(0)
0006ab 93e0 0650 	STS  1616,R30
                 ;//PORTC.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
                 ;PORTC.PIN1CTRL=PORT_OPC_PULLUP_gc | PORT_ISC_BOTHEDGES_gc;
0006ad e1e8      	LDI  R30,LOW(24)
0006ae 93e0 0651 	STS  1617,R30
                 ;
                 ;PORTC.PIN2CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006b0 e0e0      	LDI  R30,LOW(0)
0006b1 93e0 0652 	STS  1618,R30
                 ;PORTC.PIN3CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006b3 93e0 0653 	STS  1619,R30
                 ;PORTC.PIN4CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006b5 93e0 0654 	STS  1620,R30
                 ;PORTC.PIN5CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006b7 93e0 0655 	STS  1621,R30
                 ;PORTC.PIN6CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006b9 93e0 0656 	STS  1622,R30
                 ;PORTC.PIN7CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006bb 93e0 0657 	STS  1623,R30
                 ;
                 ;PORTC.INTCTRL=(PORTC.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
0006bd 91e0 0649 	LDS  R30,1609
0006bf 7fe0      	ANDI R30,LOW(0xF0)
0006c0 93e0 0649 	STS  1609,R30
                 ;PORTC.INT0MASK=0x00;
0006c2 e0e0      	LDI  R30,LOW(0)
0006c3 93e0 064a 	STS  1610,R30
                 ;PORTC.INT1MASK=0x00;
0006c5 93e0 064b 	STS  1611,R30
                 ;
                 ;// PORTD initialization
                 ;// OUT register
                 ;PORTD.OUT=0x80;
0006c7 e8e0      	LDI  R30,LOW(128)
0006c8 93e0 0664 	STS  1636,R30
                 ;// Bit0: Input
                 ;// Bit1: Input
                 ;// Bit2: Input
                 ;// Bit3: Input
                 ;// Bit4: Input
                 ;// Bit5: Input
                 ;// Bit6: Input
                 ;// Bit7: Output
                 ;PORTD.DIR=0x80;
0006ca 93e0 0660 	STS  1632,R30
                 ;
                 ;PORTD.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006cc e0e0      	LDI  R30,LOW(0)
0006cd 93e0 0670 	STS  1648,R30
                 ;PORTD.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006cf 93e0 0671 	STS  1649,R30
                 ;PORTD.PIN2CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006d1 93e0 0672 	STS  1650,R30
                 ;PORTD.PIN3CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006d3 93e0 0673 	STS  1651,R30
                 ;PORTD.PIN4CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006d5 93e0 0674 	STS  1652,R30
                 ;PORTD.PIN5CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006d7 93e0 0675 	STS  1653,R30
                 ;PORTD.PIN6CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006d9 93e0 0676 	STS  1654,R30
                 ;PORTD.PIN7CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006db 93e0 0677 	STS  1655,R30
                 ;
                 ;PORTD.INTCTRL=(PORTD.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
0006dd 91e0 0669 	LDS  R30,1641
0006df 7fe0      	ANDI R30,LOW(0xF0)
0006e0 93e0 0669 	STS  1641,R30
                 ;PORTD.INT0MASK=0x00;
0006e2 e0e0      	LDI  R30,LOW(0)
0006e3 93e0 066a 	STS  1642,R30
                 ;PORTD.INT1MASK=0x00;
0006e5 93e0 066b 	STS  1643,R30
                 ;
                 ;// PORTE initialization
                 ;// OUT register
                 ;PORTE.OUT=0x00;
0006e7 93e0 0684 	STS  1668,R30
                 ;PORTE.DIR=0x00;
0006e9 93e0 0680 	STS  1664,R30
                 ;PORTE.DIR=PORTE.DIR|0b00010000;
0006eb 91e0 0680 	LDS  R30,1664
0006ed 61e0      	ORI  R30,0x10
0006ee 93e0 0680 	STS  1664,R30
                 ;
                 ;PORTE.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;//PORT_OPC_PULLUP_gc | PORT_ISC_BOTHEDGES_gc;
0006f0 e0e0      	LDI  R30,LOW(0)
0006f1 93e0 0690 	STS  1680,R30
                 ;PORTE.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;//PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006f3 93e0 0691 	STS  1681,R30
                 ;PORTE.PIN2CTRL=PORT_OPC_PULLDOWN_gc | PORT_ISC_BOTHEDGES_gc;
0006f5 e1e0      	LDI  R30,LOW(16)
0006f6 93e0 0692 	STS  1682,R30
                 ;PORTE.PIN3CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006f8 e0e0      	LDI  R30,LOW(0)
0006f9 93e0 0693 	STS  1683,R30
                 ;PORTE.PIN4CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006fb 93e0 0694 	STS  1684,R30
                 ;PORTE.PIN5CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006fd 93e0 0695 	STS  1685,R30
                 ;PORTE.PIN6CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
0006ff 93e0 0696 	STS  1686,R30
                 ;PORTE.PIN7CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000701 93e0 0697 	STS  1687,R30
                 ;
                 ;PORTE.INTCTRL=(PORTE.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
000703 91e0 0689 	LDS  R30,1673
000705 7fe0      	ANDI R30,LOW(0xF0)
000706 93e0 0689 	STS  1673,R30
                 ;PORTE.INT0MASK=0x00;
000708 e0e0      	LDI  R30,LOW(0)
000709 93e0 068a 	STS  1674,R30
                 ;PORTE.INT1MASK=0x00;
00070b 93e0 068b 	STS  1675,R30
                 ;
                 ;// PORTF initialization
                 ;PORTF.OUT=0x00;
00070d 93e0 06a4 	STS  1700,R30
                 ;PORTF.DIR=0x00;
00070f 93e0 06a0 	STS  1696,R30
                 ;PORTF.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000711 93e0 06b0 	STS  1712,R30
                 ;PORTF.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000713 93e0 06b1 	STS  1713,R30
                 ;PORTF.PIN2CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000715 93e0 06b2 	STS  1714,R30
                 ;PORTF.PIN3CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000717 93e0 06b3 	STS  1715,R30
                 ;PORTF.PIN4CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000719 93e0 06b4 	STS  1716,R30
                 ;PORTF.PIN6CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00071b 93e0 06b6 	STS  1718,R30
                 ;PORTF.PIN7CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00071d 93e0 06b7 	STS  1719,R30
                 ;
                 ;PORTF.INTCTRL=(PORTF.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
00071f 91e0 06a9 	LDS  R30,1705
000721 7fe0      	ANDI R30,LOW(0xF0)
000722 93e0 06a9 	STS  1705,R30
                 ;PORTF.INT0MASK=0x00;
000724 e0e0      	LDI  R30,LOW(0)
000725 93e0 06aa 	STS  1706,R30
                 ;PORTF.INT1MASK=0x00;
000727 93e0 06ab 	STS  1707,R30
                 ;
                 ;// PORTR initialization
                 ;PORTR.OUT=0x0F;
000729 e0ef      	LDI  R30,LOW(15)
00072a 93e0 07e4 	STS  2020,R30
                 ;PORTR.DIR=0x0F;
00072c 93e0 07e0 	STS  2016,R30
                 ;PORTR.PIN0CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
00072e e0e0      	LDI  R30,LOW(0)
00072f 93e0 07f0 	STS  2032,R30
                 ;PORTR.PIN1CTRL=PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc;
000731 93e0 07f1 	STS  2033,R30
                 ;PORTR.INTCTRL=(PORTR.INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
                 ;    PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc;
000733 91e0 07e9 	LDS  R30,2025
000735 7fe0      	ANDI R30,LOW(0xF0)
000736 93e0 07e9 	STS  2025,R30
                 ;PORTR.INT0MASK=0x00;
000738 e0e0      	LDI  R30,LOW(0)
000739 93e0 07ea 	STS  2026,R30
                 ;PORTR.INT1MASK=0x00;
00073b 93e0 07eb 	STS  2027,R30
                 ;}
00073d 9508      	RET
                 ; .FEND
                 ;#include "data_time.c"
                 ;// RTC32 initialization
                 ;
                 ;#define RTC32_XOSC_FAILED 0
                 ;#define RTC32_BATT_FAILED 1
                 ;#define RTC32_COUNT_OK 2
                 ;#define RTC32_DISABLED 3
                 ;long unsigned int X;
                 ;long unsigned int date1;
                 ;bool newdate=0;
                 ;bool newtime=0;
                 ;long unsigned int time1;
                 ;eeprom long unsigned int Xsave;
                 ;unsigned char bufdt[5];
                 ;
                 ;
                 ;void get_CNTRTC(long unsigned int * X)
                 ; 0000 0012 {
                 _get_CNTRTC:
                 ; .FSTART _get_CNTRTC
                 ;RTC32.SYNCCTRL = RTC32_SYNCCNT_bm;
00073e 93ba      	ST   -Y,R27
00073f 93aa      	ST   -Y,R26
                 ;	*X -> Y+0
000740 e1e0      	LDI  R30,LOW(16)
000741 93e0 0421 	STS  1057,R30
                 ;while (RTC32.SYNCCTRL & RTC32_SYNCCNT_bm);
                 _0x4D:
000743 91e0 0421 	LDS  R30,1057
000745 71e0      	ANDI R30,LOW(0x10)
000746 f7e1      	BRNE _0x4D
                 ;*X=RTC32.CNT;
000747 91e0 0424 	LDS  R30,1060
000749 91f0 0425 	LDS  R31,1060+1
00074b 9160 0426 	LDS  R22,1060+2
00074d 9170 0427 	LDS  R23,1060+3
00074f 81a8      	LD   R26,Y
000750 81b9      	LDD  R27,Y+1
000751 940e 424a 	CALL __PUTDP1
                 ;}
                 _0x210002C:
000753 9622      	ADIW R28,2
000754 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;unsigned char rtc32_battery_backup_init(void)
                 ;{
                 ;unsigned char status,s,n,result=RTC32_COUNT_OK;
                 ;
                 ;// Save the Battery Backup System status
                 ;status=VBAT.STATUS;
                 ;	status -> R17
                 ;	s -> R16
                 ;	n -> R19
                 ;	result -> R18
                 ;// Reset the Battery Backup Power-On Flag if it's not valid
                 ;if (status & VBAT_BBPWR_bm) status&= ~VBAT_BBPORF_bm;
                 ;
                 ;// Optimize for speed
                 ;#pragma optsize-
                 ;// Save interrupts enabled/disabled state
                 ;s=SREG;
                 ;// Disable interrupts
                 ;#asm("cli")
                 ;
                 ;// Check if the Battery Backup System had a failure or is not enabled
                 ;if (status & (VBAT_BBBORF_bm | VBAT_BBPORF_bm))
                 ;   {
                 ;   // Signal that the backup battery had a failure
                 ;   if (status & VBAT_BBBORF_bm) result=RTC32_BATT_FAILED;
                 ;   set_rtc32:
                 ;   // Enable the Battery Backup System access and apply a RESET
                 ;   n=(VBAT.CTRL & (~(VBAT_XOSCSEL_bm | VBAT_XOSCEN_bm | VBAT_XOSCFDEN_bm))) |
                 ;     VBAT_ACCEN_bm | VBAT_RESET_bm;
                 ;   CCP=CCP_IOREG_gc;
                 ;   VBAT.CTRL=n;
                 ;   // External 32.768 kHz crystal oscillator low power mode: On
                 ;   OSC.XOSCCTRL|=OSC_X32KLPM_bm;
                 ;   // Enable the 32.768 kHz external oscillator
                 ;   // RTC32 clock frequency: 1024 Hz
                 ;   n=(n & (~VBAT_RESET_bm)) | VBAT_XOSCSEL_bm | VBAT_XOSCEN_bm;
                 ;   CCP=CCP_IOREG_gc;
                 ;   VBAT.CTRL=n;
                 ;
                 ;   // Wait for the external 32.768 kHz crystal oscillator to stabilize
                 ;   while ((VBAT.STATUS & VBAT_XOSCRDY_bm)==0);
                 ;
                 ;   // Enable the 32.768 kHz external oscillator failure detector
                 ;   n|=VBAT_XOSCFDEN_bm;
                 ;   CCP=CCP_IOREG_gc;
                 ;   VBAT.CTRL=n;
                 ;
                 ;   // Make sure that the RTC32 is disabled before initializing it
                 ;   RTC32.CTRL=(0<<RTC32_ENABLE_bp);
                 ;
                 ;   // Wait until the RTC32 is not busy or synchronizing
                 ;   while (RTC32.SYNCCTRL & (RTC32_SYNCBUSY_bm | RTC32_SYNCCNT_bm));
                 ;
                 ;   // Set the RTC32 period register
                 ;   RTC32.PER=0x1400;
                 ;   // Set the RTC32 count register
                 ;   RTC32.CNT=0x0000;
                 ;   // Start the synchronization of the CNT register from
                 ;   // the RTC32 clock to the System Clock domain
                 ;   RTC32.SYNCCTRL|=RTC32_SYNCCNT_bm;
                 ;   // Set the RTC32 compare register
                 ;   RTC32.COMP=0x0400;
                 ;
                 ;   // Enable the RTC32
                 ;   RTC32.CTRL=(1<<RTC32_ENABLE_bp);
                 ;
                 ;   // RTC32 overflow interrupt: Disabled
                 ;   // RTC32 compare interrupt: Low Level
                 ;   RTC32.INTCTRL=RTC32_OVFINTLVL_OFF_gc | RTC32_COMPINTLVL_LO_gc;
                 ;   }
                 ;else
                 ;   {
                 ;   // The Battery Backup System has not had any power loss
                 ;   n=VBAT.CTRL | VBAT_ACCEN_bm;
                 ;
                 ;   // Ensure that the external 32.768 kHz crystal oscillator
                 ;   // and its failure detection are enabled
                 ;   if ((n & (VBAT_XOSCEN_bm | VBAT_XOSCFDEN_bm)) != (VBAT_XOSCEN_bm | VBAT_XOSCFDEN_bm))
                 ;      goto set_rtc32;
                 ;
                 ;   // Enable Battery Backup System access
                 ;   CCP=CCP_IOREG_gc;
                 ;   VBAT.CTRL=n;
                 ;
                 ;   // Check for external 32.768 kHz crystal oscillator failure
                 ;   if (status & VBAT_XOSCFAIL_bm)
                 ;      {
                 ;      // Yes, the external 32.768 kHz crystal oscillator has had a failure,
                 ;      // the RTC counter value is invalid, so it must be initialized again
                 ;
                 ;      // Wait until the RTC32 is not busy or synchronizing
                 ;      while (RTC32.SYNCCTRL & (RTC32_SYNCBUSY_bm | RTC32_SYNCCNT_bm));
                 ;
                 ;      // Set the RTC32 count register
                 ;      RTC32.CNT=0x0000;
                 ;      // Start the synchronization of the CNT register from
                 ;      // the RTC32 clock to the System Clock domain
                 ;      RTC32.SYNCCTRL|=RTC32_SYNCCNT_bm;
                 ;
                 ;      // Signal that the RTC32 was re-initialized because the
                 ;      // 32.768 kHz external oscillator has had a failure
                 ;      result=RTC32_XOSC_FAILED;
                 ;      }
                 ;   }
                 ;
                 ;// Clear the status bits
                 ;VBAT.STATUS=VBAT.STATUS;
                 ;
                 ;// Disable further Battery Backup System access
                 ;n=VBAT.CTRL & (~VBAT_ACCEN_bm);
                 ;CCP=CCP_IOREG_gc;
                 ;VBAT.CTRL=n;
                 ;
                 ;// Restore interrupts enabled/disabled state
                 ;SREG=s;
                 ;// Restore optimization for size if needed
                 ;#pragma optsize_default
                 ;
                 ;return result;
                 ;}
                 ;
                 ;
                 ;
                 ;void rtc32_init_my(void)
                 ;{
                 _rtc32_init_my:
                 ; .FSTART _rtc32_init_my
                 ;   unsigned char n;
                 ;  // Enable Battery Backup System access
                 ;   CCP=CCP_IOREG_gc;
000755 931a      	ST   -Y,R17
                 ;	n -> R17
000756 ede8      	LDI  R30,LOW(216)
000757 bfe4      	OUT  0x34,R30
                 ;   VBAT.CTRL=VBAT.CTRL | VBAT_ACCEN_bm;;
000758 91e0 00f0 	LDS  R30,240
00075a 60e2      	ORI  R30,2
00075b 93e0 00f0 	STS  240,R30
                 ;
                 ;   // External 32.768 kHz crystal oscillator low power mode: Off
                 ;   OSC.XOSCCTRL&= ~OSC_X32KLPM_bm;
00075d 91e0 0052 	LDS  R30,82
00075f 7def      	ANDI R30,0xDF
000760 93e0 0052 	STS  82,R30
                 ;   // Enable the 32.768 kHz external oscillator
                 ;   // RTC32 clock frequency: 1024 Hz
                 ;   //n=(n & (~VBAT_RESET_bm)) | VBAT_XOSCSEL_bm | VBAT_XOSCEN_bm;
                 ;   //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;   // RTC32 clock frequency: 1 Hz
                 ;   n=(n & (~VBAT_RESET_bm)) | VBAT_XOSCEN_bm;
000762 2fe1      	MOV  R30,R17
000763 7fee      	ANDI R30,0xFE
000764 60e8      	ORI  R30,8
000765 2f1e      	MOV  R17,R30
                 ;
                 ;
                 ;   CCP=CCP_IOREG_gc;
000766 ede8      	LDI  R30,LOW(216)
000767 bfe4      	OUT  0x34,R30
                 ;   VBAT.CTRL=n;
000768 9310 00f0 	STS  240,R17
                 ;
                 ;   // Wait for the external 32.768 kHz crystal oscillator to stabilize
                 ;   while ((VBAT.STATUS & VBAT_XOSCRDY_bm)==0);
                 _0x60:
00076a 91e0 00f1 	LDS  R30,241
00076c 70e8      	ANDI R30,LOW(0x8)
00076d f3e1      	BREQ _0x60
                 ;
                 ;   // Enable the 32.768 kHz external oscillator failure detector
                 ;   n|=VBAT_XOSCFDEN_bm;
00076e 6014      	ORI  R17,LOW(4)
                 ;   CCP=CCP_IOREG_gc;
00076f ede8      	LDI  R30,LOW(216)
000770 bfe4      	OUT  0x34,R30
                 ;   VBAT.CTRL=n;
000771 9310 00f0 	STS  240,R17
                 ;
                 ;   // Make sure that the RTC32 is disabled before initializing it
                 ;   RTC32.CTRL=(0<<RTC32_ENABLE_bp);
000773 e0e0      	LDI  R30,LOW(0)
000774 93e0 0420 	STS  1056,R30
                 ;
                 ;   // Wait until the RTC32 is not busy or synchronizing
                 ;   while (RTC32.SYNCCTRL & (RTC32_SYNCBUSY_bm | RTC32_SYNCCNT_bm));
                 _0x63:
000776 91e0 0421 	LDS  R30,1057
000778 71e1      	ANDI R30,LOW(0x11)
000779 f7e1      	BRNE _0x63
                 ;
                 ;   // Set the RTC32 period register
                 ;   //!RTC32.PER=0x1400;
                 ;   RTC32.PER=0xFFFFFFFF;
00077a 940e 370e 	CALL SUBOPT_0x1B
                 ;   // Set the RTC32 count register
                 ;   //при включении время опять установиться, я закаментил строку
                 ;   //RTC32.CNT=1111111111;    //18 марта 2005 года, 01:58:31
                 ;   // Start the synchronization of the CNT register from
                 ;   // the RTC32 clock to the System Clock domain
                 ;   RTC32.SYNCCTRL|=RTC32_SYNCCNT_bm;
00077c 91e0 0421 	LDS  R30,1057
00077e 61e0      	ORI  R30,0x10
00077f 93e0 0421 	STS  1057,R30
                 ;   // Set the RTC32 compare register
                 ;   RTC32.COMP=0x0000;
000781 940e 371b 	CALL SUBOPT_0x1C
000783 93e0 042c 	STS  1068,R30
000785 93f0 042d 	STS  1068+1,R31
000787 9360 042e 	STS  1068+2,R22
000789 9370 042f 	STS  1068+3,R23
                 ;
                 ;   // Enable the RTC32
                 ;   RTC32.CTRL=(1<<RTC32_ENABLE_bp);
00078b e0e1      	LDI  R30,LOW(1)
00078c 93e0 0420 	STS  1056,R30
                 ;
                 ;   // RTC32 overflow interrupt: Medium Level _OFF_gc
                 ;   // RTC32 compare interrupt: Disabled _MED_gc
                 ;   RTC32.INTCTRL=RTC32_OVFINTLVL_OFF_gc | RTC32_COMPINTLVL_OFF_gc;
00078e e0e0      	LDI  R30,LOW(0)
00078f 93e0 0422 	STS  1058,R30
                 ;}
000791 9119      	LD   R17,Y+
000792 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;//RTC32.CNT=1111111111;    //18 марта 2005 года, 01:58:31
                 ;void set_CNTRTC(void)
                 ;{
                 _set_CNTRTC:
                 ; .FSTART _set_CNTRTC
                 ;CCP=CCP_IOREG_gc;
000793 ede8      	LDI  R30,LOW(216)
000794 bfe4      	OUT  0x34,R30
                 ;//RTC32 is disabled t
                 ;RTC32.CTRL=(0<<RTC32_ENABLE_bp);
000795 e0e0      	LDI  R30,LOW(0)
000796 93e0 0420 	STS  1056,R30
                 ;// Wait until the RTC32 is not busy or synchronizing
                 ;while (RTC32.SYNCCTRL & (RTC32_SYNCBUSY_bm | RTC32_SYNCCNT_bm));
                 _0x66:
000798 91e0 0421 	LDS  R30,1057
00079a 71e1      	ANDI R30,LOW(0x11)
00079b f7e1      	BRNE _0x66
                 ;RTC32.PER=0xFFFFFFFF;
00079c 940e 370e 	CALL SUBOPT_0x1B
                 ;RTC32.CNT=X;
00079e 940e 3720 	CALL SUBOPT_0x1D
0007a0 940e 3729 	CALL SUBOPT_0x1E
                 ;// the RTC32 clock to the System Clock domain
                 ;RTC32.SYNCCTRL|=RTC32_SYNCCNT_bm;
0007a2 91e0 0421 	LDS  R30,1057
0007a4 61e0      	ORI  R30,0x10
0007a5 93e0 0421 	STS  1057,R30
                 ;// Enable the RTC32
                 ;RTC32.CTRL=(1<<RTC32_ENABLE_bp);
0007a7 e0e1      	LDI  R30,LOW(1)
0007a8 93e0 0420 	STS  1056,R30
                 ;}
0007aa 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;void calcDateTime(long seconds, long hours_to_gm, long unsigned int * date, long unsigned int * time)
                 ;{
                 _calcDateTime:
                 ; .FSTART _calcDateTime
                 ;   long daysmonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
                 ;   long secs_per_year  = 365 * 24 * 3600;
                 ;   long secs_per_month = 31 * 24 * 3600;
                 ;   long year           = 1970;
                 ;   long month          = 1;
                 ;   long day            = 1;
                 ;   long hours          = 0;
                 ;   long minutes        = 0;
                 ;   long leap           = 0 ;
                 ;
                 ;   // adjust seconds to localtime
                 ;   seconds -= hours_to_gm * 3600;
0007ab 93ba      	ST   -Y,R27
0007ac 93aa      	ST   -Y,R26
0007ad 97ef      	SBIW R28,63
0007ae 9765      	SBIW R28,21
0007af e584      	LDI  R24,84
0007b0 e0a0      	LDI  R26,LOW(0)
0007b1 e0b0      	LDI  R27,HIGH(0)
0007b2 e4e4      	LDI  R30,LOW(_0x69*2)
0007b3 e0f2      	LDI  R31,HIGH(_0x69*2)
0007b4 940e 42f2 	CALL __INITLOCB
                 ;	seconds -> Y+92
                 ;	hours_to_gm -> Y+88
                 ;	*date -> Y+86
                 ;	*time -> Y+84
                 ;	daysmonth -> Y+32
                 ;	secs_per_year -> Y+28
                 ;	secs_per_month -> Y+24
                 ;	year -> Y+20
                 ;	month -> Y+16
                 ;	day -> Y+12
                 ;	hours -> Y+8
                 ;	minutes -> Y+4
                 ;	leap -> Y+0
                +
0007b6 01fe     +MOVW R30 , R28
0007b7 5ae8     +SUBI R30 , LOW ( - 88 )
0007b8 4fff     +SBCI R31 , HIGH ( - 88 )
0007b9 9001     +LD R0 , Z +
0007ba 9011     +LD R1 , Z +
0007bb 9161     +LD R22 , Z +
0007bc 8170     +LD R23 , Z
0007bd 01f0     +MOVW R30 , R0
                 	__GETD1SX 88
0007be 940e 3732 	CALL SUBOPT_0x1F
0007c0 940e 3739 	CALL SUBOPT_0x20
0007c2 940e 40e1 	CALL __SUBD21
                +
0007c4 01fe     +MOVW R30 , R28
0007c5 5ae4     +SUBI R30 , LOW ( - 92 )
0007c6 4fff     +SBCI R31 , HIGH ( - 92 )
0007c7 93a1     +ST Z + , R26
0007c8 93b1     +ST Z + , R27
0007c9 9381     +ST Z + , R24
0007ca 8390     +ST Z , R25
                 	__PUTD2SX 92
                 ;   // year
                 ;   for ( ; seconds > secs_per_year; ++year, seconds -= secs_per_year)
                 _0x6B:
                +
0007cb 8dec     +LDD R30 , Y + 28
0007cc 8dfd     +LDD R31 , Y + 28 + 1
0007cd 8d6e     +LDD R22 , Y + 28 + 2
0007ce 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
0007cf 940e 3739 	CALL SUBOPT_0x20
0007d1 940e 42da 	CALL __CPD12
0007d3 f54c      	BRGE _0x6C
                 ;   {
                 ;       leap = ((year)%4 == 0 && ((year%100 != 0) || (year%400 == 0)))? 1 : 0;
0007d4 940e 3742 	CALL SUBOPT_0x21
0007d6 940e 3747 	CALL SUBOPT_0x22
0007d8 f449      	BRNE _0x6D
0007d9 940e 3750 	CALL SUBOPT_0x23
0007db 940e 3755 	CALL SUBOPT_0x24
0007dd f419      	BRNE _0x6E
0007de 940e 375e 	CALL SUBOPT_0x25
0007e0 f409      	BRNE _0x6D
                 _0x6E:
0007e1 c001      	RJMP _0x70
                 _0x6D:
0007e2 c003      	RJMP _0x71
                 _0x70:
0007e3 940e 3768 	CALL SUBOPT_0x26
0007e5 c002      	RJMP _0x72
                 _0x71:
0007e6 940e 371b 	CALL SUBOPT_0x1C
                 _0x72:
0007e8 940e 376d 	CALL SUBOPT_0x27
                 ;       secs_per_year = (365 + leap) * 24 * 3600;
0007ea 940e 3770 	CALL SUBOPT_0x28
                +
0007ec 8fec     +STD Y + 28 , R30
0007ed 8ffd     +STD Y + 28 + 1 , R31
0007ee 8f6e     +STD Y + 28 + 2 , R22
0007ef 8f7f     +STD Y + 28 + 3 , R23
                 	__PUTD1S 28
                 ;   }
0007f0 940e 3742 	CALL SUBOPT_0x21
0007f2 940e 377d 	CALL SUBOPT_0x29
0007f4 940e 3782 	CALL SUBOPT_0x2A
                +
0007f6 8dac     +LDD R26 , Y + 28
0007f7 8dbd     +LDD R27 , Y + 28 + 1
0007f8 8d8e     +LDD R24 , Y + 28 + 2
0007f9 8d9f     +LDD R25 , Y + 28 + 3
                 	__GETD2S 28
0007fa 940e 3787 	CALL SUBOPT_0x2B
0007fc cfce      	RJMP _0x6B
                 _0x6C:
                 ;   // month
                 ;   leap = ((year)%4 == 0 && ((year%100 != 0) || (year%400 == 0)))? 1 : 0;
0007fd 940e 3799 	CALL SUBOPT_0x2C
0007ff f439      	BRNE _0x74
000800 940e 379b 	CALL SUBOPT_0x2D
000802 f419      	BRNE _0x75
000803 940e 375e 	CALL SUBOPT_0x25
000805 f409      	BRNE _0x74
                 _0x75:
000806 c001      	RJMP _0x77
                 _0x74:
000807 c003      	RJMP _0x78
                 _0x77:
000808 940e 3768 	CALL SUBOPT_0x26
00080a c002      	RJMP _0x79
                 _0x78:
00080b 940e 371b 	CALL SUBOPT_0x1C
                 _0x79:
00080d 940e 376d 	CALL SUBOPT_0x27
                 ;   daysmonth[2] = (leap)? 29 : 28;
00080f 940e 379d 	CALL SUBOPT_0x2E
000811 f029      	BREQ _0x7B
                +
000812 e1ed     +LDI R30 , LOW ( 0x1D )
000813 e0f0     +LDI R31 , HIGH ( 0x1D )
000814 e060     +LDI R22 , BYTE3 ( 0x1D )
000815 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
000816 c004      	RJMP _0x7C
                 _0x7B:
                +
000817 e1ec     +LDI R30 , LOW ( 0x1C )
000818 e0f0     +LDI R31 , HIGH ( 0x1C )
000819 e060     +LDI R22 , BYTE3 ( 0x1C )
00081a e070     +LDI R23 , BYTE4 ( 0x1C )
                 	__GETD1N 0x1C
                 _0x7C:
                +
00081b a7e8     +STD Y + 40 , R30
00081c a7f9     +STD Y + 40 + 1 , R31
00081d a76a     +STD Y + 40 + 2 , R22
00081e a77b     +STD Y + 40 + 3 , R23
                 	__PUTD1S 40
                 ;   for ( ; seconds >= secs_per_month; ++month, seconds -= secs_per_month)
                 _0x7F:
                +
00081f 8de8     +LDD R30 , Y + 24
000820 8df9     +LDD R31 , Y + 24 + 1
000821 8d6a     +LDD R22 , Y + 24 + 2
000822 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
000823 940e 3739 	CALL SUBOPT_0x20
000825 940e 42df 	CALL __CPD21
000827 f0bc      	BRLT _0x80
                 ;   {
                 ;       secs_per_month = daysmonth[month]*24*3600;
000828 89e8      	LDD  R30,Y+16
000829 89f9      	LDD  R31,Y+16+1
00082a 01de      	MOVW R26,R28
00082b 9690      	ADIW R26,32
00082c 940e 37a2 	CALL SUBOPT_0x2F
                +
00082e 8fe8     +STD Y + 24 , R30
00082f 8ff9     +STD Y + 24 + 1 , R31
000830 8f6a     +STD Y + 24 + 2 , R22
000831 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ;   }
000832 940e 37af 	CALL SUBOPT_0x30
000834 940e 377d 	CALL SUBOPT_0x29
000836 940e 37b4 	CALL SUBOPT_0x31
                +
000838 8da8     +LDD R26 , Y + 24
000839 8db9     +LDD R27 , Y + 24 + 1
00083a 8d8a     +LDD R24 , Y + 24 + 2
00083b 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00083c 940e 3787 	CALL SUBOPT_0x2B
00083e cfe0      	RJMP _0x7F
                 _0x80:
                 ;   // day
                 ;   day = (seconds / (24 * 3600) ) + 1;
00083f 940e 37b9 	CALL SUBOPT_0x32
000841 940e 41e7 	CALL __DIVD21
                +
000843 5fef     +SUBI R30 , LOW ( - 1 )
000844 4fff     +SBCI R31 , HIGH ( - 1 )
000845 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000846 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
000847 940e 37bf 	CALL SUBOPT_0x33
                 ;   seconds = seconds % (24 * 3600) ;
000849 940e 37b9 	CALL SUBOPT_0x32
00084b 940e 37c4 	CALL SUBOPT_0x34
                 ;
                 ;   hours   = seconds / 3600;
00084d 940e 37ce 	CALL SUBOPT_0x35
00084f 940e 41e7 	CALL __DIVD21
000851 940e 37d3 	CALL SUBOPT_0x36
                 ;   seconds = seconds % 3600;
000853 940e 3739 	CALL SUBOPT_0x20
000855 940e 37ce 	CALL SUBOPT_0x35
000857 940e 37c4 	CALL SUBOPT_0x34
                 ;
                 ;   minutes = seconds / 60;
                +
000859 e3ec     +LDI R30 , LOW ( 0x3C )
00085a e0f0     +LDI R31 , HIGH ( 0x3C )
00085b e060     +LDI R22 , BYTE3 ( 0x3C )
00085c e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00085d 940e 41e7 	CALL __DIVD21
00085f 940e 37d8 	CALL SUBOPT_0x37
                 ;   seconds = seconds % 60;
000861 940e 3739 	CALL SUBOPT_0x20
                +
000863 e3ec     +LDI R30 , LOW ( 0x3C )
000864 e0f0     +LDI R31 , HIGH ( 0x3C )
000865 e060     +LDI R22 , BYTE3 ( 0x3C )
000866 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
000867 940e 41fc 	CALL __MODD21
                +
000869 01de     +MOVW R26 , R28
00086a 5aa4     +SUBI R26 , LOW ( - 92 )
00086b 4fbf     +SBCI R27 , HIGH ( - 92 )
00086c 93ed     +ST X + , R30
00086d 93fd     +ST X + , R31
00086e 936d     +ST X + , R22
00086f 937c     +ST X , R23
                 	__PUTD1SX 92
                 ;
                 ;   *date   = year * 10000 + month * 100 + day;
000870 940e 3742 	CALL SUBOPT_0x21
000872 940e 37dd 	CALL SUBOPT_0x38
000874 937f      	PUSH R23
000875 936f      	PUSH R22
000876 93ff      	PUSH R31
000877 93ef      	PUSH R30
000878 940e 37af 	CALL SUBOPT_0x30
00087a 940e 37e4 	CALL SUBOPT_0x39
00087c 91af      	POP  R26
00087d 91bf      	POP  R27
00087e 918f      	POP  R24
00087f 919f      	POP  R25
000880 940e 40d2 	CALL __ADDD12
000882 940e 37eb 	CALL SUBOPT_0x3A
000884 940e 40d2 	CALL __ADDD12
                +
000886 01de     +MOVW R26 , R28
000887 5aaa     +SUBI R26 , LOW ( - 86 )
000888 4fbf     +SBCI R27 , HIGH ( - 86 )
000889 900d     +LD R0 , X +
00088a 91bc     +LD R27 , X
00088b 2da0     +MOV R26 , R0
                 	__GETW2SX 86
00088c 940e 424a 	CALL __PUTDP1
                 ;   *time   = hours * 10000 + minutes * 100 + seconds;
00088e 940e 37f0 	CALL SUBOPT_0x3B
000890 940e 37dd 	CALL SUBOPT_0x38
000892 937f      	PUSH R23
000893 936f      	PUSH R22
000894 93ff      	PUSH R31
000895 93ef      	PUSH R30
000896 940e 37f5 	CALL SUBOPT_0x3C
000898 940e 37e4 	CALL SUBOPT_0x39
00089a 91af      	POP  R26
00089b 91bf      	POP  R27
00089c 918f      	POP  R24
00089d 919f      	POP  R25
00089e 940e 40d2 	CALL __ADDD12
0008a0 940e 3739 	CALL SUBOPT_0x20
0008a2 940e 40d2 	CALL __ADDD12
                +
0008a4 01de     +MOVW R26 , R28
0008a5 5aac     +SUBI R26 , LOW ( - 84 )
0008a6 4fbf     +SBCI R27 , HIGH ( - 84 )
0008a7 900d     +LD R0 , X +
0008a8 91bc     +LD R27 , X
0008a9 2da0     +MOV R26 , R0
                 	__GETW2SX 84
0008aa 940e 424a 	CALL __PUTDP1
                 ;
                 ;}
0008ac 96ef      	ADIW R28,63
0008ad 96a1      	ADIW R28,33
0008ae 9508      	RET
                 ; .FEND
                 ;
                 ;void calcSeconds(long unsigned int date, long unsigned int time, long unsigned int hours_to_gm, long unsigned int * seco ...
                 ;{
                 _calcSeconds:
                 ; .FSTART _calcSeconds
                 ;   long daysmonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
                 ;   long year           = date/10000;
                 ;   long month          = (date%10000)/100;
                 ;   long day            = date%100;
                 ;   long hours          = time/10000;
                 ;   long minutes        = (time%10000)/100;
                 ;   long leap           = ((year)%4 == 0 && ((year%100 != 0) || (year%400 == 0)))? 1 : 0;;
                 ;
                 ;   *seconds            = time%100 + minutes * 60 + (hours + hours_to_gm) * 3600 + (day - 1) * 24 * 3600;
0008af 93ba      	ST   -Y,R27
0008b0 93aa      	ST   -Y,R26
0008b1 97ef      	SBIW R28,63
0008b2 972d      	SBIW R28,13
0008b3 e384      	LDI  R24,52
0008b4 e1a8      	LDI  R26,LOW(24)
0008b5 e0b0      	LDI  R27,HIGH(24)
0008b6 e9e8      	LDI  R30,LOW(_0x88*2)
0008b7 e0f2      	LDI  R31,HIGH(_0x88*2)
0008b8 940e 42f2 	CALL __INITLOCB
                 ;	date -> Y+86
                 ;	time -> Y+82
                 ;	hours_to_gm -> Y+78
                 ;	*seconds -> Y+76
                 ;	daysmonth -> Y+24
                 ;	year -> Y+20
                 ;	month -> Y+16
                 ;	day -> Y+12
                 ;	hours -> Y+8
                 ;	minutes -> Y+4
                 ;	leap -> Y+0
0008ba 940e 37fa 	CALL SUBOPT_0x3D
0008bc 940e 41c2 	CALL __DIVD21U
0008be 940e 3782 	CALL SUBOPT_0x2A
0008c0 940e 37fa 	CALL SUBOPT_0x3D
0008c2 940e 3807 	CALL SUBOPT_0x3E
0008c4 940e 37b4 	CALL SUBOPT_0x31
                +
0008c6 01de     +MOVW R26 , R28
0008c7 5aaa     +SUBI R26 , LOW ( - 86 )
0008c8 4fbf     +SBCI R27 , HIGH ( - 86 )
0008c9 900d     +LD R0 , X +
0008ca 901d     +LD R1 , X +
0008cb 918d     +LD R24 , X +
0008cc 919c     +LD R25 , X
0008cd 01d0     +MOVW R26 , R0
                 	__GETD2SX 86
0008ce 940e 3812 	CALL SUBOPT_0x3F
0008d0 940e 37bf 	CALL SUBOPT_0x33
0008d2 940e 3819 	CALL SUBOPT_0x40
0008d4 940e 41c2 	CALL __DIVD21U
0008d6 940e 37d3 	CALL SUBOPT_0x36
0008d8 940e 3819 	CALL SUBOPT_0x40
0008da 940e 3807 	CALL SUBOPT_0x3E
0008dc 940e 37d8 	CALL SUBOPT_0x37
0008de 940e 3799 	CALL SUBOPT_0x2C
0008e0 f439      	BRNE _0x81
0008e1 940e 379b 	CALL SUBOPT_0x2D
0008e3 f419      	BRNE _0x82
0008e4 940e 375e 	CALL SUBOPT_0x25
0008e6 f409      	BRNE _0x81
                 _0x82:
0008e7 c001      	RJMP _0x84
                 _0x81:
0008e8 c003      	RJMP _0x85
                 _0x84:
0008e9 940e 3768 	CALL SUBOPT_0x26
0008eb c002      	RJMP _0x86
                 _0x85:
0008ec 940e 371b 	CALL SUBOPT_0x1C
                 _0x86:
0008ee 940e 376d 	CALL SUBOPT_0x27
                +
0008f0 01de     +MOVW R26 , R28
0008f1 5aae     +SUBI R26 , LOW ( - 82 )
0008f2 4fbf     +SBCI R27 , HIGH ( - 82 )
0008f3 900d     +LD R0 , X +
0008f4 901d     +LD R1 , X +
0008f5 918d     +LD R24 , X +
0008f6 919c     +LD R25 , X
0008f7 01d0     +MOVW R26 , R0
                 	__GETD2SX 82
0008f8 940e 3812 	CALL SUBOPT_0x3F
0008fa 937f      	PUSH R23
0008fb 936f      	PUSH R22
0008fc 93ff      	PUSH R31
0008fd 93ef      	PUSH R30
0008fe 940e 37f5 	CALL SUBOPT_0x3C
                +
000900 e3ac     +LDI R26 , LOW ( 0x3C )
000901 e0b0     +LDI R27 , HIGH ( 0x3C )
000902 e080     +LDI R24 , BYTE3 ( 0x3C )
000903 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
000904 940e 4197 	CALL __MULD12
000906 91af      	POP  R26
000907 91bf      	POP  R27
000908 918f      	POP  R24
000909 919f      	POP  R25
00090a 940e 40d2 	CALL __ADDD12
00090c 937f      	PUSH R23
00090d 936f      	PUSH R22
00090e 93ff      	PUSH R31
00090f 93ef      	PUSH R30
                +
000910 01fe     +MOVW R30 , R28
000911 5be2     +SUBI R30 , LOW ( - 78 )
000912 4fff     +SBCI R31 , HIGH ( - 78 )
000913 9001     +LD R0 , Z +
000914 9011     +LD R1 , Z +
000915 9161     +LD R22 , Z +
000916 8170     +LD R23 , Z
000917 01f0     +MOVW R30 , R0
                 	__GETD1SX 78
000918 940e 3826 	CALL SUBOPT_0x41
00091a 940e 40d7 	CALL __ADDD21
00091c 940e 37ce 	CALL SUBOPT_0x35
00091e 940e 4171 	CALL __MULD12U
000920 91af      	POP  R26
000921 91bf      	POP  R27
000922 918f      	POP  R24
000923 919f      	POP  R25
000924 940e 40d2 	CALL __ADDD12
000926 937f      	PUSH R23
000927 936f      	PUSH R22
000928 93ff      	PUSH R31
000929 93ef      	PUSH R30
00092a 940e 382b 	CALL SUBOPT_0x42
00092c 940e 3830 	CALL SUBOPT_0x43
                +
00092e e1a8     +LDI R26 , LOW ( 0x18 )
00092f e0b0     +LDI R27 , HIGH ( 0x18 )
000930 e080     +LDI R24 , BYTE3 ( 0x18 )
000931 e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
000932 940e 4197 	CALL __MULD12
000934 940e 3732 	CALL SUBOPT_0x1F
000936 91af      	POP  R26
000937 91bf      	POP  R27
000938 918f      	POP  R24
000939 919f      	POP  R25
00093a 940e 40d2 	CALL __ADDD12
00093c 940e 3835 	CALL SUBOPT_0x44
00093e 940e 424a 	CALL __PUTDP1
                 ;
                 ;   // month
                 ;   daysmonth[2] = (leap)? 29 : 28;
000940 940e 379d 	CALL SUBOPT_0x2E
000942 f029      	BREQ _0x89
                +
000943 e1ed     +LDI R30 , LOW ( 0x1D )
000944 e0f0     +LDI R31 , HIGH ( 0x1D )
000945 e060     +LDI R22 , BYTE3 ( 0x1D )
000946 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
000947 c004      	RJMP _0x8A
                 _0x89:
                +
000948 e1ec     +LDI R30 , LOW ( 0x1C )
000949 e0f0     +LDI R31 , HIGH ( 0x1C )
00094a e060     +LDI R22 , BYTE3 ( 0x1C )
00094b e070     +LDI R23 , BYTE4 ( 0x1C )
                 	__GETD1N 0x1C
                 _0x8A:
                +
00094c a3e8     +STD Y + 32 , R30
00094d a3f9     +STD Y + 32 + 1 , R31
00094e a36a     +STD Y + 32 + 2 , R22
00094f a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
                 ;   for ( month = month-1; month > 0; --month)
000950 940e 37af 	CALL SUBOPT_0x30
000952 940e 3830 	CALL SUBOPT_0x43
000954 940e 37b4 	CALL SUBOPT_0x31
                 _0x8D:
000956 940e 383c 	CALL SUBOPT_0x45
000958 940e 42d4 	CALL __CPD02
00095a f514      	BRGE _0x8E
                 ;   {
                 ;       *seconds += daysmonth[month] * 24 * 3600;
00095b 940e 3835 	CALL SUBOPT_0x44
00095d 93bf      	PUSH R27
00095e 93af      	PUSH R26
00095f 940e 423f 	CALL __GETD1P
000961 937f      	PUSH R23
000962 936f      	PUSH R22
000963 93ff      	PUSH R31
000964 93ef      	PUSH R30
000965 89e8      	LDD  R30,Y+16
000966 89f9      	LDD  R31,Y+16+1
000967 01de      	MOVW R26,R28
000968 9658      	ADIW R26,24
000969 940e 37a2 	CALL SUBOPT_0x2F
00096b 91af      	POP  R26
00096c 91bf      	POP  R27
00096d 918f      	POP  R24
00096e 919f      	POP  R25
00096f 940e 40d2 	CALL __ADDD12
000971 91af      	POP  R26
000972 91bf      	POP  R27
000973 940e 424a 	CALL __PUTDP1
                 ;   }
000975 940e 37af 	CALL SUBOPT_0x30
000977 9731      	SBIW R30,1
000978 4060      	SBCI R22,0
000979 4070      	SBCI R23,0
00097a 940e 37b4 	CALL SUBOPT_0x31
00097c cfd9      	RJMP _0x8D
                 _0x8E:
                 ;
                 ;   // year
                 ;   for (year = year-1; year >= 1970; --year)
00097d 940e 3742 	CALL SUBOPT_0x21
00097f 940e 3830 	CALL SUBOPT_0x43
000981 940e 3782 	CALL SUBOPT_0x2A
                 _0x90:
000983 940e 3750 	CALL SUBOPT_0x23
                +
000985 3ba2     +CPI R26 , LOW ( 0x7B2 )
000986 e0e7     +LDI R30 , HIGH ( 0x7B2 )
000987 07be     +CPC R27 , R30
000988 e0e0     +LDI R30 , BYTE3 ( 0x7B2 )
000989 078e     +CPC R24 , R30
00098a e0e0     +LDI R30 , BYTE4 ( 0x7B2 )
00098b 079e     +CPC R25 , R30
                 	__CPD2N 0x7B2
00098c f184      	BRLT _0x91
                 ;   {
                 ;       leap = ((year)%4 == 0 && ((year%100 != 0) || (year%400 == 0)))? 1 : 0;
00098d 940e 3799 	CALL SUBOPT_0x2C
00098f f439      	BRNE _0x92
000990 940e 379b 	CALL SUBOPT_0x2D
000992 f419      	BRNE _0x93
000993 940e 375e 	CALL SUBOPT_0x25
000995 f409      	BRNE _0x92
                 _0x93:
000996 c001      	RJMP _0x95
                 _0x92:
000997 c003      	RJMP _0x96
                 _0x95:
000998 940e 3768 	CALL SUBOPT_0x26
00099a c002      	RJMP _0x97
                 _0x96:
00099b 940e 371b 	CALL SUBOPT_0x1C
                 _0x97:
00099d 940e 376d 	CALL SUBOPT_0x27
                 ;       *seconds += (365 + leap) * 24 * 3600;
00099f 940e 3835 	CALL SUBOPT_0x44
0009a1 93bf      	PUSH R27
0009a2 93af      	PUSH R26
0009a3 940e 423f 	CALL __GETD1P
0009a5 937f      	PUSH R23
0009a6 936f      	PUSH R22
0009a7 93ff      	PUSH R31
0009a8 93ef      	PUSH R30
0009a9 940e 3770 	CALL SUBOPT_0x28
0009ab 91af      	POP  R26
0009ac 91bf      	POP  R27
0009ad 918f      	POP  R24
0009ae 919f      	POP  R25
0009af 940e 40d2 	CALL __ADDD12
0009b1 91af      	POP  R26
0009b2 91bf      	POP  R27
0009b3 940e 424a 	CALL __PUTDP1
                 ;   }
0009b5 940e 3742 	CALL SUBOPT_0x21
0009b7 9731      	SBIW R30,1
0009b8 4060      	SBCI R22,0
0009b9 4070      	SBCI R23,0
0009ba 940e 3782 	CALL SUBOPT_0x2A
0009bc cfc6      	RJMP _0x90
                 _0x91:
                 ;
                 ;}
0009bd 96ef      	ADIW R28,63
0009be 966b      	ADIW R28,27
0009bf 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;#include "usart_init.c"
                 ;
                 ;void usartc0_init(void)
                 ; 0000 0013 {
                 _usartc0_init:
                 ; .FSTART _usartc0_init
                 ;PORTC.OUTSET=0x08;
0009c0 e0e8      	LDI  R30,LOW(8)
0009c1 93e0 0645 	STS  1605,R30
                 ;
                 ;// Communication mode: Asynchronous USART
                 ;// Data bits: 8
                 ;// Stop bits: 1
                 ;// Parity: Disabled
                 ;USARTC0.CTRLC=USART_CMODE_ASYNCHRONOUS_gc | USART_PMODE_DISABLED_gc | USART_CHSIZE_8BIT_gc;
0009c3 e0e3      	LDI  R30,LOW(3)
0009c4 93e0 08a5 	STS  2213,R30
                 ;
                 ;// Receive complete interrupt: High Level
                 ;// Transmit complete interrupt: Disabled
                 ;// Data register empty interrupt: Disabled
                 ;USARTC0.CTRLA=(USARTC0.CTRLA & (~(USART_RXCINTLVL_gm | USART_TXCINTLVL_gm | USART_DREINTLVL_gm))) |
                 ;    USART_RXCINTLVL_HI_gc | USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
0009c6 91e0 08a3 	LDS  R30,2211
0009c8 7ce0      	ANDI R30,LOW(0xC0)
0009c9 63e0      	ORI  R30,LOW(0x30)
0009ca 93e0 08a3 	STS  2211,R30
                 ;
                 ;// Required Baud rate: 9600
                 ;// Real Baud Rate: 9601,0 (x1 Mode), Error: 0,0 %
                 ;USARTC0.BAUDCTRLA=0xF5;
0009cc efe5      	LDI  R30,LOW(245)
0009cd 93e0 08a6 	STS  2214,R30
                 ;USARTC0.BAUDCTRLB=((0x0C << USART_BSCALE_bp) & USART_BSCALE_gm) | 0x0C;
0009cf ecec      	LDI  R30,LOW(204)
0009d0 93e0 08a7 	STS  2215,R30
                 ;
                 ;// Receiver: On
                 ;// Transmitter: On
                 ;// Double transmission speed mode: Off
                 ;// Multi-processor communication mode: Off
                 ;USARTC0.CTRLB=(USARTC0.CTRLB & (~(USART_RXEN_bm | USART_TXEN_bm | USART_CLK2X_bm | USART_MPCM_bm | USART_TXB8_bm))) |
                 ;    USART_RXEN_bm | USART_TXEN_bm;
0009d2 91e0 08a4 	LDS  R30,2212
0009d4 7ee0      	ANDI R30,LOW(0xE0)
0009d5 61e8      	ORI  R30,LOW(0x18)
0009d6 93e0 08a4 	STS  2212,R30
                 ;}
0009d8 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;interrupt [USARTC0_RXC_vect] void usartc0_rx_isr(void)
                 ;{
                 _usartc0_rx_isr:
                 ; .FSTART _usartc0_rx_isr
0009d9 940e 3841 	CALL SUBOPT_0x46
                 ;
                 ;status=USARTC0.STATUS;
0009db 91e0 08a1 	LDS  R30,2209
0009dd 93e0 3112 	STS  _status,R30
                 ;data=USARTC0.DATA;
0009df 91e0 08a0 	LDS  R30,2208
0009e1 93e0 3113 	STS  _data,R30
                 ;
                 ;if ((status & (USART_FERR_bm | USART_PERR_bm | USART_BUFOVF_bm)) == 0)
0009e3 91e0 3112 	LDS  R30,_status
0009e5 71ec      	ANDI R30,LOW(0x1C)
0009e6 f441      	BRNE _0x99
                 ;   {
                 ;rx_buffer_usartc0[rx_wr_index_usartc0]=data;
0009e7 2dea      	MOV  R30,R10
0009e8 e0f0      	LDI  R31,0
0009e9 5ce9      	SUBI R30,LOW(-_rx_buffer_usartc0)
0009ea 4cff      	SBCI R31,HIGH(-_rx_buffer_usartc0)
0009eb 91a0 3113 	LDS  R26,_data
0009ed 83a0      	STD  Z+0,R26
                 ;rx_wr_index_usartc0++;
0009ee 94a3      	INC  R10
                 ;   }
                 ;
                 ;
                 ;switch(Mx)
                 _0x99:
0009ef 91e0 314a 	LDS  R30,_Mx
0009f1 e0f0      	LDI  R31,0
                 ;{
                 ;case 0xFF:
0009f2 3fef      	CPI  R30,LOW(0xFF)
0009f3 e0a0      	LDI  R26,HIGH(0xFF)
0009f4 07fa      	CPC  R31,R26
0009f5 f009      	BREQ PC+2
0009f6 c308      	RJMP _0x9D
                 ;{
                 ;    //поиск маркера
                 ;    //////////////////////////////////////////////
                 ;    switch (rx_buffer_usartc0[0])
0009f7 91e0 3037 	LDS  R30,_rx_buffer_usartc0
0009f9 e0f0      	LDI  R31,0
                 ;    {
                 ;    ///////////////////////////////////////
                 ;    case 0xFF:
0009fa 3fef      	CPI  R30,LOW(0xFF)
0009fb e0a0      	LDI  R26,HIGH(0xFF)
0009fc 07fa      	CPC  R31,R26
0009fd f431      	BRNE _0xA1
                 ;    {
                 ;    Mx=0xFF;
0009fe 940e 384f 	CALL SUBOPT_0x47
                 ;    RX_BUFFER_SIZE_USARTC0=1;
                 ;    rx_buffer_usartc0[0]=0xFF;
000a00 efef      	LDI  R30,LOW(255)
000a01 93e0 3037 	STS  _rx_buffer_usartc0,R30
                 ;    rx_wr_index_usartc0=0;
000a03 c2f9      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////
                 ;    case 0xCA:
                 _0xA1:
000a04 3cea      	CPI  R30,LOW(0xCA)
000a05 e0a0      	LDI  R26,HIGH(0xCA)
000a06 07fa      	CPC  R31,R26
000a07 f421      	BRNE _0xA2
                 ;    {
                 ;    Mx=0xCA;
000a08 ecea      	LDI  R30,LOW(202)
000a09 940e 3855 	CALL SUBOPT_0x48
                 ;    RX_BUFFER_SIZE_USARTC0=2;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a0b c2f1      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////
                 ;    case 0xF5:
                 _0xA2:
000a0c 3fe5      	CPI  R30,LOW(0xF5)
000a0d e0a0      	LDI  R26,HIGH(0xF5)
000a0e 07fa      	CPC  R31,R26
000a0f f421      	BRNE _0xA3
                 ;    {
                 ;    Mx=0xF5;
000a10 efe5      	LDI  R30,LOW(245)
000a11 940e 3855 	CALL SUBOPT_0x48
                 ;    RX_BUFFER_SIZE_USARTC0=2;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a13 c2e9      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////
                 ;
                 ;    case 0xB5:
                 _0xA3:
000a14 3be5      	CPI  R30,LOW(0xB5)
000a15 e0a0      	LDI  R26,HIGH(0xB5)
000a16 07fa      	CPC  R31,R26
000a17 f421      	BRNE _0xA4
                 ;    {
                 ;    Mx=0xB5;
000a18 ebe5      	LDI  R30,LOW(181)
000a19 940e 385d 	CALL SUBOPT_0x49
                 ;    RX_BUFFER_SIZE_USARTC0=4;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a1b c2e1      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////
                 ;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    case 0xEA:
                 _0xA4:
000a1c 3eea      	CPI  R30,LOW(0xEA)
000a1d e0a0      	LDI  R26,HIGH(0xEA)
000a1e 07fa      	CPC  R31,R26
000a1f f421      	BRNE _0xA5
                 ;    {
                 ;    Mx=0xEA;
000a20 eeea      	LDI  R30,LOW(234)
000a21 940e 3855 	CALL SUBOPT_0x48
                 ;    RX_BUFFER_SIZE_USARTC0=2;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a23 c2d9      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    case 0xE5:
                 _0xA5:
000a24 3ee5      	CPI  R30,LOW(0xE5)
000a25 e0a0      	LDI  R26,HIGH(0xE5)
000a26 07fa      	CPC  R31,R26
000a27 f421      	BRNE _0xA6
                 ;    {
                 ;    Mx=0xE5;
000a28 eee5      	LDI  R30,LOW(229)
000a29 940e 3865 	CALL SUBOPT_0x4A
                 ;    RX_BUFFER_SIZE_USARTC0=7;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a2b c2d1      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    case 0xE7:
                 _0xA6:
000a2c 3ee7      	CPI  R30,LOW(0xE7)
000a2d e0a0      	LDI  R26,HIGH(0xE7)
000a2e 07fa      	CPC  R31,R26
000a2f f421      	BRNE _0xA7
                 ;    {
                 ;    Mx=0xE7;
000a30 eee7      	LDI  R30,LOW(231)
000a31 940e 3865 	CALL SUBOPT_0x4A
                 ;    RX_BUFFER_SIZE_USARTC0=7;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a33 c2c9      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;
                 ;
                 ;    case 0x60:
                 _0xA7:
000a34 36e0      	CPI  R30,LOW(0x60)
000a35 e0a0      	LDI  R26,HIGH(0x60)
000a36 07fa      	CPC  R31,R26
000a37 f421      	BRNE _0xA8
                 ;    {
                 ;    Mx=0x60;
000a38 e6e0      	LDI  R30,LOW(96)
000a39 940e 3855 	CALL SUBOPT_0x48
                 ;    RX_BUFFER_SIZE_USARTC0=2;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a3b c2c1      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    case 0xE8:
                 _0xA8:
000a3c 3ee8      	CPI  R30,LOW(0xE8)
000a3d e0a0      	LDI  R26,HIGH(0xE8)
000a3e 07fa      	CPC  R31,R26
000a3f f421      	BRNE _0xA9
                 ;    {
                 ;    Mx=0xE8;
000a40 eee8      	LDI  R30,LOW(232)
000a41 940e 386d 	CALL SUBOPT_0x4B
                 ;    RX_BUFFER_SIZE_USARTC0=3;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a43 c2b9      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;
                 ;    case 0xE9:
                 _0xA9:
000a44 3ee9      	CPI  R30,LOW(0xE9)
000a45 e0a0      	LDI  R26,HIGH(0xE9)
000a46 07fa      	CPC  R31,R26
000a47 f421      	BRNE _0xAA
                 ;    {
                 ;    Mx=0xE9;
000a48 eee9      	LDI  R30,LOW(233)
000a49 940e 386d 	CALL SUBOPT_0x4B
                 ;    RX_BUFFER_SIZE_USARTC0=3;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a4b c2b1      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    ///////////////////////////////////////   ///////////////////////////////////////
                 ;    ///////////////////////////////////////////////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ...
                 ;    /////////////////////дата ///////////////////////////////////////
                 ;    case 0xD1:
                 _0xAA:
000a4c 3de1      	CPI  R30,LOW(0xD1)
000a4d e0a0      	LDI  R26,HIGH(0xD1)
000a4e 07fa      	CPC  R31,R26
000a4f f449      	BRNE _0xAB
                 ;    {
                 ;    Mx=0xD1;
000a50 ede1      	LDI  R30,LOW(209)
000a51 93e0 314a 	STS  _Mx,R30
                 ;    RX_BUFFER_SIZE_USARTC0=5;
000a53 e0e5      	LDI  R30,LOW(5)
000a54 2ebe      	MOV  R11,R30
                 ;    rx_buffer_usartc0[0]=0xFF;
000a55 efef      	LDI  R30,LOW(255)
000a56 93e0 3037 	STS  _rx_buffer_usartc0,R30
                 ;    rx_wr_index_usartc0=0;
000a58 c2a4      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    //////////////////////время///////////////////////////////////////
                 ;    case 0xD3:
                 _0xAB:
000a59 3de3      	CPI  R30,LOW(0xD3)
000a5a e0a0      	LDI  R26,HIGH(0xD3)
000a5b 07fa      	CPC  R31,R26
000a5c f421      	BRNE _0xAC
                 ;    {
                 ;    Mx=0xD3;
000a5d ede3      	LDI  R30,LOW(211)
000a5e 940e 385d 	CALL SUBOPT_0x49
                 ;    RX_BUFFER_SIZE_USARTC0=4;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a60 c29c      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;    //////////////////////////////////////////////////////////////////////////////
                 ;     /////////////////////дата ///////////////////////////////////////
                 ;    case 0xD5:
                 _0xAC:
000a61 3de5      	CPI  R30,LOW(0xD5)
000a62 e0a0      	LDI  R26,HIGH(0xD5)
000a63 07fa      	CPC  R31,R26
000a64 f421      	BRNE _0xAD
                 ;    {
                 ;    Mx=0xD5;
000a65 ede5      	LDI  R30,LOW(213)
000a66 940e 3875 	CALL SUBOPT_0x4C
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    RX_BUFFER_SIZE_USARTC0=1;
000a68 c292      	RJMP _0x222
                 ;    rx_wr_index_usartc0=0;
                 ;
                 ;
                 ;    }
                 ;    break;
                 ;
                 ;    case 0xD7:
                 _0xAD:
000a69 3de7      	CPI  R30,LOW(0xD7)
000a6a e0a0      	LDI  R26,HIGH(0xD7)
000a6b 07fa      	CPC  R31,R26
000a6c f421      	BRNE _0xAE
                 ;    {
                 ;    Mx=0xD7;
000a6d ede7      	LDI  R30,LOW(215)
000a6e 940e 3875 	CALL SUBOPT_0x4C
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    RX_BUFFER_SIZE_USARTC0=1;
000a70 c28a      	RJMP _0x222
                 ;    rx_wr_index_usartc0=0;
                 ;
                 ;    }
                 ;    break;
                 ;
                 ;    //////////////////////время///////////////////////////////////////
                 ;    /*
                 ;    case 0xA0:
                 ;    {
                 ;    //Mx=0xA0;
                 ;    //RX_BUFFER_SIZE_USARTC0=1;
                 ;    rx_buffer_usartc0[0]=0xFF;
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A0);
                 ;    for(ch=1,A0[l-1]=0;ch<l-1;ch++) A0[l-1]=A0[l-1]+A0[ch];
                 ;    //высылаем пачку
                 ;    for (ch=0;ch<l;ch++) putchar(A0[ch]);
                 ;    l=0;
                 ;    Mx=0xFF;
                 ;    rx_wr_index_usartc0=0;
                 ;    }
                 ;    break;
                 ;    */
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;    ///////////////////////////////////////////////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ...
                 ;    //////////////////////////////запросы данных//////////////////////////////запросы данных
                 ;    case 0xA0:
                 _0xAE:
000a71 3ae0      	CPI  R30,LOW(0xA0)
000a72 e0a0      	LDI  R26,HIGH(0xA0)
000a73 07fa      	CPC  R31,R26
000a74 f539      	BRNE _0xAF
                 ;    {
                 ;    //Mx=0xA0;
                 ;    //RX_BUFFER_SIZE_USARTC0=1;
                 ;    rx_buffer_usartc0[0]=0xFF;
000a75 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A0);
000a77 940e 35ef 	CALL SUBOPT_0x1
                 ;    for(ch=1,A0[l-1]=0;ch<l-1;ch++) A0[l-1]=A0[l-1]+A0[ch];
000a79 58e9      	SUBI R30,LOW(-_A0)
000a7a 4cff      	SBCI R31,HIGH(-_A0)
000a7b e0a0      	LDI  R26,LOW(0)
000a7c 83a0      	STD  Z+0,R26
                 _0xB1:
000a7d 940e 35fa 	CALL SUBOPT_0x2
000a7f 940e 35ff 	CALL SUBOPT_0x3
000a81 f43c      	BRGE _0xB2
000a82 940e 35fa 	CALL SUBOPT_0x2
000a84 940e 3605 	CALL SUBOPT_0x4
000a86 940e 3613 	CALL SUBOPT_0x5
000a88 cff4      	RJMP _0xB1
                 _0xB2:
000a89 e0e0      	LDI  R30,LOW(0)
000a8a 93e0 30bf 	STS  _ch,R30
                 _0xB4:
000a8c 940e 3880 	CALL SUBOPT_0x4E
000a8e f450      	BRSH _0xB5
000a8f 91e0 30bf 	LDS  R30,_ch
000a91 e0f0      	LDI  R31,0
000a92 58e9      	SUBI R30,LOW(-_A0)
000a93 4cff      	SBCI R31,HIGH(-_A0)
000a94 81a0      	LD   R26,Z
000a95 d526      	RCALL _putchar
000a96 940e 3613 	CALL SUBOPT_0x5
000a98 cff3      	RJMP _0xB4
                 _0xB5:
000a99 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    rx_wr_index_usartc0=0;
000a9b c261      	RJMP _0x221
                 ;    }
                 ;    break;
                 ;
                 ;    case 0xA1:
                 _0xAF:
000a9c 3ae1      	CPI  R30,LOW(0xA1)
000a9d e0a0      	LDI  R26,HIGH(0xA1)
000a9e 07fa      	CPC  R31,R26
000a9f f539      	BRNE _0xB6
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000aa0 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A1);
000aa2 940e 366d 	CALL SUBOPT_0xD
                 ;    for(ch=1,A1[l-1]=0;ch<l-1;ch++) A1[l-1]=A1[l-1]+A1[ch];
000aa4 56ed      	SUBI R30,LOW(-_A1)
000aa5 4cff      	SBCI R31,HIGH(-_A1)
000aa6 e0a0      	LDI  R26,LOW(0)
000aa7 83a0      	STD  Z+0,R26
                 _0xB8:
000aa8 940e 35fa 	CALL SUBOPT_0x2
000aaa 940e 35ff 	CALL SUBOPT_0x3
000aac f43c      	BRGE _0xB9
000aad 940e 35fa 	CALL SUBOPT_0x2
000aaf 940e 3674 	CALL SUBOPT_0xE
000ab1 940e 3613 	CALL SUBOPT_0x5
000ab3 cff4      	RJMP _0xB8
                 _0xB9:
000ab4 e0e0      	LDI  R30,LOW(0)
000ab5 93e0 30bf 	STS  _ch,R30
                 _0xBB:
000ab7 940e 3880 	CALL SUBOPT_0x4E
000ab9 f450      	BRSH _0xBC
000aba 91e0 30bf 	LDS  R30,_ch
000abc e0f0      	LDI  R31,0
000abd 56ed      	SUBI R30,LOW(-_A1)
000abe 4cff      	SBCI R31,HIGH(-_A1)
000abf 81a0      	LD   R26,Z
000ac0 d4fb      	RCALL _putchar
000ac1 940e 3613 	CALL SUBOPT_0x5
000ac3 cff3      	RJMP _0xBB
                 _0xBC:
000ac4 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000ac6 c237      	RJMP _0xA0
                 ;
                 ;    case 0xA2:
                 _0xB6:
000ac7 3ae2      	CPI  R30,LOW(0xA2)
000ac8 e0a0      	LDI  R26,HIGH(0xA2)
000ac9 07fa      	CPC  R31,R26
000aca f539      	BRNE _0xBD
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000acb 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A2);
000acd 940e 362e 	CALL SUBOPT_0x8
                 ;    for(ch=1,A2[l-1]=0;ch<l-1;ch++) A2[l-1]=A2[l-1]+A2[ch];
000acf 53e3      	SUBI R30,LOW(-_A2)
000ad0 4cff      	SBCI R31,HIGH(-_A2)
000ad1 e0a0      	LDI  R26,LOW(0)
000ad2 83a0      	STD  Z+0,R26
                 _0xBF:
000ad3 940e 35fa 	CALL SUBOPT_0x2
000ad5 940e 35ff 	CALL SUBOPT_0x3
000ad7 f43c      	BRGE _0xC0
000ad8 940e 35fa 	CALL SUBOPT_0x2
000ada 940e 3643 	CALL SUBOPT_0xA
000adc 940e 3613 	CALL SUBOPT_0x5
000ade cff4      	RJMP _0xBF
                 _0xC0:
000adf e0e0      	LDI  R30,LOW(0)
000ae0 93e0 30bf 	STS  _ch,R30
                 _0xC2:
000ae2 940e 3880 	CALL SUBOPT_0x4E
000ae4 f450      	BRSH _0xC3
000ae5 91e0 30bf 	LDS  R30,_ch
000ae7 e0f0      	LDI  R31,0
000ae8 53e3      	SUBI R30,LOW(-_A2)
000ae9 4cff      	SBCI R31,HIGH(-_A2)
000aea 81a0      	LD   R26,Z
000aeb d4d0      	RCALL _putchar
000aec 940e 3613 	CALL SUBOPT_0x5
000aee cff3      	RJMP _0xC2
                 _0xC3:
000aef 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000af1 c20c      	RJMP _0xA0
                 ;
                 ;    case 0xA4:
                 _0xBD:
000af2 3ae4      	CPI  R30,LOW(0xA4)
000af3 e0a0      	LDI  R26,HIGH(0xA4)
000af4 07fa      	CPC  R31,R26
000af5 f539      	BRNE _0xC4
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000af6 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A4);
000af8 940e 35ef 	CALL SUBOPT_0x1
                 ;    for(ch=1,A4[l-1]=0;ch<l-1;ch++) A4[l-1]=A4[l-1]+A4[ch];
000afa 51ef      	SUBI R30,LOW(-_A4)
000afb 4cff      	SBCI R31,HIGH(-_A4)
000afc e0a0      	LDI  R26,LOW(0)
000afd 83a0      	STD  Z+0,R26
                 _0xC6:
000afe 940e 35fa 	CALL SUBOPT_0x2
000b00 940e 35ff 	CALL SUBOPT_0x3
000b02 f43c      	BRGE _0xC7
000b03 940e 35fa 	CALL SUBOPT_0x2
000b05 940e 36cf 	CALL SUBOPT_0x16
000b07 940e 3613 	CALL SUBOPT_0x5
000b09 cff4      	RJMP _0xC6
                 _0xC7:
000b0a e0e0      	LDI  R30,LOW(0)
000b0b 93e0 30bf 	STS  _ch,R30
                 _0xC9:
000b0d 940e 3880 	CALL SUBOPT_0x4E
000b0f f450      	BRSH _0xCA
000b10 91e0 30bf 	LDS  R30,_ch
000b12 e0f0      	LDI  R31,0
000b13 51ef      	SUBI R30,LOW(-_A4)
000b14 4cff      	SBCI R31,HIGH(-_A4)
000b15 81a0      	LD   R26,Z
000b16 d4a5      	RCALL _putchar
000b17 940e 3613 	CALL SUBOPT_0x5
000b19 cff3      	RJMP _0xC9
                 _0xCA:
000b1a 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;
                 ;    }
                 ;    break;
000b1c c1e1      	RJMP _0xA0
                 ;
                 ;    case 0xA6:
                 _0xC4:
000b1d 3ae6      	CPI  R30,LOW(0xA6)
000b1e e0a0      	LDI  R26,HIGH(0xA6)
000b1f 07fa      	CPC  R31,R26
000b20 f539      	BRNE _0xCB
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000b21 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A6);
000b23 940e 35ef 	CALL SUBOPT_0x1
                 ;    for(ch=1,A6[l-1]=0;ch<l-1;ch++) A6[l-1]=A6[l-1]+A6[ch];
000b25 51e3      	SUBI R30,LOW(-_A6)
000b26 4cff      	SBCI R31,HIGH(-_A6)
000b27 e0a0      	LDI  R26,LOW(0)
000b28 83a0      	STD  Z+0,R26
                 _0xCD:
000b29 940e 35fa 	CALL SUBOPT_0x2
000b2b 940e 35ff 	CALL SUBOPT_0x3
000b2d f43c      	BRGE _0xCE
000b2e 940e 35fa 	CALL SUBOPT_0x2
000b30 940e 365f 	CALL SUBOPT_0xC
000b32 940e 3613 	CALL SUBOPT_0x5
000b34 cff4      	RJMP _0xCD
                 _0xCE:
000b35 e0e0      	LDI  R30,LOW(0)
000b36 93e0 30bf 	STS  _ch,R30
                 _0xD0:
000b38 940e 3880 	CALL SUBOPT_0x4E
000b3a f450      	BRSH _0xD1
000b3b 91e0 30bf 	LDS  R30,_ch
000b3d e0f0      	LDI  R31,0
000b3e 51e3      	SUBI R30,LOW(-_A6)
000b3f 4cff      	SBCI R31,HIGH(-_A6)
000b40 81a0      	LD   R26,Z
000b41 d47a      	RCALL _putchar
000b42 940e 3613 	CALL SUBOPT_0x5
000b44 cff3      	RJMP _0xD0
                 _0xD1:
000b45 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000b47 c1b6      	RJMP _0xA0
                 ;
                 ;    case 0xA7:
                 _0xCB:
000b48 3ae7      	CPI  R30,LOW(0xA7)
000b49 e0a0      	LDI  R26,HIGH(0xA7)
000b4a 07fa      	CPC  R31,R26
000b4b f539      	BRNE _0xD2
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000b4c 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(A7);
000b4e 940e 3682 	CALL SUBOPT_0xF
                 ;    for(ch=1,A7[l-1]=0;ch<l-1;ch++) A7[l-1]=A7[l-1]+A7[ch];
000b50 54ec      	SUBI R30,LOW(-_A7)
000b51 4cff      	SBCI R31,HIGH(-_A7)
000b52 e0a0      	LDI  R26,LOW(0)
000b53 83a0      	STD  Z+0,R26
                 _0xD4:
000b54 940e 35fa 	CALL SUBOPT_0x2
000b56 940e 35ff 	CALL SUBOPT_0x3
000b58 f43c      	BRGE _0xD5
000b59 940e 35fa 	CALL SUBOPT_0x2
000b5b 940e 3689 	CALL SUBOPT_0x10
000b5d 940e 3613 	CALL SUBOPT_0x5
000b5f cff4      	RJMP _0xD4
                 _0xD5:
000b60 e0e0      	LDI  R30,LOW(0)
000b61 93e0 30bf 	STS  _ch,R30
                 _0xD7:
000b63 940e 3880 	CALL SUBOPT_0x4E
000b65 f450      	BRSH _0xD8
000b66 91e0 30bf 	LDS  R30,_ch
000b68 e0f0      	LDI  R31,0
000b69 54ec      	SUBI R30,LOW(-_A7)
000b6a 4cff      	SBCI R31,HIGH(-_A7)
000b6b 81a0      	LD   R26,Z
000b6c d44f      	RCALL _putchar
000b6d 940e 3613 	CALL SUBOPT_0x5
000b6f cff3      	RJMP _0xD7
                 _0xD8:
000b70 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000b72 c18b      	RJMP _0xA0
                 ;
                 ;    case 0xAA:
                 _0xD2:
000b73 3aea      	CPI  R30,LOW(0xAA)
000b74 e0a0      	LDI  R26,HIGH(0xAA)
000b75 07fa      	CPC  R31,R26
000b76 f539      	BRNE _0xD9
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000b77 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(AA);
000b79 940e 362e 	CALL SUBOPT_0x8
                 ;    for(ch=1,AA[l-1]=0;ch<l-1;ch++) AA[l-1]=AA[l-1]+AA[ch];
000b7b 57e1      	SUBI R30,LOW(-_AA)
000b7c 4cff      	SBCI R31,HIGH(-_AA)
000b7d e0a0      	LDI  R26,LOW(0)
000b7e 83a0      	STD  Z+0,R26
                 _0xDB:
000b7f 940e 35fa 	CALL SUBOPT_0x2
000b81 940e 35ff 	CALL SUBOPT_0x3
000b83 f43c      	BRGE _0xDC
000b84 940e 35fa 	CALL SUBOPT_0x2
000b86 940e 3635 	CALL SUBOPT_0x9
000b88 940e 3613 	CALL SUBOPT_0x5
000b8a cff4      	RJMP _0xDB
                 _0xDC:
000b8b e0e0      	LDI  R30,LOW(0)
000b8c 93e0 30bf 	STS  _ch,R30
                 _0xDE:
000b8e 940e 3880 	CALL SUBOPT_0x4E
000b90 f450      	BRSH _0xDF
000b91 91e0 30bf 	LDS  R30,_ch
000b93 e0f0      	LDI  R31,0
000b94 57e1      	SUBI R30,LOW(-_AA)
000b95 4cff      	SBCI R31,HIGH(-_AA)
000b96 81a0      	LD   R26,Z
000b97 d424      	RCALL _putchar
000b98 940e 3613 	CALL SUBOPT_0x5
000b9a cff3      	RJMP _0xDE
                 _0xDF:
000b9b 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000b9d c160      	RJMP _0xA0
                 ;
                 ;
                 ;    case 0xAB:
                 _0xD9:
000b9e 3aeb      	CPI  R30,LOW(0xAB)
000b9f e0a0      	LDI  R26,HIGH(0xAB)
000ba0 07fa      	CPC  R31,R26
000ba1 f539      	BRNE _0xE0
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000ba2 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(AB);
000ba4 940e 36a5 	CALL SUBOPT_0x12
                 ;    for(ch=1,AB[l-1]=0;ch<l-1;ch++) AB[l-1]=AB[l-1]+AB[ch];
000ba6 53ef      	SUBI R30,LOW(-_AB)
000ba7 4cff      	SBCI R31,HIGH(-_AB)
000ba8 e0a0      	LDI  R26,LOW(0)
000ba9 83a0      	STD  Z+0,R26
                 _0xE2:
000baa 940e 35fa 	CALL SUBOPT_0x2
000bac 940e 35ff 	CALL SUBOPT_0x3
000bae f43c      	BRGE _0xE3
000baf 940e 35fa 	CALL SUBOPT_0x2
000bb1 940e 36ac 	CALL SUBOPT_0x13
000bb3 940e 3613 	CALL SUBOPT_0x5
000bb5 cff4      	RJMP _0xE2
                 _0xE3:
000bb6 e0e0      	LDI  R30,LOW(0)
000bb7 93e0 30bf 	STS  _ch,R30
                 _0xE5:
000bb9 940e 3880 	CALL SUBOPT_0x4E
000bbb f450      	BRSH _0xE6
000bbc 91e0 30bf 	LDS  R30,_ch
000bbe e0f0      	LDI  R31,0
000bbf 53ef      	SUBI R30,LOW(-_AB)
000bc0 4cff      	SBCI R31,HIGH(-_AB)
000bc1 81a0      	LD   R26,Z
000bc2 d3f9      	RCALL _putchar
000bc3 940e 3613 	CALL SUBOPT_0x5
000bc5 cff3      	RJMP _0xE5
                 _0xE6:
000bc6 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000bc8 c135      	RJMP _0xA0
                 ;
                 ;    case 0xAD:
                 _0xE0:
000bc9 3aed      	CPI  R30,LOW(0xAD)
000bca e0a0      	LDI  R26,HIGH(0xAD)
000bcb 07fa      	CPC  R31,R26
000bcc f539      	BRNE _0xE7
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000bcd 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(AD);
000bcf 940e 35ef 	CALL SUBOPT_0x1
                 ;    for(ch=1,AD[l-1]=0;ch<l-1;ch++) AD[l-1]=AD[l-1]+AD[ch];
000bd1 55e2      	SUBI R30,LOW(-_AD)
000bd2 4cff      	SBCI R31,HIGH(-_AD)
000bd3 e0a0      	LDI  R26,LOW(0)
000bd4 83a0      	STD  Z+0,R26
                 _0xE9:
000bd5 940e 35fa 	CALL SUBOPT_0x2
000bd7 940e 35ff 	CALL SUBOPT_0x3
000bd9 f43c      	BRGE _0xEA
000bda 940e 35fa 	CALL SUBOPT_0x2
000bdc 940e 3651 	CALL SUBOPT_0xB
000bde 940e 3613 	CALL SUBOPT_0x5
000be0 cff4      	RJMP _0xE9
                 _0xEA:
000be1 e0e0      	LDI  R30,LOW(0)
000be2 93e0 30bf 	STS  _ch,R30
                 _0xEC:
000be4 940e 3880 	CALL SUBOPT_0x4E
000be6 f450      	BRSH _0xED
000be7 91e0 30bf 	LDS  R30,_ch
000be9 e0f0      	LDI  R31,0
000bea 55e2      	SUBI R30,LOW(-_AD)
000beb 4cff      	SBCI R31,HIGH(-_AD)
000bec 81a0      	LD   R26,Z
000bed d3ce      	RCALL _putchar
000bee 940e 3613 	CALL SUBOPT_0x5
000bf0 cff3      	RJMP _0xEC
                 _0xED:
000bf1 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000bf3 c10a      	RJMP _0xA0
                 ;
                 ;
                 ;    case 0xAE:
                 _0xE7:
000bf4 3aee      	CPI  R30,LOW(0xAE)
000bf5 e0a0      	LDI  R26,HIGH(0xAE)
000bf6 07fa      	CPC  R31,R26
000bf7 f539      	BRNE _0xEE
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000bf8 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(AE);
000bfa 940e 36ba 	CALL SUBOPT_0x14
                 ;    for(ch=1,AE[l-1]=0;ch<l-1;ch++) AE[l-1]=AE[l-1]+AE[ch];
000bfc 52ef      	SUBI R30,LOW(-_AE)
000bfd 4cff      	SBCI R31,HIGH(-_AE)
000bfe e0a0      	LDI  R26,LOW(0)
000bff 83a0      	STD  Z+0,R26
                 _0xF0:
000c00 940e 35fa 	CALL SUBOPT_0x2
000c02 940e 35ff 	CALL SUBOPT_0x3
000c04 f43c      	BRGE _0xF1
000c05 940e 35fa 	CALL SUBOPT_0x2
000c07 940e 36c1 	CALL SUBOPT_0x15
000c09 940e 3613 	CALL SUBOPT_0x5
000c0b cff4      	RJMP _0xF0
                 _0xF1:
000c0c e0e0      	LDI  R30,LOW(0)
000c0d 93e0 30bf 	STS  _ch,R30
                 _0xF3:
000c0f 940e 3880 	CALL SUBOPT_0x4E
000c11 f450      	BRSH _0xF4
000c12 91e0 30bf 	LDS  R30,_ch
000c14 e0f0      	LDI  R31,0
000c15 52ef      	SUBI R30,LOW(-_AE)
000c16 4cff      	SBCI R31,HIGH(-_AE)
000c17 81a0      	LD   R26,Z
000c18 d3a3      	RCALL _putchar
000c19 940e 3613 	CALL SUBOPT_0x5
000c1b cff3      	RJMP _0xF3
                 _0xF4:
000c1c 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000c1e c0df      	RJMP _0xA0
                 ;
                 ;    case 0xAF:
                 _0xEE:
000c1f 3aef      	CPI  R30,LOW(0xAF)
000c20 e0a0      	LDI  R26,HIGH(0xAF)
000c21 07fa      	CPC  R31,R26
000c22 f539      	BRNE _0xF5
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000c23 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(AF);
000c25 940e 3619 	CALL SUBOPT_0x6
                 ;    for(ch=1,AF[l-1]=0;ch<l-1;ch++) AF[l-1]=AF[l-1]+AF[ch];
000c27 58e3      	SUBI R30,LOW(-_AF)
000c28 4cff      	SBCI R31,HIGH(-_AF)
000c29 e0a0      	LDI  R26,LOW(0)
000c2a 83a0      	STD  Z+0,R26
                 _0xF7:
000c2b 940e 35fa 	CALL SUBOPT_0x2
000c2d 940e 35ff 	CALL SUBOPT_0x3
000c2f f43c      	BRGE _0xF8
000c30 940e 35fa 	CALL SUBOPT_0x2
000c32 940e 3620 	CALL SUBOPT_0x7
000c34 940e 3613 	CALL SUBOPT_0x5
000c36 cff4      	RJMP _0xF7
                 _0xF8:
000c37 e0e0      	LDI  R30,LOW(0)
000c38 93e0 30bf 	STS  _ch,R30
                 _0xFA:
000c3a 940e 3880 	CALL SUBOPT_0x4E
000c3c f450      	BRSH _0xFB
000c3d 91e0 30bf 	LDS  R30,_ch
000c3f e0f0      	LDI  R31,0
000c40 58e3      	SUBI R30,LOW(-_AF)
000c41 4cff      	SBCI R31,HIGH(-_AF)
000c42 81a0      	LD   R26,Z
000c43 d378      	RCALL _putchar
000c44 940e 3613 	CALL SUBOPT_0x5
000c46 cff3      	RJMP _0xFA
                 _0xFB:
000c47 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000c49 c0b4      	RJMP _0xA0
                 ;
                 ;
                 ;    case 0x58:
                 _0xF5:
000c4a 35e8      	CPI  R30,LOW(0x58)
000c4b e0a0      	LDI  R26,HIGH(0x58)
000c4c 07fa      	CPC  R31,R26
000c4d f539      	BRNE _0xFC
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000c4e 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(p58);
000c50 940e 35ef 	CALL SUBOPT_0x1
                 ;    for(ch=1,p58[l-1]=0;ch<l-1;ch++) p58[l-1]=p58[l-1]+p58[ch];
000c52 51e9      	SUBI R30,LOW(-_p58)
000c53 4cff      	SBCI R31,HIGH(-_p58)
000c54 e0a0      	LDI  R26,LOW(0)
000c55 83a0      	STD  Z+0,R26
                 _0xFE:
000c56 940e 35fa 	CALL SUBOPT_0x2
000c58 940e 35ff 	CALL SUBOPT_0x3
000c5a f43c      	BRGE _0xFF
000c5b 940e 35fa 	CALL SUBOPT_0x2
000c5d 940e 36dd 	CALL SUBOPT_0x17
000c5f 940e 3613 	CALL SUBOPT_0x5
000c61 cff4      	RJMP _0xFE
                 _0xFF:
000c62 e0e0      	LDI  R30,LOW(0)
000c63 93e0 30bf 	STS  _ch,R30
                 _0x101:
000c65 940e 3880 	CALL SUBOPT_0x4E
000c67 f450      	BRSH _0x102
000c68 91e0 30bf 	LDS  R30,_ch
000c6a e0f0      	LDI  R31,0
000c6b 51e9      	SUBI R30,LOW(-_p58)
000c6c 4cff      	SBCI R31,HIGH(-_p58)
000c6d 81a0      	LD   R26,Z
000c6e d34d      	RCALL _putchar
000c6f 940e 3613 	CALL SUBOPT_0x5
000c71 cff3      	RJMP _0x101
                 _0x102:
000c72 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000c74 c089      	RJMP _0xA0
                 ;
                 ;    case 0x6A:
                 _0xFC:
000c75 36ea      	CPI  R30,LOW(0x6A)
000c76 e0a0      	LDI  R26,HIGH(0x6A)
000c77 07fa      	CPC  R31,R26
000c78 f539      	BRNE _0x103
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000c79 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(p6A);
000c7b 940e 35ef 	CALL SUBOPT_0x1
                 ;    for(ch=1,p6A[l-1]=0;ch<l-1;ch++) p6A[l-1]=p6A[l-1]+p6A[ch];
000c7d 52e5      	SUBI R30,LOW(-_p6A)
000c7e 4cff      	SBCI R31,HIGH(-_p6A)
000c7f e0a0      	LDI  R26,LOW(0)
000c80 83a0      	STD  Z+0,R26
                 _0x105:
000c81 940e 35fa 	CALL SUBOPT_0x2
000c83 940e 35ff 	CALL SUBOPT_0x3
000c85 f43c      	BRGE _0x106
000c86 940e 35fa 	CALL SUBOPT_0x2
000c88 940e 36f9 	CALL SUBOPT_0x19
000c8a 940e 3613 	CALL SUBOPT_0x5
000c8c cff4      	RJMP _0x105
                 _0x106:
000c8d e0e0      	LDI  R30,LOW(0)
000c8e 93e0 30bf 	STS  _ch,R30
                 _0x108:
000c90 940e 3880 	CALL SUBOPT_0x4E
000c92 f450      	BRSH _0x109
000c93 91e0 30bf 	LDS  R30,_ch
000c95 e0f0      	LDI  R31,0
000c96 52e5      	SUBI R30,LOW(-_p6A)
000c97 4cff      	SBCI R31,HIGH(-_p6A)
000c98 81a0      	LD   R26,Z
000c99 d322      	RCALL _putchar
000c9a 940e 3613 	CALL SUBOPT_0x5
000c9c cff3      	RJMP _0x108
                 _0x109:
000c9d 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000c9f c05e      	RJMP _0xA0
                 ;
                 ;
                 ;    case 0x76:
                 _0x103:
000ca0 37e6      	CPI  R30,LOW(0x76)
000ca1 e0a0      	LDI  R26,HIGH(0x76)
000ca2 07fa      	CPC  R31,R26
000ca3 f539      	BRNE _0x10A
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000ca4 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(p76);
000ca6 940e 362e 	CALL SUBOPT_0x8
                 ;    for(ch=1,p76[l-1]=0;ch<l-1;ch++) p76[l-1]=p76[l-1]+p76[ch];
000ca8 54e5      	SUBI R30,LOW(-_p76)
000ca9 4cff      	SBCI R31,HIGH(-_p76)
000caa e0a0      	LDI  R26,LOW(0)
000cab 83a0      	STD  Z+0,R26
                 _0x10C:
000cac 940e 35fa 	CALL SUBOPT_0x2
000cae 940e 35ff 	CALL SUBOPT_0x3
000cb0 f43c      	BRGE _0x10D
000cb1 940e 35fa 	CALL SUBOPT_0x2
000cb3 940e 36eb 	CALL SUBOPT_0x18
000cb5 940e 3613 	CALL SUBOPT_0x5
000cb7 cff4      	RJMP _0x10C
                 _0x10D:
000cb8 e0e0      	LDI  R30,LOW(0)
000cb9 93e0 30bf 	STS  _ch,R30
                 _0x10F:
000cbb 940e 3880 	CALL SUBOPT_0x4E
000cbd f450      	BRSH _0x110
000cbe 91e0 30bf 	LDS  R30,_ch
000cc0 e0f0      	LDI  R31,0
000cc1 54e5      	SUBI R30,LOW(-_p76)
000cc2 4cff      	SBCI R31,HIGH(-_p76)
000cc3 81a0      	LD   R26,Z
000cc4 d2f7      	RCALL _putchar
000cc5 940e 3613 	CALL SUBOPT_0x5
000cc7 cff3      	RJMP _0x10F
                 _0x110:
000cc8 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000cca c033      	RJMP _0xA0
                 ;
                 ;    case 0x77:
                 _0x10A:
000ccb 37e7      	CPI  R30,LOW(0x77)
000ccc e0a0      	LDI  R26,HIGH(0x77)
000ccd 07fa      	CPC  R31,R26
000cce f539      	BRNE _0x118
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000ccf 940e 387b 	CALL SUBOPT_0x4D
                 ;    rx_wr_index_usartc0=0;
                 ;    //тут же ответ
                 ;    l=sizeof(p77);
000cd1 940e 362e 	CALL SUBOPT_0x8
                 ;    for(ch=1,p77[l-1]=0;ch<l-1;ch++) p77[l-1]=p77[l-1]+p77[ch];
000cd3 54e9      	SUBI R30,LOW(-_p77)
000cd4 4cff      	SBCI R31,HIGH(-_p77)
000cd5 e0a0      	LDI  R26,LOW(0)
000cd6 83a0      	STD  Z+0,R26
                 _0x113:
000cd7 940e 35fa 	CALL SUBOPT_0x2
000cd9 940e 35ff 	CALL SUBOPT_0x3
000cdb f43c      	BRGE _0x114
000cdc 940e 35fa 	CALL SUBOPT_0x2
000cde 940e 3697 	CALL SUBOPT_0x11
000ce0 940e 3613 	CALL SUBOPT_0x5
000ce2 cff4      	RJMP _0x113
                 _0x114:
000ce3 e0e0      	LDI  R30,LOW(0)
000ce4 93e0 30bf 	STS  _ch,R30
                 _0x116:
000ce6 940e 3880 	CALL SUBOPT_0x4E
000ce8 f450      	BRSH _0x117
000ce9 91e0 30bf 	LDS  R30,_ch
000ceb e0f0      	LDI  R31,0
000cec 54e9      	SUBI R30,LOW(-_p77)
000ced 4cff      	SBCI R31,HIGH(-_p77)
000cee 81a0      	LD   R26,Z
000cef d2cc      	RCALL _putchar
000cf0 940e 3613 	CALL SUBOPT_0x5
000cf2 cff3      	RJMP _0x116
                 _0x117:
000cf3 940e 3886 	CALL SUBOPT_0x4F
                 ;    Mx=0xFF;
                 ;    }
                 ;    break;
000cf5 c008      	RJMP _0xA0
                 ;
                 ;    //////////////////////////////запросы данных//////////////////////////////запросы данных
                 ;
                 ;    default :
                 _0x118:
                 ;    {
                 ;    rx_buffer_usartc0[0]=0xFF;
000cf6 efef      	LDI  R30,LOW(255)
000cf7 93e0 3037 	STS  _rx_buffer_usartc0,R30
                 ;    Mx=0xFF;
000cf9 93e0 314a 	STS  _Mx,R30
                 ;    RX_BUFFER_SIZE_USARTC0=1;
                 _0x222:
000cfb e0e1      	LDI  R30,LOW(1)
000cfc 2ebe      	MOV  R11,R30
                 ;    rx_wr_index_usartc0=0;
                 _0x221:
000cfd 24aa      	CLR  R10
                 ;    }
                 ;
                 ;
                 ;
                 ;}//switch buf
                 _0xA0:
                 ;//////////////////////////////////////////////////////////////////////////////
                 ;
                 ;
                 ;
                 ;}//end case ff
                 ;//break; //mx=ff
                 ;
                 ;
                 ;///////////////////////////////////////////////////CACACACCAACACACACACACACACACACACACACACACACAC
                 ;case 0xCA:
000cfe c004      	RJMP _0x119
                 _0x9D:
000cff 3cea      	CPI  R30,LOW(0xCA)
000d00 e0a0      	LDI  R26,HIGH(0xCA)
000d01 07fa      	CPC  R31,R26
000d02 f539      	BRNE _0x11A
                 _0x119:
                 ; {
                 ; //проверка по длинне
                 ; if(rx_wr_index_usartc0==2)
000d03 e0e2      	LDI  R30,LOW(2)
000d04 15ea      	CP   R30,R10
000d05 f519      	BRNE _0x11B
                 ; //проверка по содержанию пакета
                 ; {
                 ; if(rx_buffer_usartc0[0]==0x01&&rx_buffer_usartc0[1]==0x01) {putchar(0xCA);putchar(0xCA);Mx=0xFF;RX_BUFFER_SIZE_USARTC0= ...
000d06 91a0 3037 	LDS  R26,_rx_buffer_usartc0
000d08 30a1      	CPI  R26,LOW(0x1)
000d09 f421      	BRNE _0x11D
                +
000d0a 91a0 3038+LDS R26 , _rx_buffer_usartc0 + ( 1 )
                 	__GETB2MN _rx_buffer_usartc0,1
000d0c 30a1      	CPI  R26,LOW(0x1)
000d0d f009      	BREQ _0x11E
                 _0x11D:
000d0e c003      	RJMP _0x11C
                 _0x11E:
000d0f 940e 388d 	CALL SUBOPT_0x50
000d11 c011      	RJMP _0x223
                 ; else if(rx_buffer_usartc0[0]==0x0F&&rx_buffer_usartc0[1]==0x0F) {putchar(0xCA);putchar(0xCA);Mx=0xFF;RX_BUFFER_SIZE_USA ...
                 _0x11C:
000d12 91a0 3037 	LDS  R26,_rx_buffer_usartc0
000d14 30af      	CPI  R26,LOW(0xF)
000d15 f421      	BRNE _0x121
                +
000d16 91a0 3038+LDS R26 , _rx_buffer_usartc0 + ( 1 )
                 	__GETB2MN _rx_buffer_usartc0,1
000d18 30af      	CPI  R26,LOW(0xF)
000d19 f009      	BREQ _0x122
                 _0x121:
000d1a c008      	RJMP _0x120
                 _0x122:
000d1b 940e 388d 	CALL SUBOPT_0x50
000d1d 940e 384f 	CALL SUBOPT_0x47
                 ;                                                                    send=1;
000d1f e0e1      	LDI  R30,LOW(1)
000d20 93e0 3149 	STS  _send,R30
                 ;                                                                    rx_wr_index_usartc0=0;}
000d22 c005      	RJMP _0x224
                 ; else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
                 _0x120:
                 _0x223:
000d23 efef      	LDI  R30,LOW(255)
000d24 93e0 314a 	STS  _Mx,R30
000d26 e0e1      	LDI  R30,LOW(1)
000d27 2ebe      	MOV  R11,R30
                 _0x224:
000d28 24aa      	CLR  R10
                 ; }
                 ;
                 ;
                 ; }
                 _0x11B:
                 ;break;
000d29 c291      	RJMP _0x9C
                 ;/////////////////////////////////////////////////////////////////////////сброс
                 ;case 0xF5:
                 _0x11A:
000d2a 3fe5      	CPI  R30,LOW(0xF5)
000d2b e0a0      	LDI  R26,HIGH(0xF5)
000d2c 07fa      	CPC  R31,R26
000d2d f511      	BRNE _0x124
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==2)
000d2e e0e2      	LDI  R30,LOW(2)
000d2f 15ea      	CP   R30,R10
000d30 f4f1      	BRNE _0x125
                 ; //содержание
                 ;                if(rx_buffer_usartc0[0]==0x5F&&rx_buffer_usartc0[1]==0x5F)
000d31 91a0 3037 	LDS  R26,_rx_buffer_usartc0
000d33 35af      	CPI  R26,LOW(0x5F)
000d34 f421      	BRNE _0x127
                +
000d35 91a0 3038+LDS R26 , _rx_buffer_usartc0 + ( 1 )
                 	__GETB2MN _rx_buffer_usartc0,1
000d37 35af      	CPI  R26,LOW(0x5F)
000d38 f009      	BREQ _0x128
                 _0x127:
000d39 c012      	RJMP _0x126
                 _0x128:
                 ;                {
                 ;                putchar(0xF5);
000d3a efa5      	LDI  R26,LOW(245)
000d3b d280      	RCALL _putchar
                 ;                putchar(0xF5);
000d3c efa5      	LDI  R26,LOW(245)
000d3d d27e      	RCALL _putchar
                 ;                putchar(0xF5);
000d3e efa5      	LDI  R26,LOW(245)
000d3f 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000d41 24aa      	CLR  R10
                 ;                delay_ms(5);
000d42 e0a5      	LDI  R26,LOW(5)
000d43 e0b0      	LDI  R27,0
000d44 940e 3f1b 	CALL _delay_ms
                 ;                CCP = CCP_IOREG_gc;
000d46 ede8      	LDI  R30,LOW(216)
000d47 bfe4      	OUT  0x34,R30
                 ;                RST.CTRL=RST_SWRST_bm;
000d48 e0e1      	LDI  R30,LOW(1)
000d49 93e0 0079 	STS  121,R30
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000d4b c003      	RJMP _0x129
                 _0x126:
000d4c 940e 384f 	CALL SUBOPT_0x47
000d4e 24aa      	CLR  R10
                 _0x129:
                 ;
                 ;}
                 _0x125:
                 ;break;
000d4f c26b      	RJMP _0x9C
                 ;///////////////////////////////////////////////////////////ответ данные%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ...
                 ;case 0xB5:
                 _0x124:
000d50 3be5      	CPI  R30,LOW(0xB5)
000d51 e0a0      	LDI  R26,HIGH(0xB5)
000d52 07fa      	CPC  R31,R26
000d53 f591      	BRNE _0x12A
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==4)
000d54 e0e4      	LDI  R30,LOW(4)
000d55 15ea      	CP   R30,R10
000d56 f571      	BRNE _0x12B
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<3;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];B5buf[ch]=rx_buffer_usartc0[ch ...
000d57 940e 3896 	CALL SUBOPT_0x52
                 _0x12D:
000d59 91a0 30bf 	LDS  R26,_ch
000d5b 30a3      	CPI  R26,LOW(0x3)
000d5c f478      	BRSH _0x12E
000d5d 940e 389c 	CALL SUBOPT_0x53
000d5f 940e 38a3 	CALL SUBOPT_0x54
000d61 91a0 30bf 	LDS  R26,_ch
000d63 e0b0      	LDI  R27,0
000d64 5ba5      	SUBI R26,LOW(-_B5buf)
000d65 4cbe      	SBCI R27,HIGH(-_B5buf)
000d66 940e 389c 	CALL SUBOPT_0x53
000d68 93ec      	ST   X,R30
000d69 940e 3613 	CALL SUBOPT_0x5
000d6b cfed      	RJMP _0x12D
                 _0x12E:
                 ;
                 ;                B5buf[3]=rx_buffer_usartc0[3];
                +
000d6c 91e0 303a+LDS R30 , _rx_buffer_usartc0 + ( 3 )
                 	__GETB1MN _rx_buffer_usartc0,3
                +
000d6e 93e0 314e+STS _B5buf + ( 3 ) , R30
                 	__PUTB1MN _B5buf,3
                 ;
                 ;                if(rx_buffer_usartc0[3]==check_sum)
                +
000d70 91a0 303a+LDS R26 , _rx_buffer_usartc0 + ( 3 )
                 	__GETB2MN _rx_buffer_usartc0,3
000d72 91e0 30f3 	LDS  R30,_check_sum
000d74 17ea      	CP   R30,R26
000d75 f461      	BRNE _0x12F
                 ;
                 ;
                 ;
                 ;                {
                 ;
                 ;                                /*
                 ;                //эмуляция вывода кюветы
                 ;                if( (rx_buffer_usartc0[0]&0b00001000)==0b00000000)
                 ;                {
                 ;                //S0[21]=S0[21]|0b00001000;
                 ;                //S0[21]=S0[21]&0b11111011;
                 ;                //увеличение значения усилителя
                 ;                //S0[7]=0x00;// Сигнал  усилителя
                 ;                //S0[8]=0xFF; //Сигнал  усилителя
                 ;                }
                 ;                else
                 ;                if( (rx_buffer_usartc0[0]&0b00001000)==0b00001000)
                 ;                {
                 ;                //S0[21]=S0[21]|0b00000100;
                 ;                //S0[21]=S0[21]&0b11110111;
                 ;                //сигнал усилителя
                 ;                //S0[7]=0xC0;
                 ;                //S0[8]=0x0A;
                 ;
                 ;                }
                 ;                //клапан
                 ;                if( (rx_buffer_usartc0[0]&0b00000100)==0b00000100)
                 ;                {
                 ;                //S0[21]=S0[21]|0b00001000;
                 ;                //давление
                 ;                //S0[15]=0x04;// давление
                 ;                //S0[16]=0x0C;//
                 ;
                 ;                //S0[15]=0xAC;// давление
                 ;                //S0[16]=0x26;//
                 ;                }
                 ;
                 ;
                 ;                if( (rx_buffer_usartc0[0]&0b00000100)==0b00000000)
                 ;                {
                 ;                //S0[21]=S0[21]|0b00001000;
                 ;                //давление
                 ;                ///S0[15]=0xC0;//
                 ;                //S0[16]=0x0C;//
                 ;
                 ;                //S0[15]=0x10;// давление
                 ;                //S0[16]=0x27;//
                 ;                }
                 ;                */
                 ;                B5upr=rx_buffer_usartc0[0];
000d76 91e0 3037 	LDS  R30,_rx_buffer_usartc0
000d78 93e0 3076 	STS  _B5upr,R30
                 ;                putchar(0xB5);
000d7a eba5      	LDI  R26,LOW(181)
000d7b d240      	RCALL _putchar
                 ;                putchar(0xB5);
000d7c eba5      	LDI  R26,LOW(181)
000d7d 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000d7f 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000d81 c003      	RJMP _0x130
                 _0x12F:
000d82 940e 384f 	CALL SUBOPT_0x47
000d84 24aa      	CLR  R10
                 _0x130:
                 ;   }
                 ;}
                 _0x12B:
                 ;break;
000d85 c235      	RJMP _0x9C
                 ;
                 ;
                 ;
                 ;case 0xEA:
                 _0x12A:
000d86 3eea      	CPI  R30,LOW(0xEA)
000d87 e0a0      	LDI  R26,HIGH(0xEA)
000d88 07fa      	CPC  R31,R26
000d89 f511      	BRNE _0x131
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==2)
000d8a e0e2      	LDI  R30,LOW(2)
000d8b 15ea      	CP   R30,R10
000d8c f4f1      	BRNE _0x132
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<1;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000d8d 940e 3896 	CALL SUBOPT_0x52
                 _0x134:
000d8f 91a0 30bf 	LDS  R26,_ch
000d91 30a1      	CPI  R26,LOW(0x1)
000d92 f438      	BRSH _0x135
000d93 940e 389c 	CALL SUBOPT_0x53
000d95 940e 38a3 	CALL SUBOPT_0x54
000d97 940e 3613 	CALL SUBOPT_0x5
000d99 cff5      	RJMP _0x134
                 _0x135:
                 ;
                 ;                if(rx_buffer_usartc0[1]==check_sum)
                +
000d9a 91a0 3038+LDS R26 , _rx_buffer_usartc0 + ( 1 )
                 	__GETB2MN _rx_buffer_usartc0,1
000d9c 91e0 30f3 	LDS  R30,_check_sum
000d9e 17ea      	CP   R30,R26
000d9f f441      	BRNE _0x136
                 ;
                 ;                {
                 ;                putchar(0xEA);
000da0 eeaa      	LDI  R26,LOW(234)
000da1 d21a      	RCALL _putchar
                 ;                putchar(0xEA);
000da2 eeaa      	LDI  R26,LOW(234)
000da3 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000da5 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000da7 c003      	RJMP _0x137
                 _0x136:
000da8 940e 384f 	CALL SUBOPT_0x47
000daa 24aa      	CLR  R10
                 _0x137:
                 ;   }
                 ;}
                 _0x132:
                 ;break;
000dab c20f      	RJMP _0x9C
                 ;
                 ;case 0x60:
                 _0x131:
000dac 36e0      	CPI  R30,LOW(0x60)
000dad e0a0      	LDI  R26,HIGH(0x60)
000dae 07fa      	CPC  R31,R26
000daf f521      	BRNE _0x138
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==2)
000db0 e0e2      	LDI  R30,LOW(2)
000db1 15ea      	CP   R30,R10
000db2 f501      	BRNE _0x139
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<1;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000db3 940e 3896 	CALL SUBOPT_0x52
                 _0x13B:
000db5 91a0 30bf 	LDS  R26,_ch
000db7 30a1      	CPI  R26,LOW(0x1)
000db8 f438      	BRSH _0x13C
000db9 940e 389c 	CALL SUBOPT_0x53
000dbb 940e 38a3 	CALL SUBOPT_0x54
000dbd 940e 3613 	CALL SUBOPT_0x5
000dbf cff5      	RJMP _0x13B
                 _0x13C:
                 ;
                 ;                if(rx_buffer_usartc0[1]==check_sum)
                +
000dc0 91a0 3038+LDS R26 , _rx_buffer_usartc0 + ( 1 )
                 	__GETB2MN _rx_buffer_usartc0,1
000dc2 91e0 30f3 	LDS  R30,_check_sum
000dc4 17ea      	CP   R30,R26
000dc5 f451      	BRNE _0x13D
                 ;
                 ;                {
                 ;                putchar(0x60);
000dc6 e6a0      	LDI  R26,LOW(96)
000dc7 d1f4      	RCALL _putchar
                 ;                putchar(0x00);
000dc8 e0a0      	LDI  R26,LOW(0)
000dc9 d1f2      	RCALL _putchar
                 ;                putchar(0x00);
000dca e0a0      	LDI  R26,LOW(0)
000dcb 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000dcd 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000dcf c003      	RJMP _0x13E
                 _0x13D:
000dd0 940e 384f 	CALL SUBOPT_0x47
000dd2 24aa      	CLR  R10
                 _0x13E:
                 ;   }
                 ;}
                 _0x139:
                 ;break;
000dd3 c1e7      	RJMP _0x9C
                 ;
                 ;
                 ;case 0xE5:
                 _0x138:
000dd4 3ee5      	CPI  R30,LOW(0xE5)
000dd5 e0a0      	LDI  R26,HIGH(0xE5)
000dd6 07fa      	CPC  R31,R26
000dd7 f511      	BRNE _0x13F
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==7)
000dd8 e0e7      	LDI  R30,LOW(7)
000dd9 15ea      	CP   R30,R10
000dda f4f1      	BRNE _0x140
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<6;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000ddb 940e 3896 	CALL SUBOPT_0x52
                 _0x142:
000ddd 91a0 30bf 	LDS  R26,_ch
000ddf 30a6      	CPI  R26,LOW(0x6)
000de0 f438      	BRSH _0x143
000de1 940e 389c 	CALL SUBOPT_0x53
000de3 940e 38a3 	CALL SUBOPT_0x54
000de5 940e 3613 	CALL SUBOPT_0x5
000de7 cff5      	RJMP _0x142
                 _0x143:
                 ;
                 ;                if(rx_buffer_usartc0[6]==check_sum)
                +
000de8 91a0 303d+LDS R26 , _rx_buffer_usartc0 + ( 6 )
                 	__GETB2MN _rx_buffer_usartc0,6
000dea 91e0 30f3 	LDS  R30,_check_sum
000dec 17ea      	CP   R30,R26
000ded f441      	BRNE _0x144
                 ;
                 ;                {
                 ;                putchar(0xE5);
000dee eea5      	LDI  R26,LOW(229)
000def d1cc      	RCALL _putchar
                 ;                putchar(0xE5);
000df0 eea5      	LDI  R26,LOW(229)
000df1 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000df3 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000df5 c003      	RJMP _0x145
                 _0x144:
000df6 940e 384f 	CALL SUBOPT_0x47
000df8 24aa      	CLR  R10
                 _0x145:
                 ;   }
                 ;}
                 _0x140:
                 ;break;
000df9 c1c1      	RJMP _0x9C
                 ;
                 ;
                 ;case 0xE7:
                 _0x13F:
000dfa 3ee7      	CPI  R30,LOW(0xE7)
000dfb e0a0      	LDI  R26,HIGH(0xE7)
000dfc 07fa      	CPC  R31,R26
000dfd f511      	BRNE _0x146
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==7)
000dfe e0e7      	LDI  R30,LOW(7)
000dff 15ea      	CP   R30,R10
000e00 f4f1      	BRNE _0x147
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<6;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000e01 940e 3896 	CALL SUBOPT_0x52
                 _0x149:
000e03 91a0 30bf 	LDS  R26,_ch
000e05 30a6      	CPI  R26,LOW(0x6)
000e06 f438      	BRSH _0x14A
000e07 940e 389c 	CALL SUBOPT_0x53
000e09 940e 38a3 	CALL SUBOPT_0x54
000e0b 940e 3613 	CALL SUBOPT_0x5
000e0d cff5      	RJMP _0x149
                 _0x14A:
                 ;
                 ;                if(rx_buffer_usartc0[6]==check_sum)
                +
000e0e 91a0 303d+LDS R26 , _rx_buffer_usartc0 + ( 6 )
                 	__GETB2MN _rx_buffer_usartc0,6
000e10 91e0 30f3 	LDS  R30,_check_sum
000e12 17ea      	CP   R30,R26
000e13 f441      	BRNE _0x14B
                 ;
                 ;                {
                 ;                putchar(0xE7);
000e14 eea7      	LDI  R26,LOW(231)
000e15 d1a6      	RCALL _putchar
                 ;                putchar(0xE7);
000e16 eea7      	LDI  R26,LOW(231)
000e17 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000e19 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000e1b c003      	RJMP _0x14C
                 _0x14B:
000e1c 940e 384f 	CALL SUBOPT_0x47
000e1e 24aa      	CLR  R10
                 _0x14C:
                 ;   }
                 ;}
                 _0x147:
                 ;break;
000e1f c19b      	RJMP _0x9C
                 ;
                 ;
                 ;
                 ;
                 ;case 0xE8:
                 _0x146:
000e20 3ee8      	CPI  R30,LOW(0xE8)
000e21 e0a0      	LDI  R26,HIGH(0xE8)
000e22 07fa      	CPC  R31,R26
000e23 f511      	BRNE _0x14D
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==3)
000e24 e0e3      	LDI  R30,LOW(3)
000e25 15ea      	CP   R30,R10
000e26 f4f1      	BRNE _0x14E
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<2;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000e27 940e 3896 	CALL SUBOPT_0x52
                 _0x150:
000e29 91a0 30bf 	LDS  R26,_ch
000e2b 30a2      	CPI  R26,LOW(0x2)
000e2c f438      	BRSH _0x151
000e2d 940e 389c 	CALL SUBOPT_0x53
000e2f 940e 38a3 	CALL SUBOPT_0x54
000e31 940e 3613 	CALL SUBOPT_0x5
000e33 cff5      	RJMP _0x150
                 _0x151:
                 ;
                 ;                if(rx_buffer_usartc0[2]==check_sum)
                +
000e34 91a0 3039+LDS R26 , _rx_buffer_usartc0 + ( 2 )
                 	__GETB2MN _rx_buffer_usartc0,2
000e36 91e0 30f3 	LDS  R30,_check_sum
000e38 17ea      	CP   R30,R26
000e39 f441      	BRNE _0x152
                 ;
                 ;                {
                 ;                putchar(0xE8);
000e3a eea8      	LDI  R26,LOW(232)
000e3b d180      	RCALL _putchar
                 ;                putchar(0xE8);
000e3c eea8      	LDI  R26,LOW(232)
000e3d 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000e3f 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000e41 c003      	RJMP _0x153
                 _0x152:
000e42 940e 384f 	CALL SUBOPT_0x47
000e44 24aa      	CLR  R10
                 _0x153:
                 ;   }
                 ;}
                 _0x14E:
                 ;break;
000e45 c175      	RJMP _0x9C
                 ;
                 ;
                 ;case 0xE9:
                 _0x14D:
000e46 3ee9      	CPI  R30,LOW(0xE9)
000e47 e0a0      	LDI  R26,HIGH(0xE9)
000e48 07fa      	CPC  R31,R26
000e49 f511      	BRNE _0x154
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==3)
000e4a e0e3      	LDI  R30,LOW(3)
000e4b 15ea      	CP   R30,R10
000e4c f4f1      	BRNE _0x155
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<2;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000e4d 940e 3896 	CALL SUBOPT_0x52
                 _0x157:
000e4f 91a0 30bf 	LDS  R26,_ch
000e51 30a2      	CPI  R26,LOW(0x2)
000e52 f438      	BRSH _0x158
000e53 940e 389c 	CALL SUBOPT_0x53
000e55 940e 38a3 	CALL SUBOPT_0x54
000e57 940e 3613 	CALL SUBOPT_0x5
000e59 cff5      	RJMP _0x157
                 _0x158:
                 ;
                 ;                if(rx_buffer_usartc0[2]==check_sum)
                +
000e5a 91a0 3039+LDS R26 , _rx_buffer_usartc0 + ( 2 )
                 	__GETB2MN _rx_buffer_usartc0,2
000e5c 91e0 30f3 	LDS  R30,_check_sum
000e5e 17ea      	CP   R30,R26
000e5f f441      	BRNE _0x159
                 ;
                 ;                {
                 ;                putchar(0xE9);
000e60 eea9      	LDI  R26,LOW(233)
000e61 d15a      	RCALL _putchar
                 ;                putchar(0xE9);
000e62 eea9      	LDI  R26,LOW(233)
000e63 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000e65 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000e67 c003      	RJMP _0x15A
                 _0x159:
000e68 940e 384f 	CALL SUBOPT_0x47
000e6a 24aa      	CLR  R10
                 _0x15A:
                 ;   }
                 ;}
                 _0x155:
                 ;break;
000e6b c14f      	RJMP _0x9C
                 ;
                 ;
                 ;case 0xD1:
                 _0x154:
000e6c 3de1      	CPI  R30,LOW(0xD1)
000e6d e0a0      	LDI  R26,HIGH(0xD1)
000e6e 07fa      	CPC  R31,R26
000e6f f009      	BREQ PC+2
000e70 c046      	RJMP _0x15B
                 ;{
                 ;
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==5)
000e71 e0e5      	LDI  R30,LOW(5)
000e72 15ea      	CP   R30,R10
000e73 f009      	BREQ PC+2
000e74 c041      	RJMP _0x15C
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<4;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000e75 940e 3896 	CALL SUBOPT_0x52
                 _0x15E:
000e77 91a0 30bf 	LDS  R26,_ch
000e79 30a4      	CPI  R26,LOW(0x4)
000e7a f438      	BRSH _0x15F
000e7b 940e 389c 	CALL SUBOPT_0x53
000e7d 940e 38a3 	CALL SUBOPT_0x54
000e7f 940e 3613 	CALL SUBOPT_0x5
000e81 cff5      	RJMP _0x15E
                 _0x15F:
                 ;
                 ;                if(rx_buffer_usartc0[4]==check_sum)
                +
000e82 91a0 303b+LDS R26 , _rx_buffer_usartc0 + ( 4 )
                 	__GETB2MN _rx_buffer_usartc0,4
000e84 91e0 30f3 	LDS  R30,_check_sum
000e86 17ea      	CP   R30,R26
000e87 f559      	BRNE _0x160
                 ;
                 ;                {
                 ;                //копировать дату
                 ;                rx_buffer_usartc0[4]=NULL;
000e88 e0e0      	LDI  R30,LOW(0)
                +
000e89 93e0 303b+STS _rx_buffer_usartc0 + ( 4 ) , R30
                 	__PUTB1MN _rx_buffer_usartc0,4
                 ;                date1=0;
000e8b 93e0 3153 	STS  _date1,R30
000e8d 93e0 3154 	STS  _date1+1,R30
000e8f 93e0 3155 	STS  _date1+2,R30
000e91 93e0 3156 	STS  _date1+3,R30
                 ;                date1=rx_buffer_usartc0[0]*100+rx_buffer_usartc0[1];
000e93 940e 38ae 	CALL SUBOPT_0x56
000e95 940e 38bc 	CALL SUBOPT_0x57
                 ;                date1=date1*100+rx_buffer_usartc0[2];
000e97 940e 38cd 	CALL SUBOPT_0x58
000e99 940e 38bc 	CALL SUBOPT_0x57
                 ;                date1=date1*100+rx_buffer_usartc0[3];
                +
000e9b 91e0 303a+LDS R30 , _rx_buffer_usartc0 + ( 3 )
                 	__GETB1MN _rx_buffer_usartc0,3
000e9d e0f0      	LDI  R31,0
000e9e 940e 38d5 	CALL SUBOPT_0x59
000ea0 93e0 3153 	STS  _date1,R30
000ea2 93f0 3154 	STS  _date1+1,R31
000ea4 9360 3155 	STS  _date1+2,R22
000ea6 9370 3156 	STS  _date1+3,R23
                 ;                newdate=1;
000ea8 e0e1      	LDI  R30,LOW(1)
000ea9 93e0 3157 	STS  _newdate,R30
                 ;                putchar(0xD1);
000eab eda1      	LDI  R26,LOW(209)
000eac d10f      	RCALL _putchar
                 ;                putchar(0xD1);
000ead eda1      	LDI  R26,LOW(209)
000eae 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000eb0 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000eb2 c003      	RJMP _0x161
                 _0x160:
000eb3 940e 384f 	CALL SUBOPT_0x47
000eb5 24aa      	CLR  R10
                 _0x161:
                 ;   }
                 ;}
                 _0x15C:
                 ;break;
000eb6 c104      	RJMP _0x9C
                 ;
                 ;case 0xD3:
                 _0x15B:
000eb7 3de3      	CPI  R30,LOW(0xD3)
000eb8 e0a0      	LDI  R26,HIGH(0xD3)
000eb9 07fa      	CPC  R31,R26
000eba f009      	BREQ PC+2
000ebb c043      	RJMP _0x162
                 ;{
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==4)
000ebc e0e4      	LDI  R30,LOW(4)
000ebd 15ea      	CP   R30,R10
000ebe f009      	BREQ PC+2
000ebf c03e      	RJMP _0x163
                 ; {
                 ; //содержание
                 ;
                 ;                for(ch=0,check_sum=0;ch<3;ch++){check_sum=check_sum+rx_buffer_usartc0[ch];}
000ec0 940e 3896 	CALL SUBOPT_0x52
                 _0x165:
000ec2 91a0 30bf 	LDS  R26,_ch
000ec4 30a3      	CPI  R26,LOW(0x3)
000ec5 f438      	BRSH _0x166
000ec6 940e 389c 	CALL SUBOPT_0x53
000ec8 940e 38a3 	CALL SUBOPT_0x54
000eca 940e 3613 	CALL SUBOPT_0x5
000ecc cff5      	RJMP _0x165
                 _0x166:
                 ;
                 ;                if(rx_buffer_usartc0[3]==check_sum)
                +
000ecd 91a0 303a+LDS R26 , _rx_buffer_usartc0 + ( 3 )
                 	__GETB2MN _rx_buffer_usartc0,3
000ecf 91e0 30f3 	LDS  R30,_check_sum
000ed1 17ea      	CP   R30,R26
000ed2 f541      	BRNE _0x167
                 ;
                 ;                {
                 ;                //установить время
                 ;                //запись даты в переменные
                 ;                rx_buffer_usartc0[3]=NULL;
000ed3 e0e0      	LDI  R30,LOW(0)
                +
000ed4 93e0 303a+STS _rx_buffer_usartc0 + ( 3 ) , R30
                 	__PUTB1MN _rx_buffer_usartc0,3
                 ;                time1=0;
000ed6 93e0 3159 	STS  _time1,R30
000ed8 93e0 315a 	STS  _time1+1,R30
000eda 93e0 315b 	STS  _time1+2,R30
000edc 93e0 315c 	STS  _time1+3,R30
                 ;                time1=rx_buffer_usartc0[0]*100+rx_buffer_usartc0[1];
000ede 940e 38ae 	CALL SUBOPT_0x56
000ee0 940e 38da 	CALL SUBOPT_0x5A
                 ;                time1=time1*100+rx_buffer_usartc0[2];
000ee2 940e 38e3 	CALL SUBOPT_0x5B
                +
000ee4 e6a4     +LDI R26 , LOW ( 0x64 )
000ee5 e0b0     +LDI R27 , HIGH ( 0x64 )
000ee6 e080     +LDI R24 , BYTE3 ( 0x64 )
000ee7 e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
000ee8 940e 4171 	CALL __MULD12U
000eea 01df      	MOVW R26,R30
000eeb 01cb      	MOVW R24,R22
000eec 940e 38cd 	CALL SUBOPT_0x58
000eee 940e 38da 	CALL SUBOPT_0x5A
                 ;                newtime=1;
000ef0 e0e1      	LDI  R30,LOW(1)
000ef1 93e0 3158 	STS  _newtime,R30
                 ;                putchar(0xD3);
000ef3 eda3      	LDI  R26,LOW(211)
000ef4 d0c7      	RCALL _putchar
                 ;                putchar(0xD3);
000ef5 eda3      	LDI  R26,LOW(211)
000ef6 940e 3893 	CALL SUBOPT_0x51
                 ;                Mx=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
                 ;                rx_wr_index_usartc0=0;
000ef8 940e 38a9 	CALL SUBOPT_0x55
                 ;                check_sum=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
000efa c003      	RJMP _0x168
                 _0x167:
000efb 940e 384f 	CALL SUBOPT_0x47
000efd 24aa      	CLR  R10
                 _0x168:
                 ;   }
                 ;}
                 _0x163:
                 ;break;
000efe c0bc      	RJMP _0x9C
                 ;
                 ;case 0xD5:
                 _0x162:
000eff 3de5      	CPI  R30,LOW(0xD5)
000f00 e0a0      	LDI  R26,HIGH(0xD5)
000f01 07fa      	CPC  R31,R26
000f02 f009      	BREQ PC+2
000f03 c05a      	RJMP _0x169
                 ;{
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==1)
000f04 e0e1      	LDI  R30,LOW(1)
000f05 15ea      	CP   R30,R10
000f06 f009      	BREQ PC+2
000f07 c055      	RJMP _0x16A
                 ; {
                 ;                if(rx_buffer_usartc0[0]==0xD5)
000f08 91a0 3037 	LDS  R26,_rx_buffer_usartc0
000f0a 3da5      	CPI  R26,LOW(0xD5)
000f0b f009      	BREQ PC+2
000f0c c04a      	RJMP _0x16B
                 ;
                 ;                {
                 ;                //установить время
                 ;                //запись даты в переменные
                 ;                get_CNTRTC(&X);
000f0d 940e 38ec 	CALL SUBOPT_0x5C
                 ;                calcDateTime(X, 0, &date1,&time1);
                 ;                //date1=rx_buffer_usartc0[0]*100+rx_buffer_usartc0[1];
                 ;                //date1=date1*100+rx_buffer_usartc0[2];
                 ;                //date1=date1*100+rx_buffer_usartc0[3];
                 ;                //CSdt
                 ;                //bufdt
                 ;               // bufdt[0]=time1/10000;
                 ;               // bufdt[1]=(time1-bufdt[0]*10000)/100;
                 ;               // bufdt[2]=(time1-bufdt[0]*10000-bufdt[1]*100);
                 ;
                 ;
                 ;                bufdt[0]=date1/1000000;
000f0f 940e 38fe 	CALL SUBOPT_0x5D
000f11 940e 41c2 	CALL __DIVD21U
000f13 93e0 315d 	STS  _bufdt,R30
                 ;                bufdt[1]=date1%1000000/10000;
000f15 940e 38fe 	CALL SUBOPT_0x5D
000f17 940e 41f8 	CALL __MODD21U
000f19 01df      	MOVW R26,R30
000f1a 01cb      	MOVW R24,R22
000f1b 940e 390b 	CALL SUBOPT_0x5E
000f1d 940e 41c2 	CALL __DIVD21U
                +
000f1f 93e0 315e+STS _bufdt + ( 1 ) , R30
                 	__PUTB1MN _bufdt,1
                 ;                bufdt[2]=date1%10000/100;
000f21 940e 3910 	CALL SUBOPT_0x5F
000f23 940e 390b 	CALL SUBOPT_0x5E
000f25 940e 3807 	CALL SUBOPT_0x3E
                +
000f27 93e0 315f+STS _bufdt + ( 2 ) , R30
                 	__PUTB1MN _bufdt,2
                 ;                bufdt[3]=date1%100;
000f29 940e 3910 	CALL SUBOPT_0x5F
000f2b 940e 3812 	CALL SUBOPT_0x3F
                +
000f2d 93e0 3160+STS _bufdt + ( 3 ) , R30
                 	__PUTB1MN _bufdt,3
                 ;
                 ;
                 ;                //тут же ответ
                 ;
                 ;                for(ch=0,bufdt[4]=0;ch<4;ch++) bufdt[4]=bufdt[4]+bufdt[ch];
000f2f e0e0      	LDI  R30,LOW(0)
000f30 93e0 30bf 	STS  _ch,R30
                +
000f32 93e0 3161+STS _bufdt + ( 4 ) , R30
                 	__PUTB1MN _bufdt,4
                 _0x16D:
000f34 91a0 30bf 	LDS  R26,_ch
000f36 30a4      	CPI  R26,LOW(0x4)
000f37 f458      	BRSH _0x16E
                +
000f38 91a0 3161+LDS R26 , _bufdt + ( 4 )
                 	__GETB2MN _bufdt,4
000f3a 940e 3919 	CALL SUBOPT_0x60
000f3c 81e0      	LD   R30,Z
000f3d 0fea      	ADD  R30,R26
                +
000f3e 93e0 3161+STS _bufdt + ( 4 ) , R30
                 	__PUTB1MN _bufdt,4
000f40 940e 3613 	CALL SUBOPT_0x5
000f42 cff1      	RJMP _0x16D
                 _0x16E:
000f43 eda5      	LDI  R26,LOW(213)
000f44 d077      	RCALL _putchar
                 ;                for (ch=0;ch<5;ch++) putchar(bufdt[ch]);
000f45 e0e0      	LDI  R30,LOW(0)
000f46 93e0 30bf 	STS  _ch,R30
                 _0x170:
000f48 91a0 30bf 	LDS  R26,_ch
000f4a 30a5      	CPI  R26,LOW(0x5)
000f4b f438      	BRSH _0x171
000f4c 940e 3919 	CALL SUBOPT_0x60
000f4e 81a0      	LD   R26,Z
000f4f d06c      	RCALL _putchar
000f50 940e 3613 	CALL SUBOPT_0x5
000f52 cff5      	RJMP _0x170
                 _0x171:
000f53 efef      	LDI  R30,LOW(255)
000f54 940e 3875 	CALL SUBOPT_0x4C
                 ;                rx_buffer_usartc0[0]=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
000f56 c003      	RJMP _0x225
                 ;                rx_wr_index_usartc0=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
                 _0x16B:
000f57 efef      	LDI  R30,LOW(255)
000f58 93e0 314a 	STS  _Mx,R30
                 _0x225:
000f5a e0e1      	LDI  R30,LOW(1)
000f5b 2ebe      	MOV  R11,R30
000f5c 24aa      	CLR  R10
                 ;   }
                 ;}
                 _0x16A:
                 ;break;
000f5d c05d      	RJMP _0x9C
                 ;
                 ;case 0xD7:
                 _0x169:
000f5e 3de7      	CPI  R30,LOW(0xD7)
000f5f e0a0      	LDI  R26,HIGH(0xD7)
000f60 07fa      	CPC  R31,R26
000f61 f009      	BREQ PC+2
000f62 c052      	RJMP _0x17D
                 ;{
                 ;//проверка по длинне
                 ; if(rx_wr_index_usartc0==1)
000f63 e0e1      	LDI  R30,LOW(1)
000f64 15ea      	CP   R30,R10
000f65 f009      	BREQ PC+2
000f66 c04d      	RJMP _0x174
                 ; {
                 ;                if(rx_buffer_usartc0[0]==0xD7)
000f67 91a0 3037 	LDS  R26,_rx_buffer_usartc0
000f69 3da7      	CPI  R26,LOW(0xD7)
000f6a f009      	BREQ PC+2
000f6b c042      	RJMP _0x175
                 ;
                 ;                {
                 ;                //установить время
                 ;                //запись даты в переменные
                 ;                get_CNTRTC(&X);
000f6c 940e 38ec 	CALL SUBOPT_0x5C
                 ;                calcDateTime(X, 0, &date1,&time1);
                 ;                //date1=rx_buffer_usartc0[0]*100+rx_buffer_usartc0[1];
                 ;                //date1=date1*100+rx_buffer_usartc0[2];
                 ;                //date1=date1*100+rx_buffer_usartc0[3];
                 ;                //CSdt
                 ;                //bufdt
                 ;                //
                 ;
                 ;
                 ;                bufdt[0]=time1/10000;
000f6e 940e 391f 	CALL SUBOPT_0x61
000f70 940e 41c2 	CALL __DIVD21U
000f72 93e0 315d 	STS  _bufdt,R30
                 ;                bufdt[1]=time1%10000/100;
000f74 940e 391f 	CALL SUBOPT_0x61
000f76 940e 3807 	CALL SUBOPT_0x3E
                +
000f78 93e0 315e+STS _bufdt + ( 1 ) , R30
                 	__PUTB1MN _bufdt,1
                 ;                bufdt[2]=time1%100;
000f7a 91a0 3159 	LDS  R26,_time1
000f7c 91b0 315a 	LDS  R27,_time1+1
000f7e 9180 315b 	LDS  R24,_time1+2
000f80 9190 315c 	LDS  R25,_time1+3
000f82 940e 3812 	CALL SUBOPT_0x3F
                +
000f84 93e0 315f+STS _bufdt + ( 2 ) , R30
                 	__PUTB1MN _bufdt,2
                 ;                //тут же ответ
                 ;                for(ch=0,bufdt[3]=0;ch<3;ch++) bufdt[3]=bufdt[3]+bufdt[ch];
000f86 e0e0      	LDI  R30,LOW(0)
000f87 93e0 30bf 	STS  _ch,R30
                +
000f89 93e0 3160+STS _bufdt + ( 3 ) , R30
                 	__PUTB1MN _bufdt,3
                 _0x177:
000f8b 91a0 30bf 	LDS  R26,_ch
000f8d 30a3      	CPI  R26,LOW(0x3)
000f8e f458      	BRSH _0x178
                +
000f8f 91a0 3160+LDS R26 , _bufdt + ( 3 )
                 	__GETB2MN _bufdt,3
000f91 940e 3919 	CALL SUBOPT_0x60
000f93 81e0      	LD   R30,Z
000f94 0fea      	ADD  R30,R26
                +
000f95 93e0 3160+STS _bufdt + ( 3 ) , R30
                 	__PUTB1MN _bufdt,3
000f97 940e 3613 	CALL SUBOPT_0x5
000f99 cff1      	RJMP _0x177
                 _0x178:
000f9a eda7      	LDI  R26,LOW(215)
000f9b d020      	RCALL _putchar
                 ;                for (ch=0;ch<4;ch++) putchar(bufdt[ch]);
000f9c e0e0      	LDI  R30,LOW(0)
000f9d 93e0 30bf 	STS  _ch,R30
                 _0x17A:
000f9f 91a0 30bf 	LDS  R26,_ch
000fa1 30a4      	CPI  R26,LOW(0x4)
000fa2 f438      	BRSH _0x17B
000fa3 940e 3919 	CALL SUBOPT_0x60
000fa5 81a0      	LD   R26,Z
000fa6 d015      	RCALL _putchar
000fa7 940e 3613 	CALL SUBOPT_0x5
000fa9 cff5      	RJMP _0x17A
                 _0x17B:
000faa efef      	LDI  R30,LOW(255)
000fab 940e 3875 	CALL SUBOPT_0x4C
                 ;                rx_buffer_usartc0[0]=0xFF;
                 ;                RX_BUFFER_SIZE_USARTC0=1;
000fad c003      	RJMP _0x226
                 ;                rx_wr_index_usartc0=0;
                 ;                }
                 ;                else {Mx=0xFF;RX_BUFFER_SIZE_USARTC0=1;rx_wr_index_usartc0=0;}
                 _0x175:
000fae efef      	LDI  R30,LOW(255)
000faf 93e0 314a 	STS  _Mx,R30
                 _0x226:
000fb1 e0e1      	LDI  R30,LOW(1)
000fb2 2ebe      	MOV  R11,R30
000fb3 24aa      	CLR  R10
                 ;   }
                 ;}
                 _0x174:
                 ;break;
000fb4 c006      	RJMP _0x9C
                 ;
                 ;
                 ;
                 ;default :
                 _0x17D:
                 ;{
                 ;rx_buffer_usartc0[0]=0xFF;
000fb5 efef      	LDI  R30,LOW(255)
000fb6 93e0 3037 	STS  _rx_buffer_usartc0,R30
                 ;Mx=0xFF;
000fb8 940e 384f 	CALL SUBOPT_0x47
                 ;RX_BUFFER_SIZE_USARTC0=1;
                 ;rx_wr_index_usartc0=0;
000fba 24aa      	CLR  R10
                 ;}
                 ;//delay_ms(1);
                 ;}
                 _0x9C:
                 ;
                 ;
                 ;}
000fbb c1d3      	RJMP _0x239
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;//////////////////////////////////////////////////////////////////////////////////////////////////////
                 ;// Receive a character from USARTC0
                 ;// USARTC0 is used as the default input device by the 'getchar' function
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ;{
                 ;char data;
                 ;
                 ;while (rx_counter_usartc0==0);
                 ;	data -> R17
                 ;data=rx_buffer_usartc0[rx_rd_index_usartc0++];
                 ;//#if RX_BUFFER_SIZE_USARTC0 != 256
                 ;if (rx_rd_index_usartc0 == RX_BUFFER_SIZE_USARTC0) rx_rd_index_usartc0=0;
                 ;//#endif
                 ;#asm("cli")
                 ;--rx_counter_usartc0;
                 ;#asm("sei")
                 ;return data;
                 ;}
                 ;#pragma used-
                 ;
                 ;// Write a character to the USARTC0 Transmitter
                 ;// USARTC0 is used as the default output device by the 'putchar' function
                 ;#define _ALTERNATE_PUTCHAR_
                 ;
                 ;#pragma used+
                 ;void putchar(char c)
                 ;{
                 _putchar:
                 ; .FSTART _putchar
                 ;while ((USARTC0.STATUS & USART_DREIF_bm) == 0);
000fbc 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x182:
000fbd 91e0 08a1 	LDS  R30,2209
000fbf 72e0      	ANDI R30,LOW(0x20)
000fc0 f3e1      	BREQ _0x182
                 ;USARTC0.DATA=c;
000fc1 81e8      	LD   R30,Y
000fc2 93e0 08a0 	STS  2208,R30
                 ;}
000fc4 c1a1      	RJMP _0x2100028
                 ; .FEND
                 ;#pragma used-
                 ;
                 ;// USARTD1 initialization
                 ;void usartd1_init(void)
                 ;{
                 _usartd1_init:
                 ; .FSTART _usartd1_init
                 ;// Note: the correct PORTD direction for the RxD, TxD and XCK signals
                 ;// is configured in the ports_init function
                 ;
                 ;// Transmitter is enabled
                 ;// Set TxD=1
                 ;PORTD.OUTSET=0x80;
000fc5 e8e0      	LDI  R30,LOW(128)
000fc6 93e0 0665 	STS  1637,R30
                 ;
                 ;// Communication mode: Asynchronous USART
                 ;// Data bits: 8
                 ;// Stop bits: 1
                 ;// Parity: Disabled
                 ;USARTD1.CTRLC=USART_CMODE_ASYNCHRONOUS_gc | USART_PMODE_DISABLED_gc | USART_CHSIZE_8BIT_gc;
000fc8 e0e3      	LDI  R30,LOW(3)
000fc9 93e0 09b5 	STS  2485,R30
                 ;
                 ;// Receive complete interrupt: Disabled
                 ;// Transmit complete interrupt: Disabled
                 ;// Data register empty interrupt: Disabled
                 ;USARTD1.CTRLA=(USARTD1.CTRLA & (~(USART_RXCINTLVL_gm | USART_TXCINTLVL_gm | USART_DREINTLVL_gm))) |
                 ;    USART_RXCINTLVL_OFF_gc | USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
000fcb 91e0 09b3 	LDS  R30,2483
000fcd 7ce0      	ANDI R30,LOW(0xC0)
000fce 93e0 09b3 	STS  2483,R30
                 ;
                 ;// Required Baud rate: 57600
                 ;// Real Baud Rate: 57605,8 (x1 Mode), Error: 0,0 %
                 ;USARTD1.BAUDCTRLA=0x6E;
000fd0 e6ee      	LDI  R30,LOW(110)
000fd1 93e0 09b6 	STS  2486,R30
                 ;USARTD1.BAUDCTRLB=((0x0A << USART_BSCALE_bp) & USART_BSCALE_gm) | 0x08;
000fd3 eae8      	LDI  R30,LOW(168)
000fd4 93e0 09b7 	STS  2487,R30
                 ;
                 ;// Receiver: Off
                 ;// Transmitter: On
                 ;// Double transmission speed mode: Off
                 ;// Multi-processor communication mode: Off
                 ;USARTD1.CTRLB=(USARTD1.CTRLB & (~(USART_RXEN_bm | USART_TXEN_bm | USART_CLK2X_bm | USART_MPCM_bm | USART_TXB8_bm))) |
                 ;    USART_TXEN_bm;
000fd6 91e0 09b4 	LDS  R30,2484
000fd8 7ee0      	ANDI R30,LOW(0xE0)
000fd9 60e8      	ORI  R30,8
000fda 93e0 09b4 	STS  2484,R30
                 ;}
000fdc 9508      	RET
                 ; .FEND
                 ;
                 ;// Write a character to the USARTD1 Transmitter
                 ;#pragma used+
                 ;void putchar_usartd1(char c)
                 ;{
                 _putchar_usartd1:
                 ; .FSTART _putchar_usartd1
                 ;while ((USARTD1.STATUS & USART_DREIF_bm) == 0);
000fdd 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x185:
000fde 91e0 09b1 	LDS  R30,2481
000fe0 72e0      	ANDI R30,LOW(0x20)
000fe1 f3e1      	BREQ _0x185
                 ;USARTD1.DATA=c;
000fe2 81e8      	LD   R30,Y
000fe3 93e0 09b0 	STS  2480,R30
                 ;}
000fe5 c180      	RJMP _0x2100028
                 ; .FEND
                 ;#pragma used-
                 ;
                 ;
                 ;//второй usart для меня
                 ;void monitor(void)
                 ;{
                 _monitor:
                 ; .FSTART _monitor
                 ;char x;
                 ;for(x=0;x<strlen(info);x++)
000fe6 931a      	ST   -Y,R17
                 ;	x -> R17
000fe7 e010      	LDI  R17,LOW(0)
                 _0x189:
000fe8 efa4      	LDI  R26,LOW(_info)
000fe9 e3b0      	LDI  R27,HIGH(_info)
000fea 940e 3394 	CALL _strlen
000fec 2fa1      	MOV  R26,R17
000fed e0b0      	LDI  R27,0
000fee 17ae      	CP   R26,R30
000fef 07bf      	CPC  R27,R31
000ff0 f440      	BRSH _0x18A
                 ;{
                 ;putchar_usartd1(info[x]);
000ff1 2fe1      	MOV  R30,R17
000ff2 e0f0      	LDI  R31,0
000ff3 50ec      	SUBI R30,LOW(-_info)
000ff4 4cff      	SBCI R31,HIGH(-_info)
000ff5 81a0      	LD   R26,Z
000ff6 dfe6      	RCALL _putchar_usartd1
                 ;}
000ff7 5f1f      	SUBI R17,-1
000ff8 cfef      	RJMP _0x189
                 _0x18A:
                 ;memset(info,0,30);
000ff9 940e 3928 	CALL SUBOPT_0x62
000ffb e0e0      	LDI  R30,LOW(0)
000ffc 93ea      	ST   -Y,R30
000ffd e1ae      	LDI  R26,LOW(30)
000ffe e0b0      	LDI  R27,0
000fff 940e 3377 	CALL _memset
                 ;putchar_usartd1(10);
001001 e0aa      	LDI  R26,LOW(10)
001002 dfda      	RCALL _putchar_usartd1
                 ;putchar_usartd1(13);
001003 e0ad      	LDI  R26,LOW(13)
001004 dfd8      	RCALL _putchar_usartd1
                 ;}
001005 c14b      	RJMP _0x210002A
                 ; .FEND
                 ;
                 ;
                 ;
                 ;#include "for_SD.c"
                 ;
                 ;//#include "for_SD.c"
                 ;
                 ;
                 ;#include <io.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <ff.h>
                 ;#include <string.h>
                 ;
                 ;
                 ;// Declare your global variables here
                 ;
                 ;/* FAT function result */
                 ;FRESULT res;
                 ;/* number of bytes written/read to the file */
                 ;unsigned int nbytes;
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* will hold the file information */
                 ;FIL file;
                 ;/* file path */
                 ;char path[]="0:/test.txt";
                 
                 	.DSEG
                 ;char SD_IN=1;
                 ;/* file read buffer */
                 ;char buffer[36];
                 ;
                 ;char SD[15];
                 ;char SD1[15];
                 ;
                 ;
                 ;
                 ;
                 ;/* error message list */
                 ;flash char * flash error_msg[]=
                 ;{
                 ;"", /* not used */
                 ;"FR_DISK_ERR",
                 ;"FR_INT_ERR",
                 ;"FR_INT_ERR",
                 ;"FR_NOT_READY",
                 ;"FR_NO_FILE",
                 ;"FR_NO_PATH",
                 ;"FR_INVALID_NAME",
                 ;"FR_DENIED",
                 ;"FR_EXIST",
                 ;"FR_INVALID_OBJECT",
                 ;"FR_WRITE_PROTECTED",
                 ;"FR_INVALID_DRIVE",
                 ;"FR_NOT_ENABLED",
                 ;"FR_NO_FILESYSTEM",
                 ;"FR_MKFS_ABORTED",
                 ;"FR_TIMEOUT"
                 ;};
                 ;
                 ;/* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0000 0014 {
                 
                 	.CSEG
                 _error:
                 ; .FSTART _error
                 ;if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))
001006 93aa      	ST   -Y,R26
                 ;	res -> Y+0
001007 81a8      	LD   R26,Y
001008 30a1      	CPI  R26,LOW(0x1)
001009 f010      	BRLO _0x18E
00100a 31a0      	CPI  R26,LOW(0x10)
00100b f008      	BRLO _0x18F
                 _0x18E:
00100c c01e      	RJMP _0x18D
                 _0x18F:
                 ;   {
                 ;   sprintf(info,"ERROR: %p\r\n",error_msg[res]);
00100d 940e 3928 	CALL SUBOPT_0x62
                +
00100f eaed     +LDI R30 , LOW ( 2 * _0x0 + ( 207 ) )
001010 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 207 ) )
                 	__POINTW1FN _0x0,207
001011 93fa      	ST   -Y,R31
001012 93ea      	ST   -Y,R30
001013 81ec      	LDD  R30,Y+4
001014 eea8      	LDI  R26,LOW(_error_msg*2)
001015 e0b1      	LDI  R27,HIGH(_error_msg*2)
001016 940e 392d 	CALL SUBOPT_0x63
001018 940e 4254 	CALL __GETW1PF
00101a 940e 3933 	CALL SUBOPT_0x64
                 ;   monitor();
                 ;   // Дерегистрация и отмена рабочих областей, освобождение порта
                 ;   f_mount(0, NULL);
00101c e0e0      	LDI  R30,LOW(0)
00101d 93ea      	ST   -Y,R30
00101e e0a0      	LDI  R26,LOW(0)
00101f e0b0      	LDI  R27,0
001020 940e 2a95 	CALL _f_mount
                 ;   SD_IN=0;
001022 e0e0      	LDI  R30,LOW(0)
001023 93e0 35c3 	STS  _SD_IN,R30
                 ;   PORTC.DIR=0x00;
001025 93e0 0640 	STS  1600,R30
                 ;   PORTC.OUT=0x00;
001027 93e0 0644 	STS  1604,R30
                 ;   PORTC.OUT=0x18;
001029 940e 3707 	CALL SUBOPT_0x1A
                 ;   PORTC.DIR=0xB9;
                 ;   }
                 ;/* stop here */
                 ;//while(1);
                 ;}
                 _0x18D:
00102b c13a      	RJMP _0x2100028
                 ; .FEND
                 ;
                 ;#include "timers_init.c"
                 ;void tc0_disable(TC0_t *ptc)
                 ; 0000 0015 {
                 _tc0_disable:
                 ; .FSTART _tc0_disable
                 ;// Timer/Counter off
                 ;ptc->CTRLA=(ptc->CTRLA & (~TC0_CLKSEL_gm)) | TC_CLKSEL_OFF_gc;
                 ;	*ptc -> Y+0
                 ;// Issue a reset command
                 ;ptc->CTRLFSET=TC_CMD_RESET_gc;
                 ;}
                 ; .FEND
                 ;
                 ;void tc1_disable(TC1_t *ptc)
                 ;{
                 _tc1_disable:
                 ; .FSTART _tc1_disable
                 ;// Timer/Counter off
                 ;ptc->CTRLA=(ptc->CTRLA & (~TC1_CLKSEL_gm)) | TC_CLKSEL_OFF_gc;
                 _0x210002B:
00102c 93ba      	ST   -Y,R27
00102d 93aa      	ST   -Y,R26
                 ;	*ptc -> Y+0
00102e 81a8      	LD   R26,Y
00102f 81b9      	LDD  R27,Y+1
001030 91ec      	LD   R30,X
001031 7fe0      	ANDI R30,LOW(0xF0)
001032 93ec      	ST   X,R30
                 ;// Issue a reset command
                 ;ptc->CTRLFSET=TC_CMD_RESET_gc;
001033 9619      	ADIW R26,9
001034 e0ec      	LDI  R30,LOW(12)
001035 93ec      	ST   X,R30
                 ;}
001036 9622      	ADIW R28,2
001037 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;// Timer/Counter TCC0 initialization
                 ;void tcc0_init(void)
                 ;{
                 _tcc0_init:
                 ; .FSTART _tcc0_init
                 ;unsigned char s;
                 ;unsigned char n;
                 ;
                 ;// Note: the correct PORTC direction for the Compare Channels outputs
                 ;// is configured in the ports_init function
                 ;
                 ;// Save interrupts enabled/disabled state
                 ;s=SREG;
001038 931a      	ST   -Y,R17
001039 930a      	ST   -Y,R16
                 ;	s -> R17
                 ;	n -> R16
00103a b71f      	IN   R17,63
                 ;// Disable interrupts
                 ;#asm("cli")
00103b 94f8      	cli
                 ;
                 ;// Disable and reset the timer/counter just to be sure
                 ;//tc0_disable(&TCC0);
                 ;// Clock source: Peripheral Clock/64
                 ;TCC0.CTRLA=(TCC0.CTRLA & (~TC0_CLKSEL_gm)) | TC_CLKSEL_DIV64_gc;
00103c 91e0 0800 	LDS  R30,2048
00103e 7fe0      	ANDI R30,LOW(0xF0)
00103f 60e5      	ORI  R30,LOW(0x5)
001040 93e0 0800 	STS  2048,R30
                 ;// Mode: Normal Operation, Overflow Int./Event on TOP
                 ;// Compare/Capture on channel A: Off
                 ;// Compare/Capture on channel B: Off
                 ;// Compare/Capture on channel C: Off
                 ;// Compare/Capture on channel D: Off
                 ;TCC0.CTRLB=(TCC0.CTRLB & (~(TC0_CCAEN_bm | TC0_CCBEN_bm | TC0_CCCEN_bm | TC0_CCDEN_bm | TC0_WGMODE_gm))) |
                 ;    TC_WGMODE_NORMAL_gc;
001042 91e0 0801 	LDS  R30,2049
001044 70e8      	ANDI R30,LOW(0x8)
001045 93e0 0801 	STS  2049,R30
                 ;
                 ;// Capture event source: None
                 ;// Capture event action: None
                 ;TCC0.CTRLD=(TCC0.CTRLD & (~(TC0_EVACT_gm | TC0_EVSEL_gm))) |
                 ;    TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
001047 91e0 0803 	LDS  R30,2051
001049 71e0      	ANDI R30,LOW(0x10)
00104a 93e0 0803 	STS  2051,R30
                 ;
                 ;// Overflow interrupt: High Level
                 ;// Error interrupt: Disabled
                 ;TCC0.INTCTRLA=(TCC0.INTCTRLA & (~(TC0_ERRINTLVL_gm | TC0_OVFINTLVL_gm))) |
                 ;    TC_ERRINTLVL_OFF_gc | TC_OVFINTLVL_LO_gc;   //////////////////////////////////////////hi
00104c 91e0 0806 	LDS  R30,2054
00104e 7fe0      	ANDI R30,LOW(0xF0)
00104f 60e1      	ORI  R30,1
001050 93e0 0806 	STS  2054,R30
                 ;
                 ;// Compare/Capture channel A interrupt: Disabled
                 ;// Compare/Capture channel B interrupt: Disabled
                 ;// Compare/Capture channel C interrupt: Disabled
                 ;// Compare/Capture channel D interrupt: Disabled
                 ;TCC0.INTCTRLB=(TCC0.INTCTRLB & (~(TC0_CCDINTLVL_gm | TC0_CCCINTLVL_gm | TC0_CCBINTLVL_gm | TC0_CCAINTLVL_gm))) |
                 ;    TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
001052 91e0 0807 	LDS  R30,2055
001054 70e0      	ANDI R30,LOW(0x0)
001055 93e0 0807 	STS  2055,R30
                 ;
                 ;// High resolution extension: Off
                 ;//HIRESC.CTRL&= ~HIRES_HREN0_bm;
                 ;
                 ;// Advanced Waveform Extension initialization
                 ;// Optimize for speed
                 ;#pragma optsize-
                 ;// Disable locking the AWEX configuration registers just to be sure
                 ;n=MCU.AWEXLOCK & (~MCU_AWEXCLOCK_bm);
001057 91e0 0099 	LDS  R30,153
001059 7fee      	ANDI R30,0xFE
00105a 2f0e      	MOV  R16,R30
                 ;CCP=CCP_IOREG_gc;
00105b ede8      	LDI  R30,LOW(216)
00105c bfe4      	OUT  0x34,R30
                 ;MCU.AWEXLOCK=n;
00105d 9300 0099 	STS  153,R16
                 ;// Restore optimization for size if needed
                 ;#pragma optsize_default
                 ;
                 ;// Pattern generation: Off
                 ;// Dead time insertion: Off
                 ;AWEXC.CTRL&= ~(AWEX_PGM_bm | AWEX_CWCM_bm | AWEX_DTICCDEN_bm | AWEX_DTICCCEN_bm | AWEX_DTICCBEN_bm | AWEX_DTICCAEN_bm);
00105f 91e0 0880 	LDS  R30,2176
001061 7ce0      	ANDI R30,LOW(0xC0)
001062 93e0 0880 	STS  2176,R30
                 ;
                 ;// Fault protection initialization
                 ;// Fault detection on OCD Break detection: On
                 ;// Fault detection restart mode: Latched Mode
                 ;// Fault detection action: None (Fault protection disabled)
                 ;AWEXC.FDCTRL=(AWEXC.FDCTRL & (~(AWEX_FDDBD_bm | AWEX_FDMODE_bm | AWEX_FDACT_gm))) |
                 ;    AWEX_FDACT_NONE_gc;
001064 91e0 0883 	LDS  R30,2179
001066 7ee8      	ANDI R30,LOW(0xE8)
001067 93e0 0883 	STS  2179,R30
                 ;// Fault detect events:
                 ;// Event channel 0: Off
                 ;// Event channel 1: Off
                 ;// Event channel 2: Off
                 ;// Event channel 3: Off
                 ;// Event channel 4: Off
                 ;// Event channel 5: Off
                 ;// Event channel 6: Off
                 ;// Event channel 7: Off
                 ;AWEXC.FDEVMASK=0b00000000;
001069 e0e0      	LDI  R30,LOW(0)
00106a 93e0 0882 	STS  2178,R30
                 ;// Make sure the fault detect flag is cleared
                 ;AWEXC.STATUS|=AWEXC.STATUS & AWEX_FDF_bm;
00106c e8a4      	LDI  R26,LOW(2180)
00106d e0b8      	LDI  R27,HIGH(2180)
00106e 2e0a      	MOV  R0,R26
00106f 91ac      	LD   R26,X
001070 91e0 0884 	LDS  R30,2180
001072 70e4      	ANDI R30,LOW(0x4)
001073 2bea      	OR   R30,R26
001074 2da0      	MOV  R26,R0
001075 93ec      	ST   X,R30
                 ;
                 ;// Clear the interrupt flags
                 ;TCC0.INTFLAGS=TCC0.INTFLAGS;
001076 91e0 080c 	LDS  R30,2060
001078 93e0 080c 	STS  2060,R30
                 ;// Set counter register
                 ;TCC0.CNT=0x0000;
00107a e0e0      	LDI  R30,LOW(0)
00107b e0f0      	LDI  R31,HIGH(0)
00107c 93e0 0820 	STS  2080,R30
00107e 93f0 0821 	STS  2080+1,R31
                 ;// Set period register
                 ;TCC0.PER=0x7A11;
001080 e1e1      	LDI  R30,LOW(31249)
001081 e7fa      	LDI  R31,HIGH(31249)
001082 93e0 0826 	STS  2086,R30
001084 93f0 0827 	STS  2086+1,R31
                 ;// Set channel A Compare/Capture register
                 ;TCC0.CCA=0x0000;
001086 e0e0      	LDI  R30,LOW(0)
001087 e0f0      	LDI  R31,HIGH(0)
001088 93e0 0828 	STS  2088,R30
00108a 93f0 0829 	STS  2088+1,R31
                 ;// Set channel B Compare/Capture register
                 ;TCC0.CCB=0x0000;
00108c 93e0 082a 	STS  2090,R30
00108e 93f0 082b 	STS  2090+1,R31
                 ;// Set channel C Compare/Capture register
                 ;TCC0.CCC=0x0000;
001090 93e0 082c 	STS  2092,R30
001092 93f0 082d 	STS  2092+1,R31
                 ;// Set channel D Compare/Capture register
                 ;TCC0.CCD=0x0000;
001094 93e0 082e 	STS  2094,R30
001096 93f0 082f 	STS  2094+1,R31
                 ;
                 ;// Restore interrupts enabled/disabled state
                 ;SREG=s;
001098 bf1f      	OUT  0x3F,R17
                 ;}
001099 9109      	LD   R16,Y+
00109a 9119      	LD   R17,Y+
00109b 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;// Timer/Counter TCC1 initialization
                 ;void tcc1_init(void)
                 ;
                 ;{
                 _tcc1_init:
                 ; .FSTART _tcc1_init
                 ;unsigned char s;
                 ;
                 ;// Note: the correct PORTC direction for the Compare Channels outputs
                 ;// is configured in the ports_init function
                 ;
                 ;// Save interrupts enabled/disabled state
                 ;s=SREG;
00109c 931a      	ST   -Y,R17
                 ;	s -> R17
00109d b71f      	IN   R17,63
                 ;// Disable interrupts
                 ;#asm("cli")
00109e 94f8      	cli
                 ;
                 ;// Disable and reset the timer/counter just to be sure
                 ;tc1_disable(&TCC1);
00109f e4a0      	LDI  R26,LOW(2112)
0010a0 e0b8      	LDI  R27,HIGH(2112)
0010a1 df8a      	RCALL _tc1_disable
                 ;// Clock source: ClkPer/64
                 ;//40ms!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;TCC1.CTRLA=TC_CLKSEL_DIV64_gc;
0010a2 e0e5      	LDI  R30,LOW(5)
0010a3 93e0 0840 	STS  2112,R30
                 ;// Mode: Normal Operation, Overflow Int./Event on TOP
                 ;// Compare/Capture on channel A: Off
                 ;// Compare/Capture on channel B: Off
                 ;TCC1.CTRLB=(0<<TC1_CCBEN_bp) | (0<<TC1_CCAEN_bp) |
                 ;	TC_WGMODE_NORMAL_gc;
0010a5 e0e0      	LDI  R30,LOW(0)
0010a6 93e0 0841 	STS  2113,R30
                 ;// Capture event source: None
                 ;// Capture event action: None
                 ;TCC1.CTRLD=TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
0010a8 93e0 0843 	STS  2115,R30
                 ;
                 ;// Set Timer/Counter in Normal mode
                 ;TCC1.CTRLE=(0<<TC1_BYTEM_bp);
0010aa 93e0 0844 	STS  2116,R30
                 ;
                 ;// Overflow interrupt: Disabled
                 ;// Error interrupt: Disabled
                 ;//TCC1.INTCTRLA=TC_ERRINTLVL_OFF_gc | TC_OVFINTLVL_OFF_gc;
                 ;TCC1.INTCTRLA=(TCC1.INTCTRLA & (~(TC1_ERRINTLVL_gm | TC1_OVFINTLVL_gm))) |
                 ;    TC_ERRINTLVL_OFF_gc | TC_OVFINTLVL_LO_gc;
0010ac 91e0 0846 	LDS  R30,2118
0010ae 7fe0      	ANDI R30,LOW(0xF0)
0010af 60e1      	ORI  R30,1
0010b0 93e0 0846 	STS  2118,R30
                 ;
                 ;// Compare/Capture channel A interrupt: Disabled
                 ;// Compare/Capture channel B interrupt: Disabled
                 ;TCC1.INTCTRLB=TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
0010b2 e0e0      	LDI  R30,LOW(0)
0010b3 93e0 0847 	STS  2119,R30
                 ;
                 ;// High resolution extension: Off
                 ;HIRESC.CTRLA&= ~HIRES_HREN1_bm;
0010b5 91e0 0890 	LDS  R30,2192
0010b7 7fed      	ANDI R30,0xFD
0010b8 93e0 0890 	STS  2192,R30
                 ;
                 ;// Clear the interrupt flags
                 ;TCC1.INTFLAGS=TCC1.INTFLAGS;
0010ba 91e0 084c 	LDS  R30,2124
0010bc 93e0 084c 	STS  2124,R30
                 ;// Set Counter register
                 ;TCC1.CNT=0x0000;
0010be e0e0      	LDI  R30,LOW(0)
0010bf e0f0      	LDI  R31,HIGH(0)
0010c0 93e0 0860 	STS  2144,R30
0010c2 93f0 0861 	STS  2144+1,R31
                 ;// Set Period register
                 ;
                 ;//40ms!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;TCC1.PER=0x4E1F;// n
0010c4 e1ef      	LDI  R30,LOW(19999)
0010c5 e4fe      	LDI  R31,HIGH(19999)
0010c6 93e0 0866 	STS  2150,R30
0010c8 93f0 0867 	STS  2150+1,R31
                 ;// Set channel A Compare/Capture register
                 ;TCC1.CCA=0x0000;
0010ca e0e0      	LDI  R30,LOW(0)
0010cb e0f0      	LDI  R31,HIGH(0)
0010cc 93e0 0868 	STS  2152,R30
0010ce 93f0 0869 	STS  2152+1,R31
                 ;// Set channel B Compare/Capture register
                 ;TCC1.CCB=0x0000;
0010d0 93e0 086a 	STS  2154,R30
0010d2 93f0 086b 	STS  2154+1,R31
                 ;
                 ;// Restore interrupts enabled/disabled state
                 ;SREG=s;
0010d4 c07b      	RJMP _0x2100029
                 ;}
                 ; .FEND
                 ;// Timer/Counter TCD0 initialization
                 ;// Timer/Counter TCD0 initialization
                 ;void tcd0_init(void)
                 ;{
                 _tcd0_init:
                 ; .FSTART _tcd0_init
                 ;unsigned char s;
                 ;
                 ;// Note: The correct PORTD direction for the Compare Channels
                 ;// outputs is configured in the ports_init function.
                 ;
                 ;// Save interrupts enabled/disabled state
                 ;s=SREG;
0010d5 931a      	ST   -Y,R17
                 ;	s -> R17
0010d6 b71f      	IN   R17,63
                 ;// Disable interrupts
                 ;#asm("cli")
0010d7 94f8      	cli
                 ;
                 ;// Disable and reset the timer/counter just to be sure
                 ;tc0_disable(&TCD0);
0010d8 e0a0      	LDI  R26,LOW(2304)
0010d9 e0b9      	LDI  R27,HIGH(2304)
0010da df51      	RCALL _tc0_disable
                 ;// Clock source: ClkPer/8
                 ;TCD0.CTRLA=TC_CLKSEL_DIV8_gc;
0010db e0e4      	LDI  R30,LOW(4)
0010dc 93e0 0900 	STS  2304,R30
                 ;// Mode: Normal Operation, Overflow Int./Event on TOP
                 ;// Compare/Capture on channel A: Off
                 ;// Compare/Capture on channel B: Off
                 ;// Compare/Capture on channel C: Off
                 ;// Compare/Capture on channel D: Off
                 ;TCD0.CTRLB=(0<<TC0_CCDEN_bp) | (0<<TC0_CCCEN_bp) | (0<<TC0_CCBEN_bp) | (0<<TC0_CCAEN_bp) |
                 ;	TC_WGMODE_NORMAL_gc;
0010de e0e0      	LDI  R30,LOW(0)
0010df 93e0 0901 	STS  2305,R30
                 ;// Capture event source: None
                 ;// Capture event action: None
                 ;TCD0.CTRLD=TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
0010e1 93e0 0903 	STS  2307,R30
                 ;
                 ;// Set Timer/Counter in Normal mode
                 ;TCD0.CTRLE=(0<<TC0_BYTEM_bp);
0010e3 93e0 0904 	STS  2308,R30
                 ;
                 ;// Overflow interrupt: High Level
                 ;// Error interrupt: Disabled
                 ;TCD0.INTCTRLA=TC_ERRINTLVL_OFF_gc | TC_OVFINTLVL_HI_gc;
0010e5 e0e3      	LDI  R30,LOW(3)
0010e6 93e0 0906 	STS  2310,R30
                 ;
                 ;// Compare/Capture channel A interrupt: Disabled
                 ;// Compare/Capture channel B interrupt: Disabled
                 ;// Compare/Capture channel C interrupt: Disabled
                 ;// Compare/Capture channel D interrupt: Disabled
                 ;TCD0.INTCTRLB=TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
0010e8 e0e0      	LDI  R30,LOW(0)
0010e9 93e0 0907 	STS  2311,R30
                 ;
                 ;// High resolution extension: Off
                 ;HIRESD.CTRLA&= ~HIRES_HREN0_bm;
0010eb 91e0 0990 	LDS  R30,2448
0010ed 7fee      	ANDI R30,0xFE
0010ee 93e0 0990 	STS  2448,R30
                 ;
                 ;// Clear the interrupt flags
                 ;TCD0.INTFLAGS=TCD0.INTFLAGS;
0010f0 91e0 090c 	LDS  R30,2316
0010f2 93e0 090c 	STS  2316,R30
                 ;// Set Counter register
                 ;TCD0.CNT=0x0000;
0010f4 e0e0      	LDI  R30,LOW(0)
0010f5 e0f0      	LDI  R31,HIGH(0)
0010f6 93e0 0920 	STS  2336,R30
0010f8 93f0 0921 	STS  2336+1,R31
                 ;// Set Period register
                 ;TCD0.PER=0x9C3F;
0010fa e3ef      	LDI  R30,LOW(39999)
0010fb e9fc      	LDI  R31,HIGH(39999)
0010fc 93e0 0926 	STS  2342,R30
0010fe 93f0 0927 	STS  2342+1,R31
                 ;// Set channel A Compare/Capture register
                 ;TCD0.CCA=0x0000;
001100 e0e0      	LDI  R30,LOW(0)
001101 e0f0      	LDI  R31,HIGH(0)
001102 93e0 0928 	STS  2344,R30
001104 93f0 0929 	STS  2344+1,R31
                 ;// Set channel B Compare/Capture register
                 ;TCD0.CCB=0x0000;
001106 93e0 092a 	STS  2346,R30
001108 93f0 092b 	STS  2346+1,R31
                 ;// Set channel C Compare/Capture register
                 ;TCD0.CCC=0x0000;
00110a 93e0 092c 	STS  2348,R30
00110c 93f0 092d 	STS  2348+1,R31
                 ;// Set channel D Compare/Capture register
                 ;TCD0.CCD=0x0000;
00110e 93e0 092e 	STS  2350,R30
001110 93f0 092f 	STS  2350+1,R31
                 ;
                 ;// Restore interrupts enabled/disabled state
                 ;SREG=s;
001112 c03d      	RJMP _0x2100029
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;// Timer/Counter TCF0 initialization
                 ;void tcf0_init(void)
                 ;{
                 _tcf0_init:
                 ; .FSTART _tcf0_init
                 ;unsigned char s;
                 ;
                 ;// Note: The correct PORTF direction for the Compare Channels
                 ;// outputs is configured in the ports_init function.
                 ;
                 ;// Save interrupts enabled/disabled state
                 ;s=SREG;
001113 931a      	ST   -Y,R17
                 ;	s -> R17
001114 b71f      	IN   R17,63
                 ;// Disable interrupts
                 ;#asm("cli")
001115 94f8      	cli
                 ;
                 ;// Disable and reset the timer/counter just to be sure
                 ;tc0_disable(&TCF0);
001116 e0a0      	LDI  R26,LOW(2816)
001117 e0bb      	LDI  R27,HIGH(2816)
001118 df13      	RCALL _tc0_disable
                 ;// Clock source: ClkPer/1024
                 ;TCF0.CTRLA=TC_CLKSEL_DIV1024_gc;
001119 e0e7      	LDI  R30,LOW(7)
00111a 93e0 0b00 	STS  2816,R30
                 ;// Mode: Normal Operation, Overflow Int./Event on TOP
                 ;// Compare/Capture on channel A: Off
                 ;// Compare/Capture on channel B: Off
                 ;// Compare/Capture on channel C: Off
                 ;// Compare/Capture on channel D: Off
                 ;TCF0.CTRLB=(0<<TC0_CCDEN_bp) | (0<<TC0_CCCEN_bp) | (0<<TC0_CCBEN_bp) | (0<<TC0_CCAEN_bp) |
                 ;	TC_WGMODE_NORMAL_gc;
00111c e0e0      	LDI  R30,LOW(0)
00111d 93e0 0b01 	STS  2817,R30
                 ;// Capture event source: None
                 ;// Capture event action: None
                 ;TCF0.CTRLD=TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
00111f 93e0 0b03 	STS  2819,R30
                 ;
                 ;// Set Timer/Counter in Normal mode
                 ;TCF0.CTRLE=(0<<TC0_BYTEM_bp);
001121 93e0 0b04 	STS  2820,R30
                 ;
                 ;// Overflow interrupt: hi Level
                 ;// Error interrupt: Disabled
                 ;TCF0.INTCTRLA=TC_ERRINTLVL_OFF_gc | TC_OVFINTLVL_HI_gc;
001123 e0e3      	LDI  R30,LOW(3)
001124 93e0 0b06 	STS  2822,R30
                 ;
                 ;// Compare/Capture channel A interrupt: Disabled
                 ;// Compare/Capture channel B interrupt: Disabled
                 ;// Compare/Capture channel C interrupt: Disabled
                 ;// Compare/Capture channel D interrupt: Disabled
                 ;TCF0.INTCTRLB=TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
001126 e0e0      	LDI  R30,LOW(0)
001127 93e0 0b07 	STS  2823,R30
                 ;
                 ;// High resolution extension: Off
                 ;HIRESF.CTRLA&= ~HIRES_HREN0_bm;
001129 91e0 0b90 	LDS  R30,2960
00112b 7fee      	ANDI R30,0xFE
00112c 93e0 0b90 	STS  2960,R30
                 ;
                 ;// Clear the interrupt flags
                 ;TCF0.INTFLAGS=TCF0.INTFLAGS;
00112e 91e0 0b0c 	LDS  R30,2828
001130 93e0 0b0c 	STS  2828,R30
                 ;// Set Counter register
                 ;TCF0.CNT=0x0000;
001132 e0e0      	LDI  R30,LOW(0)
001133 e0f0      	LDI  R31,HIGH(0)
001134 93e0 0b20 	STS  2848,R30
001136 93f0 0b21 	STS  2848+1,R31
                 ;// Set Period register
                 ;// 1 cek
                 ;TCF0.PER=0x7A11;
001138 e1e1      	LDI  R30,LOW(31249)
001139 e7fa      	LDI  R31,HIGH(31249)
00113a 93e0 0b26 	STS  2854,R30
00113c 93f0 0b27 	STS  2854+1,R31
                 ;//999 ms
                 ;//TCF0.PER=0x79F2;
                 ;// Set channel A Compare/Capture register
                 ;TCF0.CCA=0x0000;
00113e e0e0      	LDI  R30,LOW(0)
00113f e0f0      	LDI  R31,HIGH(0)
001140 93e0 0b28 	STS  2856,R30
001142 93f0 0b29 	STS  2856+1,R31
                 ;// Set channel B Compare/Capture register
                 ;TCF0.CCB=0x0000;
001144 93e0 0b2a 	STS  2858,R30
001146 93f0 0b2b 	STS  2858+1,R31
                 ;// Set channel C Compare/Capture register
                 ;TCF0.CCC=0x0000;
001148 93e0 0b2c 	STS  2860,R30
00114a 93f0 0b2d 	STS  2860+1,R31
                 ;// Set channel D Compare/Capture register
                 ;TCF0.CCD=0x0000;
00114c 93e0 0b2e 	STS  2862,R30
00114e 93f0 0b2f 	STS  2862+1,R31
                 ;
                 ;// Restore interrupts enabled/disabled state
                 ;SREG=s;
                 _0x2100029:
001150 bf1f      	OUT  0x3F,R17
                 ;}
                 _0x210002A:
001151 9119      	LD   R17,Y+
001152 9508      	RET
                 ; .FEND
                 ;
                 ;#include "spi_twi_init.c"
                 ;// SPIC initialization
                 ;void spic_init(void)
                 ; 0000 0016 {
                 _spic_init:
                 ; .FSTART _spic_init
                 ;// SPIC is enabled
                 ;// SPI mode: 0
                 ;// Operating as: Master
                 ;// Data order: MSB First
                 ;// SCK clock prescaler: 128 250
                 ;// SCK clock prescaler: 64  1000
                 ;// SCK clock prescaler: 16  2000
                 ;// SCK clock doubled: Off
                 ;// SCK clock frequency: 250,000 - 2000!!!
                 ;SPIC.CTRL=SPI_ENABLE_bm | SPI_MODE_0_gc | SPI_MASTER_bm |
                 ;    SPI_PRESCALER_DIV64_gc;
001153 e5e2      	LDI  R30,LOW(82)
001154 93e0 08c0 	STS  2240,R30
                 ;// SPIC interrupt: Disabled
                 ;SPIC.INTCTRL=(SPIC.INTCTRL & (~SPI_INTLVL_gm)) | SPI_INTLVL_OFF_gc;
001156 91e0 08c1 	LDS  R30,2241
001158 7fec      	ANDI R30,LOW(0xFC)
001159 93e0 08c1 	STS  2241,R30
                 ;// Note: the MOSI (PORTC Bit 5), SCK (PORTC Bit 7) and
                 ;// /SS (PORTC Bit 4) signals are configured as outputs in the ports_init function
                 ;}
00115b 9508      	RET
                 ; .FEND
                 ;
                 ;// Macro used to drive the SPIC /SS signal low in order to select the slave
                 ;//#define SET_SPIC_SS_LOW {PORTC.OUTCLR=SPI_SS_bm;}
                 ;// Macro used to drive the SPIC /SS signal high in order to deselect the slave
                 ;//#define SET_SPIC_SS_HIGH {PORTC.OUTSET=SPI_SS_bm;}
                 ;
                 ;// SPIC transmit/receive function in Master mode
                 ;// c - data to be transmitted
                 ;// Returns the received data
                 ;unsigned char spic_master_tx_rx(unsigned char c)
                 ;{
                 _spic_master_tx_rx:
                 ; .FSTART _spic_master_tx_rx
                 ;// Transmit data in Master mode
                 ;SPIC.DATA=c;
00115c 93aa      	ST   -Y,R26
                 ;	c -> Y+0
00115d 81e8      	LD   R30,Y
00115e 93e0 08c3 	STS  2243,R30
                 ;// Wait for the data to be transmitted/received
                 ;while ((SPIC.STATUS & SPI_IF_bm)==0);
                 _0x190:
001160 91e0 08c2 	LDS  R30,2242
001162 78e0      	ANDI R30,LOW(0x80)
001163 f3e1      	BREQ _0x190
                 ;// Return the received data
                 ;return SPIC.DATA;
001164 91e0 08c3 	LDS  R30,2243
                 _0x2100028:
001166 9621      	ADIW R28,1
001167 9508      	RET
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;
                 ;// TWIE initialization
                 ;// structure that holds information used by the TWIE Master
                 ;// for performing a TWI bus transaction
                 ;TWI_MASTER_INFO_t twie_master;
                 ;
                 ;void twie_init(void)
                 ;{
                 _twie_init:
                 ; .FSTART _twie_init
                 ;// General TWIE initialization
                 ;// External Driver Interface: Off
                 ;// SDA Hold: Off
                 ;twi_init(&TWIE,false,false);
001168 eae0      	LDI  R30,LOW(1184)
001169 e0f4      	LDI  R31,HIGH(1184)
00116a 940e 393d 	CALL SUBOPT_0x65
00116c e0a0      	LDI  R26,LOW(0)
00116d 940e 346f 	CALL _twi_init
                 ;
                 ;// TWIE Master initialization
                 ;// Master interrupt: Low Level
                 ;// System Clock frequency: 32000000 Hz
                 ;// SCL Rate: 100000 bps
                 ;// Real SCL Rate: 100000 bps, Error: 0,0 %
                 ;twi_master_init(&twie_master,&TWIE,TWI_MASTER_INTLVL_LO_gc,
                 ;    TWI_BAUD_REG(32000000,100000));
00116f 940e 3942 	CALL SUBOPT_0x66
001171 eae0      	LDI  R30,LOW(1184)
001172 e0f4      	LDI  R31,HIGH(1184)
001173 93fa      	ST   -Y,R31
001174 93ea      	ST   -Y,R30
001175 e4e0      	LDI  R30,LOW(64)
001176 93ea      	ST   -Y,R30
001177 e9ab      	LDI  R26,LOW(155)
001178 940e 3484 	CALL _twi_master_init
                 ;
                 ;
                 ;
                 ;// TWIE Slave is disabled
                 ;TWIE.SLAVE.CTRLA=0;
00117a e0e0      	LDI  R30,LOW(0)
00117b 93e0 04a8 	STS  1192,R30
                 ;}
00117d 9508      	RET
                 ; .FEND
                 ;
                 ;// TWIE Master interrupt service routine
                 ;#pragma optsize- // optimize for speed
                 ;interrupt [TWIE_TWIM_vect] void twie_master_isr(void)
                 ;{
                 _twie_master_isr:
                 ; .FSTART _twie_master_isr
00117e 920a      	ST   -Y,R0
00117f 921a      	ST   -Y,R1
001180 92fa      	ST   -Y,R15
001181 936a      	ST   -Y,R22
001182 937a      	ST   -Y,R23
001183 938a      	ST   -Y,R24
001184 939a      	ST   -Y,R25
001185 93aa      	ST   -Y,R26
001186 93ba      	ST   -Y,R27
001187 93ea      	ST   -Y,R30
001188 93fa      	ST   -Y,R31
001189 b7ef      	IN   R30,SREG
00118a 93ea      	ST   -Y,R30
                 ;twi_master_int_handler(&twie_master);
00118b e0a6      	LDI  R26,LOW(_twie_master)
00118c e3b6      	LDI  R27,HIGH(_twie_master)
00118d 940e 34af 	CALL _twi_master_int_handler
                 ;}
                 _0x239:
00118f 91e9      	LD   R30,Y+
001190 bfef      	OUT  SREG,R30
001191 91f9      	LD   R31,Y+
001192 91e9      	LD   R30,Y+
001193 91b9      	LD   R27,Y+
001194 91a9      	LD   R26,Y+
001195 9199      	LD   R25,Y+
001196 9189      	LD   R24,Y+
001197 9179      	LD   R23,Y+
001198 9169      	LD   R22,Y+
001199 90f9      	LD   R15,Y+
00119a 9019      	LD   R1,Y+
00119b 9009      	LD   R0,Y+
00119c 9518      	RETI
                 ; .FEND
                 ;#pragma optsize_default
                 ;#include "bmp085.c"
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//адрес BMP085 без W/R
                 ;#define BMP085_TWI_BUS_ADDRESS (0xEE>>1)
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;#include <twix.h>
                 ;// I/O Registers definitions
                 ;#include <io.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;//#include <alcd.h>
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!_VARIABLE_!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;signed short AC1;
                 ;signed short AC2;
                 ;signed short AC3;
                 ;unsigned short  AC4;
                 ;unsigned short  AC5;
                 ;unsigned short  AC6;
                 ;signed short B1;
                 ;signed short B2;
                 ;signed short MB;
                 ;signed short MC;
                 ;signed short MD;
                 ;long UT = 0;
                 ;char oss=3;
                 
                 	.DSEG
                 ;long UP = 0;
                 ;
                 ;signed long X1,X2,B5,Temp,B6,X3,B3,p;
                 ;unsigned long B4,B7;
                 ;float Tempf;
                 ;float p1;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!_VARIABLE_!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;
                 ;//структура данных датчика
                 ;//адреса регистров
                 ;      struct
                 ;        {
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC1;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC2;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC3;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC4;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC5;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC6;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } B1;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } B2;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } MB;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } MC;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } MD;
                 ;        } twi_bmp085_reg;
                 ;
                 ;
                 ;
                 ;  //значения калибр регистров
                 ;struct
                 ;        {
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC1;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC2;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC3;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC4;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC5;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } AC6;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } B1;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } B2;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } MB;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } MC;
                 ;        struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } MD;
                 ;        } twi_bmp085_data;
                 ;
                 ;//запрос температуры
                 ; struct
                 ;            {
                 ;            unsigned char reg;
                 ;            unsigned char data;
                 ;            } read_temp_please;
                 ;
                 ; //чтение температуры
                 ; //адреса
                 ;  struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } read_temp_adr;
                 ;  //данные
                 ;  struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            } read_temp_data;
                 ;
                 ;
                 ;  //чтение давления
                 ;  //запрос давления
                 ; struct
                 ;            {
                 ;            unsigned char reg;
                 ;            unsigned char data;
                 ;            } read_pres_please;
                 ; //адреса
                 ;  struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            unsigned char xlsb;
                 ;            } read_pres_adr;
                 ;  //данные
                 ;  struct
                 ;            {
                 ;            unsigned char msb;
                 ;            unsigned char lsb;
                 ;            unsigned char xlsb;
                 ;            } read_pres_data;
                 ;
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//установка адресов регистров калибровки, запроса температуры и давления
                 ;void set_reg (void)
                 ; 0000 0017 {
                 
                 	.CSEG
                 _set_reg:
                 ; .FSTART _set_reg
                 ;
                 ;//адреса регистров температуры
                 ;read_temp_adr.msb=0xF6;
00119d efe6      	LDI  R30,LOW(246)
00119e 93e0 368f 	STS  _read_temp_adr,R30
                 ;read_temp_adr.lsb=0xF7;
0011a0 efe7      	LDI  R30,LOW(247)
                +
0011a1 93e0 3690+STS _read_temp_adr + ( 1 ) , R30
                 	__PUTB1MN _read_temp_adr,1
                 ;//запрос температуры
                 ;read_temp_please.reg=0xF4;
0011a3 efe4      	LDI  R30,LOW(244)
0011a4 93e0 368d 	STS  _read_temp_please,R30
                 ;read_temp_please.data=0x2E;
0011a6 e2ee      	LDI  R30,LOW(46)
                +
0011a7 93e0 368e+STS _read_temp_please + ( 1 ) , R30
                 	__PUTB1MN _read_temp_please,1
                 ;
                 ;//адреса регистров давления
                 ;read_pres_adr.msb=0xF6;
0011a9 efe6      	LDI  R30,LOW(246)
0011aa 93e0 3695 	STS  _read_pres_adr,R30
                 ;read_pres_adr.lsb=0xF7;
0011ac efe7      	LDI  R30,LOW(247)
                +
0011ad 93e0 3696+STS _read_pres_adr + ( 1 ) , R30
                 	__PUTB1MN _read_pres_adr,1
                 ;read_pres_adr.xlsb=0xF8;
0011af efe8      	LDI  R30,LOW(248)
                +
0011b0 93e0 3697+STS _read_pres_adr + ( 2 ) , R30
                 	__PUTB1MN _read_pres_adr,2
                 ;//запрос давления
                 ;read_pres_please.reg=0xF4;
0011b2 efe4      	LDI  R30,LOW(244)
0011b3 93e0 3693 	STS  _read_pres_please,R30
                 ;read_pres_please.data=0x34+(oss<<6);
0011b5 91e0 362c 	LDS  R30,_oss
0011b7 95e2      	SWAP R30
0011b8 7fe0      	ANDI R30,0xF0
0011b9 0fee      	LSL  R30
0011ba 0fee      	LSL  R30
0011bb 5cec      	SUBI R30,-LOW(52)
                +
0011bc 93e0 3694+STS _read_pres_please + ( 1 ) , R30
                 	__PUTB1MN _read_pres_please,1
                 ;
                 ;//адреса калибровочных регистров
                 ;//AC1 adres
                 ;twi_bmp085_reg.AC1.msb=0xAA;
0011be eaea      	LDI  R30,LOW(170)
0011bf 93e0 3661 	STS  _twi_bmp085_reg,R30
                 ;twi_bmp085_reg.AC1.lsb=0xAB;
0011c1 eaeb      	LDI  R30,LOW(171)
                +
0011c2 93e0 3662+STS _twi_bmp085_reg + ( 1 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,1
                 ;//AC2 adres
                 ;twi_bmp085_reg.AC2.msb=0xAC;
0011c4 eaec      	LDI  R30,LOW(172)
                +
0011c5 93e0 3663+STS _twi_bmp085_reg + ( 2 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,2
                 ;twi_bmp085_reg.AC2.lsb=0xAD;
0011c7 eaed      	LDI  R30,LOW(173)
                +
0011c8 93e0 3664+STS _twi_bmp085_reg + ( 3 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,3
                 ;//AC3 adres
                 ;twi_bmp085_reg.AC3.msb=0xAE;
0011ca eaee      	LDI  R30,LOW(174)
                +
0011cb 93e0 3665+STS _twi_bmp085_reg + ( 4 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,4
                 ;twi_bmp085_reg.AC3.lsb=0xAF;
0011cd eaef      	LDI  R30,LOW(175)
                +
0011ce 93e0 3666+STS _twi_bmp085_reg + ( 5 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,5
                 ;//AC4 adres
                 ;twi_bmp085_reg.AC4.msb=0xB0;
0011d0 ebe0      	LDI  R30,LOW(176)
                +
0011d1 93e0 3667+STS _twi_bmp085_reg + ( 6 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,6
                 ;twi_bmp085_reg.AC4.lsb=0xB1;
0011d3 ebe1      	LDI  R30,LOW(177)
                +
0011d4 93e0 3668+STS _twi_bmp085_reg + ( 7 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,7
                 ;//AC5 adres
                 ;twi_bmp085_reg.AC5.msb=0xB2;
0011d6 ebe2      	LDI  R30,LOW(178)
                +
0011d7 93e0 3669+STS _twi_bmp085_reg + ( 8 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,8
                 ;twi_bmp085_reg.AC5.lsb=0xB3;
0011d9 ebe3      	LDI  R30,LOW(179)
                +
0011da 93e0 366a+STS _twi_bmp085_reg + ( 9 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,9
                 ;//AC6 adres
                 ;twi_bmp085_reg.AC6.msb=0xB4;
0011dc ebe4      	LDI  R30,LOW(180)
                +
0011dd 93e0 366b+STS _twi_bmp085_reg + ( 10 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,10
                 ;twi_bmp085_reg.AC6.lsb=0xB5;
0011df ebe5      	LDI  R30,LOW(181)
                +
0011e0 93e0 366c+STS _twi_bmp085_reg + ( 11 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,11
                 ;//B1 adres
                 ;twi_bmp085_reg.B1.msb=0xB6;
0011e2 ebe6      	LDI  R30,LOW(182)
                +
0011e3 93e0 366d+STS _twi_bmp085_reg + ( 12 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,12
                 ;twi_bmp085_reg.B1.lsb=0xB7;
0011e5 ebe7      	LDI  R30,LOW(183)
                +
0011e6 93e0 366e+STS _twi_bmp085_reg + ( 13 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,13
                 ;//B2 adres
                 ;twi_bmp085_reg.B2.msb=0xB8;
0011e8 ebe8      	LDI  R30,LOW(184)
                +
0011e9 93e0 366f+STS _twi_bmp085_reg + ( 14 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,14
                 ;twi_bmp085_reg.B2.lsb=0xB9;
0011eb ebe9      	LDI  R30,LOW(185)
                +
0011ec 93e0 3670+STS _twi_bmp085_reg + ( 15 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,15
                 ;//MB adres
                 ;twi_bmp085_reg.MB.msb=0xBA;
0011ee ebea      	LDI  R30,LOW(186)
                +
0011ef 93e0 3671+STS _twi_bmp085_reg + ( 16 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,16
                 ;twi_bmp085_reg.MB.lsb=0xBB;
0011f1 ebeb      	LDI  R30,LOW(187)
                +
0011f2 93e0 3672+STS _twi_bmp085_reg + ( 17 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,17
                 ;//MC adres
                 ;twi_bmp085_reg.MC.msb=0xBC;
0011f4 ebec      	LDI  R30,LOW(188)
                +
0011f5 93e0 3673+STS _twi_bmp085_reg + ( 18 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,18
                 ;twi_bmp085_reg.MC.lsb=0xBD;
0011f7 ebed      	LDI  R30,LOW(189)
                +
0011f8 93e0 3674+STS _twi_bmp085_reg + ( 19 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,19
                 ;//MD adres
                 ;twi_bmp085_reg.MD.msb=0xBE;
0011fa ebee      	LDI  R30,LOW(190)
                +
0011fb 93e0 3675+STS _twi_bmp085_reg + ( 20 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,20
                 ;twi_bmp085_reg.MD.lsb=0xBF;
0011fd ebef      	LDI  R30,LOW(191)
                +
0011fe 93e0 3676+STS _twi_bmp085_reg + ( 21 ) , R30
                 	__PUTB1MN _twi_bmp085_reg,21
                 ;}
001200 9508      	RET
                 ; .FEND
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//функция для сокращения объема основной проги
                 ;void bmp_reg_init (void)
                 ;{
                 _bmp_reg_init:
                 ; .FSTART _bmp_reg_init
                 ;/////////////////////////////>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ...
                 ;//адреса калибровки
                 ;set_reg();
001201 df9b      	RCALL _set_reg
                 ;//чтение калибровочных данных
                 ;//AC1
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.AC1,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.AC1,
                 ;    2                     );
001202 940e 3942 	CALL SUBOPT_0x66
001204 e7e7      	LDI  R30,LOW(119)
001205 93ea      	ST   -Y,R30
001206 e6e1      	LDI  R30,LOW(_twi_bmp085_reg)
001207 e3f6      	LDI  R31,HIGH(_twi_bmp085_reg)
001208 940e 3947 	CALL SUBOPT_0x67
00120a e7e7      	LDI  R30,LOW(_twi_bmp085_data)
00120b e3f6      	LDI  R31,HIGH(_twi_bmp085_data)
00120c 940e 394c 	CALL SUBOPT_0x68
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//AC2
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.AC2,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.AC2,
                 ;    2                     );
00120e e7e7      	LDI  R30,LOW(119)
00120f 93ea      	ST   -Y,R30
                +
001210 e6e3     +LDI R30 , LOW ( _twi_bmp085_reg + ( 2 ) )
001211 e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 2 ) )
                 	__POINTW1MN _twi_bmp085_reg,2
001212 940e 3947 	CALL SUBOPT_0x67
                +
001214 e7e9     +LDI R30 , LOW ( _twi_bmp085_data + ( 2 ) )
001215 e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 2 ) )
                 	__POINTW1MN _twi_bmp085_data,2
001216 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//AC3
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.AC3,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.AC3,
                 ;    2                     );
001218 e7e7      	LDI  R30,LOW(119)
001219 93ea      	ST   -Y,R30
                +
00121a e6e5     +LDI R30 , LOW ( _twi_bmp085_reg + ( 4 ) )
00121b e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 4 ) )
                 	__POINTW1MN _twi_bmp085_reg,4
00121c 940e 3947 	CALL SUBOPT_0x67
                +
00121e e7eb     +LDI R30 , LOW ( _twi_bmp085_data + ( 4 ) )
00121f e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 4 ) )
                 	__POINTW1MN _twi_bmp085_data,4
001220 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//AC4
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.AC4,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.AC4,
                 ;    2                     );
001222 e7e7      	LDI  R30,LOW(119)
001223 93ea      	ST   -Y,R30
                +
001224 e6e7     +LDI R30 , LOW ( _twi_bmp085_reg + ( 6 ) )
001225 e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 6 ) )
                 	__POINTW1MN _twi_bmp085_reg,6
001226 940e 3947 	CALL SUBOPT_0x67
                +
001228 e7ed     +LDI R30 , LOW ( _twi_bmp085_data + ( 6 ) )
001229 e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 6 ) )
                 	__POINTW1MN _twi_bmp085_data,6
00122a 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//AC5
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.AC5,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.AC5,
                 ;    2                     );
00122c e7e7      	LDI  R30,LOW(119)
00122d 93ea      	ST   -Y,R30
                +
00122e e6e9     +LDI R30 , LOW ( _twi_bmp085_reg + ( 8 ) )
00122f e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 8 ) )
                 	__POINTW1MN _twi_bmp085_reg,8
001230 940e 3947 	CALL SUBOPT_0x67
                +
001232 e7ef     +LDI R30 , LOW ( _twi_bmp085_data + ( 8 ) )
001233 e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 8 ) )
                 	__POINTW1MN _twi_bmp085_data,8
001234 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//AC6
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.AC6,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.AC6,
                 ;    2                     );
001236 e7e7      	LDI  R30,LOW(119)
001237 93ea      	ST   -Y,R30
                +
001238 e6eb     +LDI R30 , LOW ( _twi_bmp085_reg + ( 10 ) )
001239 e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 10 ) )
                 	__POINTW1MN _twi_bmp085_reg,10
00123a 940e 3947 	CALL SUBOPT_0x67
                +
00123c e8e1     +LDI R30 , LOW ( _twi_bmp085_data + ( 10 ) )
00123d e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 10 ) )
                 	__POINTW1MN _twi_bmp085_data,10
00123e 940e 394c 	CALL SUBOPT_0x68
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//B1
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.B1,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.B1,
                 ;    2                     );
001240 e7e7      	LDI  R30,LOW(119)
001241 93ea      	ST   -Y,R30
                +
001242 e6ed     +LDI R30 , LOW ( _twi_bmp085_reg + ( 12 ) )
001243 e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 12 ) )
                 	__POINTW1MN _twi_bmp085_reg,12
001244 940e 3947 	CALL SUBOPT_0x67
                +
001246 e8e3     +LDI R30 , LOW ( _twi_bmp085_data + ( 12 ) )
001247 e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 12 ) )
                 	__POINTW1MN _twi_bmp085_data,12
001248 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//B2
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.B2,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.B2,
                 ;    2                     );
00124a e7e7      	LDI  R30,LOW(119)
00124b 93ea      	ST   -Y,R30
                +
00124c e6ef     +LDI R30 , LOW ( _twi_bmp085_reg + ( 14 ) )
00124d e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 14 ) )
                 	__POINTW1MN _twi_bmp085_reg,14
00124e 940e 3947 	CALL SUBOPT_0x67
                +
001250 e8e5     +LDI R30 , LOW ( _twi_bmp085_data + ( 14 ) )
001251 e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 14 ) )
                 	__POINTW1MN _twi_bmp085_data,14
001252 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//MB
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.MB,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.MB,
                 ;    2                     );
001254 e7e7      	LDI  R30,LOW(119)
001255 93ea      	ST   -Y,R30
                +
001256 e7e1     +LDI R30 , LOW ( _twi_bmp085_reg + ( 16 ) )
001257 e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 16 ) )
                 	__POINTW1MN _twi_bmp085_reg,16
001258 940e 3947 	CALL SUBOPT_0x67
                +
00125a e8e7     +LDI R30 , LOW ( _twi_bmp085_data + ( 16 ) )
00125b e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 16 ) )
                 	__POINTW1MN _twi_bmp085_data,16
00125c 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//MC
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.MC,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.MC,
                 ;    2                     );
00125e e7e7      	LDI  R30,LOW(119)
00125f 93ea      	ST   -Y,R30
                +
001260 e7e3     +LDI R30 , LOW ( _twi_bmp085_reg + ( 18 ) )
001261 e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 18 ) )
                 	__POINTW1MN _twi_bmp085_reg,18
001262 940e 3947 	CALL SUBOPT_0x67
                +
001264 e8e9     +LDI R30 , LOW ( _twi_bmp085_data + ( 18 ) )
001265 e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 18 ) )
                 	__POINTW1MN _twi_bmp085_data,18
001266 940e 394c 	CALL SUBOPT_0x68
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//MD
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&twi_bmp085_reg.MD,
                 ;    2,
                 ;    (unsigned char *)&twi_bmp085_data.MD,
                 ;    2                     );
001268 e7e7      	LDI  R30,LOW(119)
001269 93ea      	ST   -Y,R30
                +
00126a e7e5     +LDI R30 , LOW ( _twi_bmp085_reg + ( 20 ) )
00126b e3f6     +LDI R31 , HIGH ( _twi_bmp085_reg + ( 20 ) )
                 	__POINTW1MN _twi_bmp085_reg,20
00126c 940e 3947 	CALL SUBOPT_0x67
                +
00126e e8eb     +LDI R30 , LOW ( _twi_bmp085_data + ( 20 ) )
00126f e3f6     +LDI R31 , HIGH ( _twi_bmp085_data + ( 20 ) )
                 	__POINTW1MN _twi_bmp085_data,20
001270 93fa      	ST   -Y,R31
001271 93ea      	ST   -Y,R30
001272 e0a2      	LDI  R26,LOW(2)
001273 940e 3537 	CALL _twi_master_trans
                 ;//////////////////////////////////////CALC////////////////////////////////////////////////////
                 ;
                 ;
                 ;//вычисление переменных для расчета температуры// и давления
                 ;AC1=(twi_bmp085_data.AC1.msb<<8)+twi_bmp085_data.AC1.lsb;
001275 91b0 3677 	LDS  R27,_twi_bmp085_data
001277 e0a0      	LDI  R26,LOW(0)
                +
001278 91e0 3678+LDS R30 , _twi_bmp085_data + ( 1 )
                 	__GETB1MN _twi_bmp085_data,1
00127a e0f0      	LDI  R31,0
00127b 0fea      	ADD  R30,R26
00127c 1ffb      	ADC  R31,R27
00127d 93e0 3612 	STS  _AC1,R30
00127f 93f0 3613 	STS  _AC1+1,R31
                 ;AC2=(twi_bmp085_data.AC2.msb<<8)+twi_bmp085_data.AC2.lsb;
                +
001281 91f0 3679+LDS R31 , _twi_bmp085_data + ( 2 )
                 	__GETB1HMN _twi_bmp085_data,2
001283 e0e0      	LDI  R30,LOW(0)
001284 01df      	MOVW R26,R30
                +
001285 91e0 367a+LDS R30 , _twi_bmp085_data + ( 3 )
                 	__GETB1MN _twi_bmp085_data,3
001287 e0f0      	LDI  R31,0
001288 0fea      	ADD  R30,R26
001289 1ffb      	ADC  R31,R27
00128a 93e0 3614 	STS  _AC2,R30
00128c 93f0 3615 	STS  _AC2+1,R31
                 ;AC3=(twi_bmp085_data.AC3.msb<<8)+twi_bmp085_data.AC3.lsb;
                +
00128e 91f0 367b+LDS R31 , _twi_bmp085_data + ( 4 )
                 	__GETB1HMN _twi_bmp085_data,4
001290 e0e0      	LDI  R30,LOW(0)
001291 01df      	MOVW R26,R30
                +
001292 91e0 367c+LDS R30 , _twi_bmp085_data + ( 5 )
                 	__GETB1MN _twi_bmp085_data,5
001294 e0f0      	LDI  R31,0
001295 0fea      	ADD  R30,R26
001296 1ffb      	ADC  R31,R27
001297 93e0 3616 	STS  _AC3,R30
001299 93f0 3617 	STS  _AC3+1,R31
                 ;AC4=(twi_bmp085_data.AC4.msb<<8)+twi_bmp085_data.AC4.lsb;
                +
00129b 91f0 367d+LDS R31 , _twi_bmp085_data + ( 6 )
                 	__GETB1HMN _twi_bmp085_data,6
00129d e0e0      	LDI  R30,LOW(0)
00129e 01df      	MOVW R26,R30
                +
00129f 91e0 367e+LDS R30 , _twi_bmp085_data + ( 7 )
                 	__GETB1MN _twi_bmp085_data,7
0012a1 e0f0      	LDI  R31,0
0012a2 0fea      	ADD  R30,R26
0012a3 1ffb      	ADC  R31,R27
0012a4 93e0 3618 	STS  _AC4,R30
0012a6 93f0 3619 	STS  _AC4+1,R31
                 ;AC5=(twi_bmp085_data.AC5.msb<<8)+twi_bmp085_data.AC5.lsb; //
                +
0012a8 91f0 367f+LDS R31 , _twi_bmp085_data + ( 8 )
                 	__GETB1HMN _twi_bmp085_data,8
0012aa e0e0      	LDI  R30,LOW(0)
0012ab 01df      	MOVW R26,R30
                +
0012ac 91e0 3680+LDS R30 , _twi_bmp085_data + ( 9 )
                 	__GETB1MN _twi_bmp085_data,9
0012ae e0f0      	LDI  R31,0
0012af 0fea      	ADD  R30,R26
0012b0 1ffb      	ADC  R31,R27
0012b1 93e0 361a 	STS  _AC5,R30
0012b3 93f0 361b 	STS  _AC5+1,R31
                 ;AC6=(twi_bmp085_data.AC6.msb<<8)+twi_bmp085_data.AC6.lsb;//
                +
0012b5 91f0 3681+LDS R31 , _twi_bmp085_data + ( 10 )
                 	__GETB1HMN _twi_bmp085_data,10
0012b7 e0e0      	LDI  R30,LOW(0)
0012b8 01df      	MOVW R26,R30
                +
0012b9 91e0 3682+LDS R30 , _twi_bmp085_data + ( 11 )
                 	__GETB1MN _twi_bmp085_data,11
0012bb e0f0      	LDI  R31,0
0012bc 0fea      	ADD  R30,R26
0012bd 1ffb      	ADC  R31,R27
0012be 93e0 361c 	STS  _AC6,R30
0012c0 93f0 361d 	STS  _AC6+1,R31
                 ;B1=(twi_bmp085_data.B1.msb<<8)+twi_bmp085_data.B1.lsb;
                +
0012c2 91f0 3683+LDS R31 , _twi_bmp085_data + ( 12 )
                 	__GETB1HMN _twi_bmp085_data,12
0012c4 e0e0      	LDI  R30,LOW(0)
0012c5 01df      	MOVW R26,R30
                +
0012c6 91e0 3684+LDS R30 , _twi_bmp085_data + ( 13 )
                 	__GETB1MN _twi_bmp085_data,13
0012c8 e0f0      	LDI  R31,0
0012c9 0fea      	ADD  R30,R26
0012ca 1ffb      	ADC  R31,R27
0012cb 93e0 361e 	STS  _B1,R30
0012cd 93f0 361f 	STS  _B1+1,R31
                 ;B2=(twi_bmp085_data.B2.msb<<8)+twi_bmp085_data.B2.lsb;
                +
0012cf 91f0 3685+LDS R31 , _twi_bmp085_data + ( 14 )
                 	__GETB1HMN _twi_bmp085_data,14
0012d1 e0e0      	LDI  R30,LOW(0)
0012d2 01df      	MOVW R26,R30
                +
0012d3 91e0 3686+LDS R30 , _twi_bmp085_data + ( 15 )
                 	__GETB1MN _twi_bmp085_data,15
0012d5 e0f0      	LDI  R31,0
0012d6 0fea      	ADD  R30,R26
0012d7 1ffb      	ADC  R31,R27
0012d8 93e0 3620 	STS  _B2,R30
0012da 93f0 3621 	STS  _B2+1,R31
                 ;MB=(twi_bmp085_data.MB.msb<<8)+twi_bmp085_data.MB.lsb;
                +
0012dc 91f0 3687+LDS R31 , _twi_bmp085_data + ( 16 )
                 	__GETB1HMN _twi_bmp085_data,16
0012de e0e0      	LDI  R30,LOW(0)
0012df 01df      	MOVW R26,R30
                +
0012e0 91e0 3688+LDS R30 , _twi_bmp085_data + ( 17 )
                 	__GETB1MN _twi_bmp085_data,17
0012e2 e0f0      	LDI  R31,0
0012e3 0fea      	ADD  R30,R26
0012e4 1ffb      	ADC  R31,R27
0012e5 93e0 3622 	STS  _MB,R30
0012e7 93f0 3623 	STS  _MB+1,R31
                 ;MC=(twi_bmp085_data.MC.msb<<8)+twi_bmp085_data.MC.lsb;//
                +
0012e9 91f0 3689+LDS R31 , _twi_bmp085_data + ( 18 )
                 	__GETB1HMN _twi_bmp085_data,18
0012eb e0e0      	LDI  R30,LOW(0)
0012ec 01df      	MOVW R26,R30
                +
0012ed 91e0 368a+LDS R30 , _twi_bmp085_data + ( 19 )
                 	__GETB1MN _twi_bmp085_data,19
0012ef e0f0      	LDI  R31,0
0012f0 0fea      	ADD  R30,R26
0012f1 1ffb      	ADC  R31,R27
0012f2 93e0 3624 	STS  _MC,R30
0012f4 93f0 3625 	STS  _MC+1,R31
                 ;MD=(twi_bmp085_data.MD.msb<<8)+twi_bmp085_data.MD.lsb;//
                +
0012f6 91f0 368b+LDS R31 , _twi_bmp085_data + ( 20 )
                 	__GETB1HMN _twi_bmp085_data,20
0012f8 e0e0      	LDI  R30,LOW(0)
0012f9 01df      	MOVW R26,R30
                +
0012fa 91e0 368c+LDS R30 , _twi_bmp085_data + ( 21 )
                 	__GETB1MN _twi_bmp085_data,21
0012fc e0f0      	LDI  R31,0
0012fd 0fea      	ADD  R30,R26
0012fe 1ffb      	ADC  R31,R27
0012ff 93e0 3626 	STS  _MD,R30
001301 93f0 3627 	STS  _MD+1,R31
                 ;
                 ;//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;}
001303 9508      	RET
                 ; .FEND
                 ;
                 ;//
                 ;void read_bmp(void)
                 ;{
                 _read_bmp:
                 ; .FSTART _read_bmp
                 ;/////////////////////////////MEASUREMENT//////////////////////////////////////////////////////
                 ;//запрос температуры
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&read_temp_please,
                 ;    2,
                 ;    0,
                 ;    0                     );
001304 940e 3942 	CALL SUBOPT_0x66
001306 e7e7      	LDI  R30,LOW(119)
001307 93ea      	ST   -Y,R30
001308 e8ed      	LDI  R30,LOW(_read_temp_please)
001309 e3f6      	LDI  R31,HIGH(_read_temp_please)
00130a 940e 3947 	CALL SUBOPT_0x67
00130c 940e 3952 	CALL SUBOPT_0x69
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//пауза
                 ;//ожидание сигнал по линии OEC
                 ;//while((PORTE.IN&0b00000100)==0b00000000)
                 ;//{
                 ;//;
                 ;//}
                 ;delay_ms(26);
                 ;
                 ;//адреса и данные
                 ;
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&read_temp_adr,
                 ;    2,
                 ;    (unsigned char *)&read_temp_data,
                 ;    2                     );
00130e e7e7      	LDI  R30,LOW(119)
00130f 93ea      	ST   -Y,R30
001310 e8ef      	LDI  R30,LOW(_read_temp_adr)
001311 e3f6      	LDI  R31,HIGH(_read_temp_adr)
001312 940e 3947 	CALL SUBOPT_0x67
001314 e9e1      	LDI  R30,LOW(_read_temp_data)
001315 e3f6      	LDI  R31,HIGH(_read_temp_data)
001316 940e 394c 	CALL SUBOPT_0x68
                 ;
                 ;//??????????????????????????????????????????????????????????????????????????????????????????????
                 ;
                 ;//запрос давления
                 ;
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&read_pres_please,
                 ;    2,
                 ;    0,
                 ;    0                     );
001318 e7e7      	LDI  R30,LOW(119)
001319 93ea      	ST   -Y,R30
00131a e9e3      	LDI  R30,LOW(_read_pres_please)
00131b e3f6      	LDI  R31,HIGH(_read_pres_please)
00131c 940e 3947 	CALL SUBOPT_0x67
00131e 940e 3952 	CALL SUBOPT_0x69
                 ;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                 ;//пауза
                 ;//ожидание по OEC
                 ;//
                 ;delay_ms(26);
                 ;//while((PORTE.IN&0b00000100)==0b00000000)
                 ;//{
                 ;//;
                 ;//}
                 ;
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&read_pres_adr.msb,
                 ;    1,
                 ;    (unsigned char *)&read_pres_data.msb,
                 ;    1                     );
001320 e7e7      	LDI  R30,LOW(119)
001321 93ea      	ST   -Y,R30
001322 e9e5      	LDI  R30,LOW(_read_pres_adr)
001323 e3f6      	LDI  R31,HIGH(_read_pres_adr)
001324 940e 395e 	CALL SUBOPT_0x6A
001326 e9e8      	LDI  R30,LOW(_read_pres_data)
001327 e3f6      	LDI  R31,HIGH(_read_pres_data)
001328 940e 3963 	CALL SUBOPT_0x6B
                 ;
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&read_pres_adr.lsb,
                 ;    1,
                 ;    (unsigned char *)&read_pres_data.lsb,
                 ;    1                     );
00132a e7e7      	LDI  R30,LOW(119)
00132b 93ea      	ST   -Y,R30
                +
00132c e9e6     +LDI R30 , LOW ( _read_pres_adr + ( 1 ) )
00132d e3f6     +LDI R31 , HIGH ( _read_pres_adr + ( 1 ) )
                 	__POINTW1MN _read_pres_adr,1
00132e 940e 395e 	CALL SUBOPT_0x6A
                +
001330 e9e9     +LDI R30 , LOW ( _read_pres_data + ( 1 ) )
001331 e3f6     +LDI R31 , HIGH ( _read_pres_data + ( 1 ) )
                 	__POINTW1MN _read_pres_data,1
001332 940e 3963 	CALL SUBOPT_0x6B
                 ;
                 ;twi_master_trans (
                 ;    &twie_master,
                 ;    BMP085_TWI_BUS_ADDRESS,
                 ;    (unsigned char *)&read_pres_adr.xlsb,
                 ;    1,
                 ;    (unsigned char *)&read_pres_data.xlsb,
                 ;    1                     );
001334 e7e7      	LDI  R30,LOW(119)
001335 93ea      	ST   -Y,R30
                +
001336 e9e7     +LDI R30 , LOW ( _read_pres_adr + ( 2 ) )
001337 e3f6     +LDI R31 , HIGH ( _read_pres_adr + ( 2 ) )
                 	__POINTW1MN _read_pres_adr,2
001338 940e 395e 	CALL SUBOPT_0x6A
                +
00133a e9ea     +LDI R30 , LOW ( _read_pres_data + ( 2 ) )
00133b e3f6     +LDI R31 , HIGH ( _read_pres_data + ( 2 ) )
                 	__POINTW1MN _read_pres_data,2
00133c 93fa      	ST   -Y,R31
00133d 93ea      	ST   -Y,R30
00133e e0a1      	LDI  R26,LOW(1)
00133f 940e 3537 	CALL _twi_master_trans
                 ;
                 ;/////////////////////////////MEASUREMENT//////////////////////////////////////////////////////
                 ;
                 ;
                 ;//////////////////////////////////////CALC////////////////////////////////////////////////////
                 ;//собираем регистр температуры
                 ;UT=(read_temp_data.msb<<8)+read_temp_data.lsb;
001341 91b0 3691 	LDS  R27,_read_temp_data
001343 e0a0      	LDI  R26,LOW(0)
                +
001344 91e0 3692+LDS R30 , _read_temp_data + ( 1 )
                 	__GETB1MN _read_temp_data,1
001346 e0f0      	LDI  R31,0
001347 0fea      	ADD  R30,R26
001348 1ffb      	ADC  R31,R27
001349 940e 415d 	CALL __CWD1
00134b 93e0 3628 	STS  _UT,R30
00134d 93f0 3629 	STS  _UT+1,R31
00134f 9360 362a 	STS  _UT+2,R22
001351 9370 362b 	STS  _UT+3,R23
                 ;UP= read_pres_data.msb;
001353 91e0 3698 	LDS  R30,_read_pres_data
001355 27ff      	CLR  R31
001356 2766      	CLR  R22
001357 2777      	CLR  R23
001358 940e 3969 	CALL SUBOPT_0x6C
                 ;UP<<=8;
00135a 940e 3972 	CALL SUBOPT_0x6D
00135c e0e8      	LDI  R30,LOW(8)
00135d 940e 4101 	CALL __LSLD12
00135f 940e 3969 	CALL SUBOPT_0x6C
                 ;UP=UP+read_pres_data.lsb;
                +
001361 91e0 3699+LDS R30 , _read_pres_data + ( 1 )
                 	__GETB1MN _read_pres_data,1
001363 e0f0      	LDI  R31,0
001364 940e 3972 	CALL SUBOPT_0x6D
001366 940e 38d5 	CALL SUBOPT_0x59
001368 940e 3969 	CALL SUBOPT_0x6C
                 ;UP<<=8;
00136a 940e 3972 	CALL SUBOPT_0x6D
00136c e0e8      	LDI  R30,LOW(8)
00136d 940e 4101 	CALL __LSLD12
00136f 940e 3969 	CALL SUBOPT_0x6C
                 ;UP=UP+read_pres_data.xlsb;
                +
001371 91e0 369a+LDS R30 , _read_pres_data + ( 2 )
                 	__GETB1MN _read_pres_data,2
001373 e0f0      	LDI  R31,0
001374 940e 3972 	CALL SUBOPT_0x6D
001376 940e 38d5 	CALL SUBOPT_0x59
001378 940e 3969 	CALL SUBOPT_0x6C
                 ;UP>>=(8-oss);
00137a 91a0 362c 	LDS  R26,_oss
00137c e0e8      	LDI  R30,LOW(8)
00137d 1bea      	SUB  R30,R26
00137e 940e 3972 	CALL SUBOPT_0x6D
001380 940e 410d 	CALL __ASRD12
001382 940e 3969 	CALL SUBOPT_0x6C
                 ;
                 ;///////////////_TTTTT_/////////////
                 ;X1=((UT-AC6)*AC5)>>15;
001384 91e0 361c 	LDS  R30,_AC6
001386 91f0 361d 	LDS  R31,_AC6+1
001388 91a0 3628 	LDS  R26,_UT
00138a 91b0 3629 	LDS  R27,_UT+1
00138c 9180 362a 	LDS  R24,_UT+2
00138e 9190 362b 	LDS  R25,_UT+3
001390 2766      	CLR  R22
001391 2777      	CLR  R23
001392 940e 40e1 	CALL __SUBD21
001394 91e0 361a 	LDS  R30,_AC5
001396 91f0 361b 	LDS  R31,_AC5+1
001398 2766      	CLR  R22
001399 2777      	CLR  R23
00139a 940e 397b 	CALL SUBOPT_0x6E
00139c e0ef      	LDI  R30,LOW(15)
00139d 940e 3980 	CALL SUBOPT_0x6F
                 ;X2=((long)MC<<11)/(X1+MD);
00139f 91a0 3624 	LDS  R26,_MC
0013a1 91b0 3625 	LDS  R27,_MC+1
0013a3 940e 4162 	CALL __CWD2
0013a5 e0eb      	LDI  R30,LOW(11)
0013a6 940e 4101 	CALL __LSLD12
0013a8 937f      	PUSH R23
0013a9 936f      	PUSH R22
0013aa 93ff      	PUSH R31
0013ab 93ef      	PUSH R30
0013ac 91e0 3626 	LDS  R30,_MD
0013ae 91f0 3627 	LDS  R31,_MD+1
0013b0 940e 398b 	CALL SUBOPT_0x70
0013b2 940e 38d5 	CALL SUBOPT_0x59
0013b4 91af      	POP  R26
0013b5 91bf      	POP  R27
0013b6 918f      	POP  R24
0013b7 919f      	POP  R25
0013b8 940e 41e7 	CALL __DIVD21
0013ba 940e 3994 	CALL SUBOPT_0x71
                 ;B5=(X1+X2);
0013bc 93e0 3639 	STS  _B5,R30
0013be 93f0 363a 	STS  _B5+1,R31
0013c0 9360 363b 	STS  _B5+2,R22
0013c2 9370 363c 	STS  _B5+3,R23
                 ;Temp=((B5+8)>>4);
0013c4 940e 39a0 	CALL SUBOPT_0x72
                +
0013c6 5fe8     +SUBI R30 , LOW ( - 8 )
0013c7 4fff     +SBCI R31 , HIGH ( - 8 )
0013c8 4f6f     +SBCI R22 , BYTE3 ( - 8 )
0013c9 4f7f     +SBCI R23 , BYTE4 ( - 8 )
                 	__ADDD1N 8
0013ca 01df      	MOVW R26,R30
0013cb 01cb      	MOVW R24,R22
0013cc e0e4      	LDI  R30,LOW(4)
0013cd 940e 410d 	CALL __ASRD12
0013cf 93e0 363d 	STS  _Temp,R30
0013d1 93f0 363e 	STS  _Temp+1,R31
0013d3 9360 363f 	STS  _Temp+2,R22
0013d5 9370 3640 	STS  _Temp+3,R23
                 ;Tempf=Temp/10.0;
0013d7 940e 3f91 	CALL __CDF1
0013d9 01df      	MOVW R26,R30
0013da 01cb      	MOVW R24,R22
0013db 940e 39a9 	CALL SUBOPT_0x73
0013dd 940e 4069 	CALL __DIVF21
0013df 93e0 3659 	STS  _Tempf,R30
0013e1 93f0 365a 	STS  _Tempf+1,R31
0013e3 9360 365b 	STS  _Tempf+2,R22
0013e5 9370 365c 	STS  _Tempf+3,R23
                 ;///////////////_TTTTT_/////////////
                 ;
                 ;//////////////_PPPPPPP_////////////
                 ;B6=B5-4000;
0013e7 940e 39a0 	CALL SUBOPT_0x72
                +
0013e9 5ae0     +SUBI R30 , LOW ( 4000 )
0013ea 40ff     +SBCI R31 , HIGH ( 4000 )
0013eb 4060     +SBCI R22 , BYTE3 ( 4000 )
0013ec 4070     +SBCI R23 , BYTE4 ( 4000 )
                 	__SUBD1N 4000
0013ed 93e0 3641 	STS  _B6,R30
0013ef 93f0 3642 	STS  _B6+1,R31
0013f1 9360 3643 	STS  _B6+2,R22
0013f3 9370 3644 	STS  _B6+3,R23
                 ;X1=(B2*(B6*B6)>>12)>>11;
0013f5 940e 39ae 	CALL SUBOPT_0x74
0013f7 940e 39b7 	CALL SUBOPT_0x75
0013f9 940e 4197 	CALL __MULD12
0013fb 91a0 3620 	LDS  R26,_B2
0013fd 91b0 3621 	LDS  R27,_B2+1
0013ff 940e 39c0 	CALL SUBOPT_0x76
001401 e0ec      	LDI  R30,LOW(12)
001402 940e 410d 	CALL __ASRD12
001404 01df      	MOVW R26,R30
001405 01cb      	MOVW R24,R22
001406 e0eb      	LDI  R30,LOW(11)
001407 940e 3980 	CALL SUBOPT_0x6F
                 ;X2=(AC2*B6)>>11;
001409 940e 39ae 	CALL SUBOPT_0x74
00140b 91a0 3614 	LDS  R26,_AC2
00140d 91b0 3615 	LDS  R27,_AC2+1
00140f 940e 39c0 	CALL SUBOPT_0x76
001411 e0eb      	LDI  R30,LOW(11)
001412 940e 410d 	CALL __ASRD12
001414 940e 3994 	CALL SUBOPT_0x71
                 ;X3=X1+X2;
001416 940e 39c3 	CALL SUBOPT_0x77
                 ;B3=    ((( ((signed long)AC1)*4 + X3)<<oss) + 2)>>2;
001418 91a0 3612 	LDS  R26,_AC1
00141a 91b0 3613 	LDS  R27,_AC1+1
00141c 940e 4162 	CALL __CWD2
                +
00141e e0e4     +LDI R30 , LOW ( 0x4 )
00141f e0f0     +LDI R31 , HIGH ( 0x4 )
001420 e060     +LDI R22 , BYTE3 ( 0x4 )
001421 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
001422 940e 4197 	CALL __MULD12
001424 91a0 3645 	LDS  R26,_X3
001426 91b0 3646 	LDS  R27,_X3+1
001428 9180 3647 	LDS  R24,_X3+2
00142a 9190 3648 	LDS  R25,_X3+3
00142c 940e 40d7 	CALL __ADDD21
00142e 91e0 362c 	LDS  R30,_oss
001430 940e 4101 	CALL __LSLD12
001432 940e 39cc 	CALL SUBOPT_0x78
001434 93e0 3649 	STS  _B3,R30
001436 93f0 364a 	STS  _B3+1,R31
001438 9360 364b 	STS  _B3+2,R22
00143a 9370 364c 	STS  _B3+3,R23
                 ;X1=(AC3*B6)>>13;
00143c 940e 39ae 	CALL SUBOPT_0x74
00143e 91a0 3616 	LDS  R26,_AC3
001440 91b0 3617 	LDS  R27,_AC3+1
001442 940e 39c0 	CALL SUBOPT_0x76
001444 e0ed      	LDI  R30,LOW(13)
001445 940e 3980 	CALL SUBOPT_0x6F
                 ;X2 = (B1 * ((B6 * B6)>>12))>>16;
001447 940e 39ae 	CALL SUBOPT_0x74
001449 940e 39b7 	CALL SUBOPT_0x75
00144b 940e 397b 	CALL SUBOPT_0x6E
00144d e0ec      	LDI  R30,LOW(12)
00144e 940e 410d 	CALL __ASRD12
001450 91a0 361e 	LDS  R26,_B1
001452 91b0 361f 	LDS  R27,_B1+1
001454 940e 4162 	CALL __CWD2
001456 940e 39d5 	CALL SUBOPT_0x79
001458 940e 3994 	CALL SUBOPT_0x71
                 ;X3 = ((X1 + X2) + 2)>>2;
00145a 940e 39cc 	CALL SUBOPT_0x78
00145c 940e 39c3 	CALL SUBOPT_0x77
                 ;B4 = (AC4 * (unsigned long)(X3 + 32768))>>15;
00145e 91e0 3645 	LDS  R30,_X3
001460 91f0 3646 	LDS  R31,_X3+1
001462 9160 3647 	LDS  R22,_X3+2
001464 9170 3648 	LDS  R23,_X3+3
                +
001466 50e0     +SUBI R30 , LOW ( - 32768 )
001467 48f0     +SBCI R31 , HIGH ( - 32768 )
001468 4f6f     +SBCI R22 , BYTE3 ( - 32768 )
001469 4f7f     +SBCI R23 , BYTE4 ( - 32768 )
                 	__ADDD1N 32768
00146a 91a0 3618 	LDS  R26,_AC4
00146c 91b0 3619 	LDS  R27,_AC4+1
00146e 2788      	CLR  R24
00146f 2799      	CLR  R25
001470 940e 4171 	CALL __MULD12U
001472 01df      	MOVW R26,R30
001473 01cb      	MOVW R24,R22
001474 e0ef      	LDI  R30,LOW(15)
001475 940e 4119 	CALL __LSRD12
001477 93e0 3651 	STS  _B4,R30
001479 93f0 3652 	STS  _B4+1,R31
00147b 9360 3653 	STS  _B4+2,R22
00147d 9370 3654 	STS  _B4+3,R23
                 ;B7 = ((unsigned long)(UP - B3) * (50000>>oss));
00147f 91a0 3649 	LDS  R26,_B3
001481 91b0 364a 	LDS  R27,_B3+1
001483 9180 364b 	LDS  R24,_B3+2
001485 9190 364c 	LDS  R25,_B3+3
001487 91e0 362d 	LDS  R30,_UP
001489 91f0 362e 	LDS  R31,_UP+1
00148b 9160 362f 	LDS  R22,_UP+2
00148d 9170 3630 	LDS  R23,_UP+3
00148f 940e 40dc 	CALL __SUBD12
001491 937f      	PUSH R23
001492 936f      	PUSH R22
001493 93ff      	PUSH R31
001494 93ef      	PUSH R30
001495 91e0 362c 	LDS  R30,_oss
001497 e5a0      	LDI  R26,LOW(50000)
001498 ecb3      	LDI  R27,HIGH(50000)
001499 940e 40f8 	CALL __LSRW12
00149b 91af      	POP  R26
00149c 91bf      	POP  R27
00149d 918f      	POP  R24
00149e 919f      	POP  R25
00149f 2766      	CLR  R22
0014a0 2777      	CLR  R23
0014a1 940e 4171 	CALL __MULD12U
0014a3 93e0 3655 	STS  _B7,R30
0014a5 93f0 3656 	STS  _B7+1,R31
0014a7 9360 3657 	STS  _B7+2,R22
0014a9 9370 3658 	STS  _B7+3,R23
                 ;if (B7 < 0x80000000){p = (B7<<1)/B4;}
0014ab 940e 39da 	CALL SUBOPT_0x7A
                +
0014ad 30a0     +CPI R26 , LOW ( 0x80000000 )
0014ae e0e0     +LDI R30 , HIGH ( 0x80000000 )
0014af 07be     +CPC R27 , R30
0014b0 e0e0     +LDI R30 , BYTE3 ( 0x80000000 )
0014b1 078e     +CPC R24 , R30
0014b2 e8e0     +LDI R30 , BYTE4 ( 0x80000000 )
0014b3 079e     +CPC R25 , R30
                 	__CPD2N 0x80000000
0014b4 f488      	BRSH _0x194
0014b5 91e0 3655 	LDS  R30,_B7
0014b7 91f0 3656 	LDS  R31,_B7+1
0014b9 9160 3657 	LDS  R22,_B7+2
0014bb 9170 3658 	LDS  R23,_B7+3
0014bd 940e 413c 	CALL __LSLD1
0014bf 01df      	MOVW R26,R30
0014c0 01cb      	MOVW R24,R22
0014c1 940e 39e3 	CALL SUBOPT_0x7B
0014c3 940e 41c2 	CALL __DIVD21U
0014c5 c008      	RJMP _0x227
                 ;else {p = (B7/B4)<<1;}
                 _0x194:
0014c6 940e 39e3 	CALL SUBOPT_0x7B
0014c8 940e 39da 	CALL SUBOPT_0x7A
0014ca 940e 41c2 	CALL __DIVD21U
0014cc 940e 413c 	CALL __LSLD1
                 _0x227:
0014ce 93e0 364d 	STS  _p,R30
0014d0 93f0 364e 	STS  _p+1,R31
0014d2 9360 364f 	STS  _p+2,R22
0014d4 9370 3650 	STS  _p+3,R23
                 ;X1=(p>>8)*(p>>8);
0014d6 940e 39ec 	CALL SUBOPT_0x7C
0014d8 937f      	PUSH R23
0014d9 936f      	PUSH R22
0014da 93ff      	PUSH R31
0014db 93ef      	PUSH R30
0014dc 940e 39ec 	CALL SUBOPT_0x7C
0014de 91af      	POP  R26
0014df 91bf      	POP  R27
0014e0 918f      	POP  R24
0014e1 919f      	POP  R25
0014e2 940e 4197 	CALL __MULD12
0014e4 940e 39f8 	CALL SUBOPT_0x7D
                 ;X1=(X1*3038)>>16;
0014e6 91e0 3631 	LDS  R30,_X1
0014e8 91f0 3632 	LDS  R31,_X1+1
0014ea 9160 3633 	LDS  R22,_X1+2
0014ec 9170 3634 	LDS  R23,_X1+3
                +
0014ee edae     +LDI R26 , LOW ( 0xBDE )
0014ef e0bb     +LDI R27 , HIGH ( 0xBDE )
0014f0 e080     +LDI R24 , BYTE3 ( 0xBDE )
0014f1 e090     +LDI R25 , BYTE4 ( 0xBDE )
                 	__GETD2N 0xBDE
0014f2 940e 39d5 	CALL SUBOPT_0x79
0014f4 940e 39f8 	CALL SUBOPT_0x7D
                 ;X2=(-7357*p)>>16;
0014f6 940e 3a01 	CALL SUBOPT_0x7E
                +
0014f8 e4a3     +LDI R26 , LOW ( 0xFFFFE343 )
0014f9 eeb3     +LDI R27 , HIGH ( 0xFFFFE343 )
0014fa ef8f     +LDI R24 , BYTE3 ( 0xFFFFE343 )
0014fb ef9f     +LDI R25 , BYTE4 ( 0xFFFFE343 )
                 	__GETD2N 0xFFFFE343
0014fc 940e 39d5 	CALL SUBOPT_0x79
0014fe 940e 3994 	CALL SUBOPT_0x71
                 ;p+=(X1+X2+3791)>>4;
                +
001500 53e1     +SUBI R30 , LOW ( - 3791 )
001501 4ff1     +SBCI R31 , HIGH ( - 3791 )
001502 4f6f     +SBCI R22 , BYTE3 ( - 3791 )
001503 4f7f     +SBCI R23 , BYTE4 ( - 3791 )
                 	__ADDD1N 3791
001504 01df      	MOVW R26,R30
001505 01cb      	MOVW R24,R22
001506 e0e4      	LDI  R30,LOW(4)
001507 940e 410d 	CALL __ASRD12
001509 940e 3a0a 	CALL SUBOPT_0x7F
00150b 940e 40d2 	CALL __ADDD12
00150d 93e0 364d 	STS  _p,R30
00150f 93f0 364e 	STS  _p+1,R31
001511 9360 364f 	STS  _p+2,R22
001513 9370 3650 	STS  _p+3,R23
                 ;p1=p/133.322;
001515 940e 3a01 	CALL SUBOPT_0x7E
001517 940e 3f91 	CALL __CDF1
001519 01df      	MOVW R26,R30
00151a 01cb      	MOVW R24,R22
                +
00151b e6ef     +LDI R30 , LOW ( 0x4305526F )
00151c e5f2     +LDI R31 , HIGH ( 0x4305526F )
00151d e065     +LDI R22 , BYTE3 ( 0x4305526F )
00151e e473     +LDI R23 , BYTE4 ( 0x4305526F )
                 	__GETD1N 0x4305526F
00151f 940e 4069 	CALL __DIVF21
001521 93e0 365d 	STS  _p1,R30
001523 93f0 365e 	STS  _p1+1,R31
001525 9360 365f 	STS  _p1+2,R22
001527 9370 3660 	STS  _p1+3,R23
                 ;//////////////_PPPPPPP_////////////
                 ;}
001529 9508      	RET
                 ; .FEND
                 ;
                 ;#include "PCA9557D.c"
                 ;//адреса наших микросхем
                 ;#define PCA9557D_U1 (0x30>>1)
                 ;#define PCA9557D_U2 (0x32>>1)
                 ;#define PCA9557D_U3 (0x34>>1)
                 ;//необходимые библиотеки
                 ;#include <io.h>
                 ;#include <stdio.h>
                 ;
                 ;char error_buf=0;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char input;
                 ;            } U1in;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char output;
                 ;            } U1out;
                 ;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char io;
                 ;            } U1io;
                 ;
                 ;         struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char data;
                 ;            } U1ne_invert;
                 ;         ////////////////////////////////U1////////////////////////////////////
                 ;
                 ;         ////////////////////////////////U2////////////////////////////////////
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char input;
                 ;            } U2in;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char output;
                 ;            } U2out;
                 ;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char io;
                 ;            } U2io;
                 ;
                 ;         struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char data;
                 ;            } U2ne_invert;
                 ;         ////////////////////////////////U2////////////////////////////////////
                 ;
                 ;          ////////////////////////////////U3////////////////////////////////////
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char input;
                 ;            } U3in;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char output;
                 ;            } U3out;
                 ;
                 ;
                 ;        struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char io;
                 ;            } U3io;
                 ;
                 ;         struct
                 ;            {
                 ;            unsigned char control;
                 ;            unsigned char data;
                 ;            } U3ne_invert;
                 ;         ////////////////////////////////U3////////////////////////////////////
                 ;
                 ;
                 ;///////////////////111111111111111111111111111111111111111111111111//////////////////////////////////
                 ;
                 ;
                 ;//из буфера U1 мы читаем биты 1,4,5
                 ;//пишим биты 0,2,3,6,7
                 ;//настройка конфигурации =0x32
                 ;
                 ;//инициализация буфера U1
                 ;void init_buferU1 (void)
                 ; 0000 0018 {
                 _init_buferU1:
                 ; .FSTART _init_buferU1
                 ;//запрещаем инверсию
                 ;
                 ;U1ne_invert.control=0x02;
00152a e0e2      	LDI  R30,LOW(2)
00152b 93e0 36a1 	STS  _U1ne_invert,R30
                 ;U1ne_invert.data=0x00;
00152d e0e0      	LDI  R30,LOW(0)
                +
00152e 93e0 36a2+STS _U1ne_invert + ( 1 ) , R30
                 	__PUTB1MN _U1ne_invert,1
                 ;
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U1,
                 ;    (unsigned char *)&U1ne_invert,2,
                 ;    0, 0);
001530 940e 3942 	CALL SUBOPT_0x66
001532 e1e8      	LDI  R30,LOW(24)
001533 93ea      	ST   -Y,R30
001534 eae1      	LDI  R30,LOW(_U1ne_invert)
001535 e3f6      	LDI  R31,HIGH(_U1ne_invert)
001536 940e 3947 	CALL SUBOPT_0x67
001538 940e 3a13 	CALL SUBOPT_0x80
                 ;
                 ;//настройка входов выходов
                 ;U1io.control=0x03;
00153a 93e0 369f 	STS  _U1io,R30
                 ;U1io.io=0x32;   //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
00153c e3e2      	LDI  R30,LOW(50)
                +
00153d 93e0 36a0+STS _U1io + ( 1 ) , R30
                 	__PUTB1MN _U1io,1
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U1,
                 ;    (unsigned char *)&U1io,2,
                 ;    0, 0);
00153f 940e 3942 	CALL SUBOPT_0x66
001541 e1e8      	LDI  R30,LOW(24)
001542 93ea      	ST   -Y,R30
001543 e9ef      	LDI  R30,LOW(_U1io)
001544 e3f6      	LDI  R31,HIGH(_U1io)
001545 c088      	RJMP _0x2100027
                 ;}
                 ; .FEND
                 ;
                 ;//опрос буфера U1
                 ;void buferU1_opros(void)
                 ;{
                 _buferU1_opros:
                 ; .FSTART _buferU1_opros
                 ;U1in.control=0x00;
001546 e0e0      	LDI  R30,LOW(0)
001547 93e0 369b 	STS  _U1in,R30
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U1,
                 ;    (unsigned char *)&U1in.control,1,
                 ;    (unsigned char *)&U1in.input, 1);
001549 940e 3942 	CALL SUBOPT_0x66
00154b e1e8      	LDI  R30,LOW(24)
00154c 93ea      	ST   -Y,R30
00154d e9eb      	LDI  R30,LOW(_U1in)
00154e e3f6      	LDI  R31,HIGH(_U1in)
00154f 940e 395e 	CALL SUBOPT_0x6A
                +
001551 e9ec     +LDI R30 , LOW ( _U1in + ( 1 ) )
001552 e3f6     +LDI R31 , HIGH ( _U1in + ( 1 ) )
                 	__POINTW1MN _U1in,1
001553 93fa      	ST   -Y,R31
001554 93ea      	ST   -Y,R30
001555 e0a1      	LDI  R26,LOW(1)
001556 c080      	RJMP _0x2100026
                 ;//ответ храниться в U1in.input
                 ;}
                 ; .FEND
                 ;
                 ;//установка выходов буфера U1
                 ;//значение должно храниться в U1out.output
                 ;void buferU1_set(void)
                 ;{
                 _buferU1_set:
                 ; .FSTART _buferU1_set
                 ;U1out.control=0x01;
001557 e0e1      	LDI  R30,LOW(1)
001558 93e0 369d 	STS  _U1out,R30
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U1,
                 ;    (unsigned char *)&U1out,2,
                 ;    0, 0);
00155a 940e 3942 	CALL SUBOPT_0x66
00155c e1e8      	LDI  R30,LOW(24)
00155d 93ea      	ST   -Y,R30
00155e e9ed      	LDI  R30,LOW(_U1out)
00155f e3f6      	LDI  R31,HIGH(_U1out)
001560 c06d      	RJMP _0x2100027
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;//из буфера U2 мы читаем биты 7,3,4
                 ;//пишим биты 0,1,2,5,6
                 ;//настройка конфигурации =0x98
                 ;
                 ;//инициализация буфера U2
                 ;void init_buferU2 (void)
                 ;{
                 _init_buferU2:
                 ; .FSTART _init_buferU2
                 ;//запрещаем инверсию
                 ;U2ne_invert.control=0x02;
001561 e0e2      	LDI  R30,LOW(2)
001562 93e0 36a9 	STS  _U2ne_invert,R30
                 ;U2ne_invert.data=0x00;
001564 e0e0      	LDI  R30,LOW(0)
                +
001565 93e0 36aa+STS _U2ne_invert + ( 1 ) , R30
                 	__PUTB1MN _U2ne_invert,1
                 ;
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U2,
                 ;    (unsigned char *)&U2ne_invert,2,
                 ;    0, 0);
001567 940e 3942 	CALL SUBOPT_0x66
001569 e1e9      	LDI  R30,LOW(25)
00156a 93ea      	ST   -Y,R30
00156b eae9      	LDI  R30,LOW(_U2ne_invert)
00156c e3f6      	LDI  R31,HIGH(_U2ne_invert)
00156d 940e 3947 	CALL SUBOPT_0x67
00156f 940e 3a13 	CALL SUBOPT_0x80
                 ;
                 ;//настройка входов выходов
                 ;U2io.control=0x03;
001571 93e0 36a7 	STS  _U2io,R30
                 ;U2io.io=0x98;
001573 e9e8      	LDI  R30,LOW(152)
                +
001574 93e0 36a8+STS _U2io + ( 1 ) , R30
                 	__PUTB1MN _U2io,1
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U2,
                 ;    (unsigned char *)&U2io,2,
                 ;    0, 0);
001576 940e 3942 	CALL SUBOPT_0x66
001578 e1e9      	LDI  R30,LOW(25)
001579 93ea      	ST   -Y,R30
00157a eae7      	LDI  R30,LOW(_U2io)
00157b e3f6      	LDI  R31,HIGH(_U2io)
00157c c051      	RJMP _0x2100027
                 ;}
                 ; .FEND
                 ;
                 ;//опрос буфера U2
                 ;void buferU2_opros(void)
                 ;{
                 _buferU2_opros:
                 ; .FSTART _buferU2_opros
                 ;U2in.control=0x00;
00157d e0e0      	LDI  R30,LOW(0)
00157e 93e0 36a3 	STS  _U2in,R30
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U2,
                 ;    (unsigned char *)&U2in.control,1,
                 ;    (unsigned char *)&U2in.input, 1);
001580 940e 3942 	CALL SUBOPT_0x66
001582 e1e9      	LDI  R30,LOW(25)
001583 93ea      	ST   -Y,R30
001584 eae3      	LDI  R30,LOW(_U2in)
001585 e3f6      	LDI  R31,HIGH(_U2in)
001586 940e 395e 	CALL SUBOPT_0x6A
                +
001588 eae4     +LDI R30 , LOW ( _U2in + ( 1 ) )
001589 e3f6     +LDI R31 , HIGH ( _U2in + ( 1 ) )
                 	__POINTW1MN _U2in,1
00158a 93fa      	ST   -Y,R31
00158b 93ea      	ST   -Y,R30
00158c e0a1      	LDI  R26,LOW(1)
00158d c049      	RJMP _0x2100026
                 ;//ответ храниться в U2in.input
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;
                 ;//установка выходов буфера U2
                 ;//значение должно храниться в U2out.output
                 ;void buferU2_set(void)
                 ;{
                 _buferU2_set:
                 ; .FSTART _buferU2_set
                 ;U2out.control=0x01;
00158e e0e1      	LDI  R30,LOW(1)
00158f 93e0 36a5 	STS  _U2out,R30
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U2,
                 ;    (unsigned char *)&U2out,2,
                 ;    0, 0);
001591 940e 3942 	CALL SUBOPT_0x66
001593 e1e9      	LDI  R30,LOW(25)
001594 93ea      	ST   -Y,R30
001595 eae5      	LDI  R30,LOW(_U2out)
001596 e3f6      	LDI  R31,HIGH(_U2out)
001597 c036      	RJMP _0x2100027
                 ;}
                 ; .FEND
                 ;
                 ;///////////////////2222222222222222222222222222222222222222222222222222//////////////////////////////
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;///////////////////333333333333333333333333333333333333333333333333333//////////////////////////////////
                 ;
                 ;
                 ;//из буфера U3 мы читаем биты 6
                 ;//пишим биты 0,1,2,3,4,5,7
                 ;//настройка конфигурации =0x40
                 ;
                 ;//инициализация буфера U3
                 ;void init_buferU3 (void)
                 ;{
                 _init_buferU3:
                 ; .FSTART _init_buferU3
                 ;//запрещаем инверсию
                 ;U3ne_invert.control=0x02;
001598 e0e2      	LDI  R30,LOW(2)
001599 93e0 36b1 	STS  _U3ne_invert,R30
                 ;U3ne_invert.data=0x00;
00159b e0e0      	LDI  R30,LOW(0)
                +
00159c 93e0 36b2+STS _U3ne_invert + ( 1 ) , R30
                 	__PUTB1MN _U3ne_invert,1
                 ;
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U3,
                 ;    (unsigned char *)&U3ne_invert,2,
                 ;    0, 0);
00159e 940e 3942 	CALL SUBOPT_0x66
0015a0 e1ea      	LDI  R30,LOW(26)
0015a1 93ea      	ST   -Y,R30
0015a2 ebe1      	LDI  R30,LOW(_U3ne_invert)
0015a3 e3f6      	LDI  R31,HIGH(_U3ne_invert)
0015a4 940e 3947 	CALL SUBOPT_0x67
0015a6 940e 3a13 	CALL SUBOPT_0x80
                 ;
                 ;//настройка входов выходов
                 ;U3io.control=0x03;
0015a8 93e0 36af 	STS  _U3io,R30
                 ;U3io.io=0x40;
0015aa e4e0      	LDI  R30,LOW(64)
                +
0015ab 93e0 36b0+STS _U3io + ( 1 ) , R30
                 	__PUTB1MN _U3io,1
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U3,
                 ;    (unsigned char *)&U3io,2,
                 ;    0, 0);
0015ad 940e 3942 	CALL SUBOPT_0x66
0015af e1ea      	LDI  R30,LOW(26)
0015b0 93ea      	ST   -Y,R30
0015b1 eaef      	LDI  R30,LOW(_U3io)
0015b2 e3f6      	LDI  R31,HIGH(_U3io)
0015b3 c01a      	RJMP _0x2100027
                 ;}
                 ; .FEND
                 ;
                 ;//опрос буфера U3
                 ;void buferU3_opros(void)
                 ;{
                 _buferU3_opros:
                 ; .FSTART _buferU3_opros
                 ;U3in.control=0x00;
0015b4 e0e0      	LDI  R30,LOW(0)
0015b5 93e0 36ab 	STS  _U3in,R30
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U3,
                 ;    (unsigned char *)&U3in.control,1,
                 ;    (unsigned char *)&U3in.input, 1);
0015b7 940e 3942 	CALL SUBOPT_0x66
0015b9 e1ea      	LDI  R30,LOW(26)
0015ba 93ea      	ST   -Y,R30
0015bb eaeb      	LDI  R30,LOW(_U3in)
0015bc e3f6      	LDI  R31,HIGH(_U3in)
0015bd 940e 395e 	CALL SUBOPT_0x6A
                +
0015bf eaec     +LDI R30 , LOW ( _U3in + ( 1 ) )
0015c0 e3f6     +LDI R31 , HIGH ( _U3in + ( 1 ) )
                 	__POINTW1MN _U3in,1
0015c1 93fa      	ST   -Y,R31
0015c2 93ea      	ST   -Y,R30
0015c3 e0a1      	LDI  R26,LOW(1)
0015c4 c012      	RJMP _0x2100026
                 ;//ответ храниться в U3in.input
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;
                 ;//установка выходов буфера U3
                 ;//значение должно храниться в U2out.output
                 ;void buferU3_set(void)
                 ;{
                 _buferU3_set:
                 ; .FSTART _buferU3_set
                 ;U3out.control=0x01;
0015c5 e0e1      	LDI  R30,LOW(1)
0015c6 93e0 36ad 	STS  _U3out,R30
                 ;twi_master_trans(
                 ;     &twie_master,
                 ;     PCA9557D_U3,
                 ;    (unsigned char *)&U3out,2,
                 ;    0, 0);
0015c8 940e 3942 	CALL SUBOPT_0x66
0015ca e1ea      	LDI  R30,LOW(26)
0015cb 93ea      	ST   -Y,R30
0015cc eaed      	LDI  R30,LOW(_U3out)
0015cd e3f6      	LDI  R31,HIGH(_U3out)
                 _0x2100027:
0015ce 93fa      	ST   -Y,R31
0015cf 93ea      	ST   -Y,R30
0015d0 e0e2      	LDI  R30,LOW(2)
0015d1 93ea      	ST   -Y,R30
0015d2 e0e0      	LDI  R30,LOW(0)
0015d3 e0f0      	LDI  R31,HIGH(0)
0015d4 93fa      	ST   -Y,R31
0015d5 93ea      	ST   -Y,R30
0015d6 e0a0      	LDI  R26,LOW(0)
                 _0x2100026:
0015d7 940e 3537 	CALL _twi_master_trans
                 ;}
0015d9 9508      	RET
                 ; .FEND
                 ;
                 ;///////////////////333333333333333333333333333333333333333333333333333333//////////////////////////////
                 ;#include "ad7705.c"
                 ;#include <io.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;#define Uop 1.6 //опорное напряжение
                 ;
                 ;unsigned char chan=1;   //default канал 1
                 
                 	.DSEG
                 ;
                 ;#define can1cl 0x20     //активный первый канал, след операция настройка частоты (byte1)
                 ;#define mclk4 0x0C      //0x0C для кварца 4,9М , 0x04 для (2,4M)             byte2
                 ;#define mclk2 0x04      //   byte2
                 ;#define can1set 0x10    //активный первый канал, след операция настройка ацп  byte3
                 ;#define set1 0x40       // gain = 1, bipolar mode,    byte4
                 ;//buffer off, clear FSYNC and perform a Self Calibration
                 ;#define set2 0x04       // gain = 1, unipolar mode,    byte4
                 ;//buffer off, normal mode
                 ;
                 ;#define can2cl 0x21  // активный второй канал, след операция настройка частоты (byte1)
                 ;#define can2set 0x11 //   активный воторой канал, след операция настройка ацп  byte3
                 ;
                 ;
                 ;
                 ;//ad7705_init(can1cl,mclk4,can1set,set1); например
                 ;
                 ;int RESULT;
                 ;int RESULT_buf;
                 ;long int RESULT_sr;
                 ;//измерений
                 ;char RESULT_count;
                 ;
                 ;
                 ;
                 ;
                 ;void ad7705_init (unsigned char by1,unsigned char by2,unsigned char by3, unsigned char by4)
                 ; 0000 0019 {
                 
                 	.CSEG
                 _ad7705_init:
                 ; .FSTART _ad7705_init
                 ;
                 ;//Выставляем сигнал CS в 0
                 ;PORTC.OUTCLR = 0b00010000;
0015da 93aa      	ST   -Y,R26
                 ;	by1 -> Y+3
                 ;	by2 -> Y+2
                 ;	by3 -> Y+1
                 ;	by4 -> Y+0
0015db e1e0      	LDI  R30,LOW(16)
0015dc 93e0 0646 	STS  1606,R30
                 ;//Отправляем по SPI четыре байта настройки
                 ;spic_master_tx_rx(by1);
0015de 81ab      	LDD  R26,Y+3
0015df db7c      	RCALL _spic_master_tx_rx
                 ;spic_master_tx_rx(by2);
0015e0 81aa      	LDD  R26,Y+2
0015e1 db7a      	RCALL _spic_master_tx_rx
                 ;spic_master_tx_rx(by3);
0015e2 81a9      	LDD  R26,Y+1
0015e3 db78      	RCALL _spic_master_tx_rx
                 ;spic_master_tx_rx(by4);
0015e4 81a8      	LD   R26,Y
0015e5 db76      	RCALL _spic_master_tx_rx
                 ;// Ждем пока DRDY не станет 0.
                 ;// Как только DRDY = 0, АЦП настроен.
                 ;// С этого момента DRDY будет меняться то в 1 то в 0.
                 ;
                 ;
                 ;while((PORTC.IN|0b11111101)==0b11111111);
                 _0x197:
0015e6 91e0 0648 	LDS  R30,1608
0015e8 6fed      	ORI  R30,LOW(0xFD)
0015e9 3fef      	CPI  R30,LOW(0xFF)
0015ea f3d9      	BREQ _0x197
                 ;// переводим CS в 1.
                 ;PORTC.OUTSET = 0b00010000;
0015eb e1e0      	LDI  R30,LOW(16)
0015ec 93e0 0645 	STS  1605,R30
                 ;}
0015ee 9624      	ADIW R28,4
0015ef 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;int ad7705 (unsigned char chanel)
                 ;{
                 _ad7705:
                 ; .FSTART _ad7705
                 ;unsigned int ti;
                 ;
                 ;
                 ;short data_h,data_l;
                 ;
                 ;//проверка активного канала
                 ;if ((chanel!=chan)&&(chanel==1||chanel==2))
0015f0 93aa      	ST   -Y,R26
0015f1 940e 42e4 	CALL __SAVELOCR6
                 ;	chanel -> Y+6
                 ;	ti -> R16,R17
                 ;	data_h -> R18,R19
                 ;	data_l -> R20,R21
0015f3 91e0 36b3 	LDS  R30,_chan
0015f5 81ae      	LDD  R26,Y+6
0015f6 17ea      	CP   R30,R26
0015f7 f029      	BREQ _0x19B
0015f8 30a1      	CPI  R26,LOW(0x1)
0015f9 f011      	BREQ _0x19C
0015fa 30a2      	CPI  R26,LOW(0x2)
0015fb f409      	BRNE _0x19B
                 _0x19C:
0015fc c001      	RJMP _0x19E
                 _0x19B:
0015fd c010      	RJMP _0x19A
                 _0x19E:
                 ;{
                 ;//настройка каналов на биполярный режим
                 ;    if (chanel==1)  ad7705_init(can1cl,mclk4,can1set,set1);
0015fe 81ae      	LDD  R26,Y+6
0015ff 30a1      	CPI  R26,LOW(0x1)
001600 f411      	BRNE _0x19F
001601 940e 3a1c 	CALL SUBOPT_0x81
                 ;    if (chanel==2)  ad7705_init(can2cl,mclk4,can2set,set1);
                 _0x19F:
001603 81ae      	LDD  R26,Y+6
001604 30a2      	CPI  R26,LOW(0x2)
001605 f441      	BRNE _0x1A0
001606 e2e1      	LDI  R30,LOW(33)
001607 93ea      	ST   -Y,R30
001608 e0ec      	LDI  R30,LOW(12)
001609 93ea      	ST   -Y,R30
00160a e1e1      	LDI  R30,LOW(17)
00160b 93ea      	ST   -Y,R30
00160c e4a0      	LDI  R26,LOW(64)
00160d dfcc      	RCALL _ad7705_init
                 ;
                 ;}
                 _0x1A0:
                 ;
                 ;//глобальная
                 ;chan=chanel;
                 _0x19A:
00160e 81ee      	LDD  R30,Y+6
00160f 93e0 36b3 	STS  _chan,R30
                 ;
                 ;//for (ti=0;ti<50000;ti++)
                 ;//if((PORTC.IN|0b11111101)==0b11111111) delay_us(1);
                 ;//else ti=60000;
                 ;
                 ;//if(ti==60000)
                 ;//{
                 ;KALC_PULS=0;
001611 2488      	CLR  R8
001612 2499      	CLR  R9
                 ;while(((PORTC.IN|0b11111101)==0b11111111)&&(KALC_PULS<20000)) {KALC_PULS++;delay_us(1);}
                 _0x1A1:
001613 91e0 0648 	LDS  R30,1608
001615 6fed      	ORI  R30,LOW(0xFD)
001616 3fef      	CPI  R30,LOW(0xFF)
001617 f429      	BRNE _0x1A4
001618 e2e0      	LDI  R30,LOW(20000)
001619 e4fe      	LDI  R31,HIGH(20000)
00161a 168e      	CP   R8,R30
00161b 069f      	CPC  R9,R31
00161c f008      	BRLO _0x1A5
                 _0x1A4:
00161d c007      	RJMP _0x1A3
                 _0x1A5:
00161e 01f4      	MOVW R30,R8
00161f 9631      	ADIW R30,1
001620 014f      	MOVW R8,R30
                +
001621 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
001622 958a     +DEC R24
001623 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
001624 cfee      	RJMP _0x1A1
                 _0x1A3:
                 ;//Выставляем сигнал CS в 0
                 ;if(KALC_PULS==20000)
001625 e2e0      	LDI  R30,LOW(20000)
001626 e4fe      	LDI  R31,HIGH(20000)
001627 15e8      	CP   R30,R8
001628 05f9      	CPC  R31,R9
001629 f419      	BRNE _0x1A6
                 ;{
                 ;//PORTC.OUTCLR = 0b00010000;
                 ;//delay_us(10);
                 ;//запрос
                 ;//spic_master_tx_rx(0x38);
                 ;//ответ
                 ;//data_h=spic_master_tx_rx(0xFF);
                 ;//data_l=spic_master_tx_rx(0xFF);
                 ;//Выставляем сигнал CS в 1
                 ;//PORTC.OUTSET = 0b00010000;
                 ;//Ответ длинною 16 бит
                 ;//if (chanel==1)  ad7705_init(can1cl,mclk4,can1set,set1);
                 ;//if (chanel==2)  ad7705_init(can2cl,mclk4,can2set,set1);
                 ;//while((PORTC.IN|0b11111101)==0b11111111);
                 ;return(0x03FF);
00162a efef      	LDI  R30,LOW(1023)
00162b e0f3      	LDI  R31,HIGH(1023)
00162c c017      	RJMP _0x2100025
                 ;}
                 ;
                 ;else
                 _0x1A6:
                 ;{
                 ;PORTC.OUTCLR = 0b00010000;
00162d e1e0      	LDI  R30,LOW(16)
00162e 93e0 0646 	STS  1606,R30
                 ;
                 ;delay_us(10);
                +
001630 e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
001631 958a     +DEC R24
001632 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
                 ;//запрос
                 ;spic_master_tx_rx(0x38);
001633 e3a8      	LDI  R26,LOW(56)
001634 db27      	RCALL _spic_master_tx_rx
                 ;//ответ
                 ;data_h=spic_master_tx_rx(0xFF);
001635 efaf      	LDI  R26,LOW(255)
001636 db25      	RCALL _spic_master_tx_rx
001637 2f2e      	MOV  R18,R30
001638 2733      	CLR  R19
                 ;data_l=spic_master_tx_rx(0xFF);
001639 efaf      	LDI  R26,LOW(255)
00163a db21      	RCALL _spic_master_tx_rx
00163b 2f4e      	MOV  R20,R30
00163c 2755      	CLR  R21
                 ;//Выставляем сигнал CS в 1
                 ;PORTC.OUTSET = 0b00010000;
00163d e1e0      	LDI  R30,LOW(16)
00163e 93e0 0645 	STS  1605,R30
                 ;//Ответ длинною 16 бит
                 ;
                 ;return(data_h<<8|data_l);
001640 2ff2      	MOV  R31,R18
001641 e0e0      	LDI  R30,LOW(0)
001642 2be4      	OR   R30,R20
001643 2bf5      	OR   R31,R21
                 ;//return((data_h*256+data_l)*Uop/32768.0);
                 ;//}
                 ;//else return(0xFF<<8|0xFF);
                 ;}
                 ;
                 ;}
                 _0x2100025:
001644 940e 42eb 	CALL __LOADLOCR6
001646 9627      	ADIW R28,7
001647 9508      	RET
                 ; .FEND
                 ;#include "ISR.c"
                 ;//функция создания нового файла
                 ;//анализ даты для нового файла в суточках
                 ;void GETFILNAME (void)
                 ; 0000 001A {
                 _GETFILNAME:
                 ; .FSTART _GETFILNAME
                 ;char po;
                 ;char da=0;
                 ;char newfNAME[15];
                 ;sprintf(newfNAME,"0:/%ld.bin",date1);
001648 972f      	SBIW R28,15
001649 931a      	ST   -Y,R17
00164a 930a      	ST   -Y,R16
                 ;	po -> R17
                 ;	da -> R16
                 ;	newfNAME -> Y+2
00164b e000      	LDI  R16,0
00164c 01fe      	MOVW R30,R28
00164d 9632      	ADIW R30,2
00164e 940e 3a25 	CALL SUBOPT_0x82
                 ;for(po=0;po<11;po++)
001650 e010      	LDI  R17,LOW(0)
                 _0x1A9:
001651 301b      	CPI  R17,11
001652 f470      	BRSH _0x1AA
                 ;if(newfNAME[po]!=fNAME[po]) {da=1;po=12;}
001653 940e 3a3a 	CALL SUBOPT_0x83
001655 91ac      	LD   R26,X
001656 2fe1      	MOV  R30,R17
001657 e0f0      	LDI  R31,0
001658 5fec      	SUBI R30,LOW(-_fNAME)
001659 4cff      	SBCI R31,HIGH(-_fNAME)
00165a 81e0      	LD   R30,Z
00165b 17ea      	CP   R30,R26
00165c f011      	BREQ _0x1AB
00165d e001      	LDI  R16,LOW(1)
00165e e01c      	LDI  R17,LOW(12)
                 ;
                 ;if (da)
                 _0x1AB:
00165f 5f1f      	SUBI R17,-1
001660 cff0      	RJMP _0x1A9
                 _0x1AA:
001661 3000      	CPI  R16,0
001662 f0f9      	BREQ _0x1AC
                 ;{
                 ;for(po=0;po<15;po++)
001663 e010      	LDI  R17,LOW(0)
                 _0x1AE:
001664 301f      	CPI  R17,15
001665 f460      	BRSH _0x1AF
                 ;fNAME[po]=newfNAME[po];
001666 2fe1      	MOV  R30,R17
001667 e0f0      	LDI  R31,0
001668 5fec      	SUBI R30,LOW(-_fNAME)
001669 4cff      	SBCI R31,HIGH(-_fNAME)
00166a 010f      	MOVW R0,R30
00166b 940e 3a3a 	CALL SUBOPT_0x83
00166d 91ec      	LD   R30,X
00166e 01d0      	MOVW R26,R0
00166f 93ec      	ST   X,R30
001670 5f1f      	SUBI R17,-1
001671 cff2      	RJMP _0x1AE
                 _0x1AF:
001672 940e 3a41 	CALL SUBOPT_0x84
001674 e0a3      	LDI  R26,LOW(3)
001675 940e 3a4a 	CALL SUBOPT_0x85
001677 30e0      	CPI  R30,0
001678 f029      	BREQ _0x228
                 ;else
                 ;{
                 ;res = f_open(&file,fNAME,FA_CREATE_ALWAYS | FA_WRITE);
001679 940e 3a41 	CALL SUBOPT_0x84
00167b e0aa      	LDI  R26,LOW(10)
00167c 940e 3a4a 	CALL SUBOPT_0x85
                 ;res=f_close(&file);
                 _0x228:
00167e e9a7      	LDI  R26,LOW(_file)
00167f e3b3      	LDI  R27,HIGH(_file)
001680 940e 3a4f 	CALL SUBOPT_0x86
                 ;}
                 ;}
                 ;else ;
                 _0x1AC:
                 ;
                 ;}
001682 8119      	LDD  R17,Y+1
001683 8108      	LDD  R16,Y+0
001684 9661      	ADIW R28,17
001685 9508      	RET
                 ; .FEND
                 ;
                 ;void bufform (void)
                 ;{
                 _bufform:
                 ; .FSTART _bufform
                 ;char i;
                 ;char tim[6];
                 ;char potok[36];
                 ;//время
                 ;sprintf(tim,"%6ld",time1);
001686 97aa      	SBIW R28,42
001687 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	tim -> Y+37
                 ;	potok -> Y+1
001688 01fe      	MOVW R30,R28
001689 96b5      	ADIW R30,37
00168a 93fa      	ST   -Y,R31
00168b 93ea      	ST   -Y,R30
                +
00168c ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 230 ) )
00168d e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 230 ) )
                 	__POINTW1FN _0x0,230
00168e 93fa      	ST   -Y,R31
00168f 93ea      	ST   -Y,R30
001690 940e 38e3 	CALL SUBOPT_0x5B
001692 940e 426c 	CALL __PUTPARD1
001694 e084      	LDI  R24,4
001695 940e 3312 	CALL _sprintf
001697 9628      	ADIW R28,8
                 ;//////начало маркер
                 ;potok[0]=0xF4;
001698 efe4      	LDI  R30,LOW(244)
001699 83e9      	STD  Y+1,R30
                 ;
                 ;for(i=1;i<7;i++)
00169a e011      	LDI  R17,LOW(1)
                 _0x1B4:
00169b 3017      	CPI  R17,7
00169c f488      	BRSH _0x1B5
                 ;potok[i]=tim[i-1];
00169d 940e 3a54 	CALL SUBOPT_0x87
00169f 0fea      	ADD  R30,R26
0016a0 1ffb      	ADC  R31,R27
0016a1 010f      	MOVW R0,R30
0016a2 2fe1      	MOV  R30,R17
0016a3 e0f0      	LDI  R31,0
0016a4 9731      	SBIW R30,1
0016a5 01de      	MOVW R26,R28
0016a6 9695      	ADIW R26,37
0016a7 0fae      	ADD  R26,R30
0016a8 1fbf      	ADC  R27,R31
0016a9 91ec      	LD   R30,X
0016aa 01d0      	MOVW R26,R0
0016ab 93ec      	ST   X,R30
0016ac 5f1f      	SUBI R17,-1
0016ad cfed      	RJMP _0x1B4
                 _0x1B5:
0016ae eae5      	LDI  R30,LOW(165)
0016af 87e8      	STD  Y+8,R30
                 ;
                 ;potok[8]=potok1[8];
                +
0016b0 91e0 301b+LDS R30 , _potok1 + ( 8 )
                 	__GETB1MN _potok1,8
0016b2 87e9      	STD  Y+9,R30
                 ;potok[9]=potok1[9];
                +
0016b3 91e0 301c+LDS R30 , _potok1 + ( 9 )
                 	__GETB1MN _potok1,9
0016b5 87ea      	STD  Y+10,R30
                 ;potok[10]=potok1[10];
                +
0016b6 91e0 301d+LDS R30 , _potok1 + ( 10 )
                 	__GETB1MN _potok1,10
0016b8 87eb      	STD  Y+11,R30
                 ;potok[11]=potok1[11];
                +
0016b9 91e0 301e+LDS R30 , _potok1 + ( 11 )
                 	__GETB1MN _potok1,11
0016bb 87ec      	STD  Y+12,R30
                 ;potok[12]=potok1[12];
                +
0016bc 91e0 301f+LDS R30 , _potok1 + ( 12 )
                 	__GETB1MN _potok1,12
0016be 87ed      	STD  Y+13,R30
                 ;potok[13]=potok1[13];
                +
0016bf 91e0 3020+LDS R30 , _potok1 + ( 13 )
                 	__GETB1MN _potok1,13
0016c1 87ee      	STD  Y+14,R30
                 ;potok[14]=potok1[14];
                +
0016c2 91e0 3021+LDS R30 , _potok1 + ( 14 )
                 	__GETB1MN _potok1,14
0016c4 87ef      	STD  Y+15,R30
                 ;potok[15]=potok1[15];
                +
0016c5 91e0 3022+LDS R30 , _potok1 + ( 15 )
                 	__GETB1MN _potok1,15
0016c7 8be8      	STD  Y+16,R30
                 ;potok[16]=potok1[16];
                +
0016c8 91e0 3023+LDS R30 , _potok1 + ( 16 )
                 	__GETB1MN _potok1,16
0016ca 8be9      	STD  Y+17,R30
                 ;potok[17]=potok1[17];
                +
0016cb 91e0 3024+LDS R30 , _potok1 + ( 17 )
                 	__GETB1MN _potok1,17
0016cd 8bea      	STD  Y+18,R30
                 ;potok[18]=S0[11];
                +
0016ce 91e0 311f+LDS R30 , _S0 + ( 11 )
                 	__GETB1MN _S0,11
0016d0 8beb      	STD  Y+19,R30
                 ;potok[19]=S0[12];
                +
0016d1 91e0 3120+LDS R30 , _S0 + ( 12 )
                 	__GETB1MN _S0,12
0016d3 8bec      	STD  Y+20,R30
                 ;potok[20]=potok1[20];
                +
0016d4 91e0 3027+LDS R30 , _potok1 + ( 20 )
                 	__GETB1MN _potok1,20
0016d6 8bed      	STD  Y+21,R30
                 ;potok[21]=potok1[21];
                +
0016d7 91e0 3028+LDS R30 , _potok1 + ( 21 )
                 	__GETB1MN _potok1,21
0016d9 8bee      	STD  Y+22,R30
                 ;potok[22]=S0[15];
                +
0016da 91e0 3123+LDS R30 , _S0 + ( 15 )
                 	__GETB1MN _S0,15
0016dc 8bef      	STD  Y+23,R30
                 ;potok[23]=S0[16];
                +
0016dd 91e0 3124+LDS R30 , _S0 + ( 16 )
                 	__GETB1MN _S0,16
0016df 8fe8      	STD  Y+24,R30
                 ;potok[24]=potok1[24];
                +
0016e0 91e0 302b+LDS R30 , _potok1 + ( 24 )
                 	__GETB1MN _potok1,24
0016e2 8fe9      	STD  Y+25,R30
                 ;potok[25]=potok1[25];
                +
0016e3 91e0 302c+LDS R30 , _potok1 + ( 25 )
                 	__GETB1MN _potok1,25
0016e5 8fea      	STD  Y+26,R30
                 ;potok[26]=potok1[26];
                +
0016e6 91e0 302d+LDS R30 , _potok1 + ( 26 )
                 	__GETB1MN _potok1,26
0016e8 8feb      	STD  Y+27,R30
                 ;potok[27]=potok1[27];
                +
0016e9 91e0 302e+LDS R30 , _potok1 + ( 27 )
                 	__GETB1MN _potok1,27
0016eb 8fec      	STD  Y+28,R30
                 ;potok[28]=S0[21];
                +
0016ec 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
0016ee 8fed      	STD  Y+29,R30
                 ;potok[29]=S0[22];
                +
0016ef 91e0 312a+LDS R30 , _S0 + ( 22 )
                 	__GETB1MN _S0,22
0016f1 8fee      	STD  Y+30,R30
                 ;potok[30]=0xB5;
0016f2 ebe5      	LDI  R30,LOW(181)
0016f3 8fef      	STD  Y+31,R30
                 ;
                 ;for(i=31;i<31+4;i++)
0016f4 e11f      	LDI  R17,LOW(31)
                 _0x1B7:
0016f5 3213      	CPI  R17,35
0016f6 f468      	BRSH _0x1B8
                 ;{
                 ;potok[i]=B5buf[i-31];
0016f7 940e 3a54 	CALL SUBOPT_0x87
0016f9 0fae      	ADD  R26,R30
0016fa 1fbf      	ADC  R27,R31
0016fb 2fe1      	MOV  R30,R17
0016fc e0f0      	LDI  R31,0
0016fd 977f      	SBIW R30,31
0016fe 5be5      	SUBI R30,LOW(-_B5buf)
0016ff 4cfe      	SBCI R31,HIGH(-_B5buf)
001700 81e0      	LD   R30,Z
001701 93ec      	ST   X,R30
                 ;}
001702 5f1f      	SUBI R17,-1
001703 cff1      	RJMP _0x1B7
                 _0x1B8:
                 ;
                 ;
                 ;potok[35]=0xF8;
001704 efe8      	LDI  R30,LOW(248)
001705 a3ec      	STD  Y+36,R30
                 ;memset(B5buf,0,4);
001706 e4eb      	LDI  R30,LOW(_B5buf)
001707 e3f1      	LDI  R31,HIGH(_B5buf)
001708 940e 393d 	CALL SUBOPT_0x65
00170a e0a4      	LDI  R26,LOW(4)
00170b e0b0      	LDI  R27,0
00170c 940e 3377 	CALL _memset
                 ;for(i=0;i<36;i++)
00170e e010      	LDI  R17,LOW(0)
                 _0x1BA:
00170f 3214      	CPI  R17,36
001710 f470      	BRSH _0x1BB
                 ;{
                 ;buffer[i]=potok[i];
001711 2fe1      	MOV  R30,R17
001712 e0f0      	LDI  R31,0
001713 53ec      	SUBI R30,LOW(-_buffer)
001714 4cfa      	SBCI R31,HIGH(-_buffer)
001715 010f      	MOVW R0,R30
001716 940e 3a54 	CALL SUBOPT_0x87
001718 0fae      	ADD  R26,R30
001719 1fbf      	ADC  R27,R31
00171a 91ec      	LD   R30,X
00171b 01d0      	MOVW R26,R0
00171c 93ec      	ST   X,R30
                 ;}
00171d 5f1f      	SUBI R17,-1
00171e cff0      	RJMP _0x1BA
                 _0x1BB:
                 ;
                 ;}
00171f 8118      	LDD  R17,Y+0
001720 96ab      	ADIW R28,43
001721 9508      	RET
                 ; .FEND
                 ;
                 ;void check_sd_card (void)
                 ;{
                 _check_sd_card:
                 ; .FSTART _check_sd_card
                 ;
                 ;if ((res=f_mount(0,&fat))==FR_OK)
001722 e0e0      	LDI  R30,LOW(0)
001723 93ea      	ST   -Y,R30
001724 e6a5      	LDI  R26,LOW(_fat)
001725 e3b1      	LDI  R27,HIGH(_fat)
001726 940e 2a95 	CALL _f_mount
001728 93e0 3162 	STS  _res,R30
00172a 30e0      	CPI  R30,0
00172b f449      	BRNE _0x1BC
                 ;
                 ;{
                 ;sprintf(info,"Logical drive 0: mounted OK\r\n",);
00172c 940e 3928 	CALL SUBOPT_0x62
                +
00172e ece9     +LDI R30 , LOW ( 2 * _0x0 + ( 235 ) )
00172f e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 235 ) )
                 	__POINTW1FN _0x0,235
001730 940e 3a59 	CALL SUBOPT_0x88
                 ;monitor();
001732 940e 3a60 	CALL SUBOPT_0x89
                 ;delay_ms(100);
                 ;}
                 ;
                 ;else
001734 c002      	RJMP _0x1BD
                 _0x1BC:
                 ;  error(res);
001735 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;if ((res=f_open(&file,path,FA_CREATE_ALWAYS | FA_WRITE))==FR_OK)
                 _0x1BD:
001737 940e 3a6a 	CALL SUBOPT_0x8B
001739 ebe7      	LDI  R30,LOW(_path)
00173a e3f5      	LDI  R31,HIGH(_path)
00173b 93fa      	ST   -Y,R31
00173c 93ea      	ST   -Y,R30
00173d e0aa      	LDI  R26,LOW(10)
00173e 940e 3a4a 	CALL SUBOPT_0x85
001740 30e0      	CPI  R30,0
001741 f451      	BRNE _0x1BE
                 ;   {
                 ;   sprintf(info,"File %s created OK\r\n",path);
001742 940e 3928 	CALL SUBOPT_0x62
                +
001744 eee7     +LDI R30 , LOW ( 2 * _0x0 + ( 265 ) )
001745 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 265 ) )
                 	__POINTW1FN _0x0,265
001746 940e 3a6f 	CALL SUBOPT_0x8C
                 ;   monitor();
                 ;   SD_IN=1;
001748 e0e1      	LDI  R30,LOW(1)
001749 93e0 35c3 	STS  _SD_IN,R30
                 ;   }
                 ;else
00174b c007      	RJMP _0x1BF
                 _0x1BE:
                 ;   {
                 ;   error(res);
00174c 940e 3a66 	CALL SUBOPT_0x8A
                 ;   SD_IN=0;
00174e e0e0      	LDI  R30,LOW(0)
00174f 93e0 35c3 	STS  _SD_IN,R30
                 ;   TCF0.INTCTRLA=TC_ERRINTLVL_OFF_gc | TC_OVFINTLVL_OFF_gc;
001751 93e0 0b06 	STS  2822,R30
                 ;   }
                 _0x1BF:
                 ;
                 ;
                 ;if (SD_IN==1)
001753 91a0 35c3 	LDS  R26,_SD_IN
001755 30a1      	CPI  R26,LOW(0x1)
001756 f009      	BREQ PC+2
001757 c0a5      	RJMP _0x1C0
                 ;{
                 ;sprintf(SD,"this is test",);
001758 eee8      	LDI  R30,LOW(_SD)
001759 e3f5      	LDI  R31,HIGH(_SD)
00175a 93fa      	ST   -Y,R31
00175b 93ea      	ST   -Y,R30
                +
00175c efec     +LDI R30 , LOW ( 2 * _0x0 + ( 286 ) )
00175d e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 286 ) )
                 	__POINTW1FN _0x0,286
00175e 940e 3a59 	CALL SUBOPT_0x88
                 ;SD[13]=0x0D;
001760 e0ed      	LDI  R30,LOW(13)
                +
001761 93e0 35f5+STS _SD + ( 13 ) , R30
                 	__PUTB1MN _SD,13
                 ;SD[14]=0x0A;
001763 e0ea      	LDI  R30,LOW(10)
                +
001764 93e0 35f6+STS _SD + ( 14 ) , R30
                 	__PUTB1MN _SD,14
                 ;
                 ;if ((res=f_write(&file,SD,sizeof(SD)-1,&nbytes))==FR_OK)
001766 940e 3a6a 	CALL SUBOPT_0x8B
001768 eee8      	LDI  R30,LOW(_SD)
001769 e3f5      	LDI  R31,HIGH(_SD)
00176a 940e 3a74 	CALL SUBOPT_0x8D
00176c f429      	BRNE _0x1C1
                 ; {
                 ;   sprintf(info,"%u bytes written of %u\r\n",nbytes,sizeof(SD)-1);
00176d 940e 3928 	CALL SUBOPT_0x62
00176f 940e 3a82 	CALL SUBOPT_0x8E
                 ;   monitor();
                 ;   }
                 ;else
001771 c002      	RJMP _0x1C2
                 _0x1C1:
                 ;   //
                 ;   error(res);
001772 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;sprintf(SD1,"file sd card",);
                 _0x1C2:
001774 efe7      	LDI  R30,LOW(_SD1)
001775 e3f5      	LDI  R31,HIGH(_SD1)
001776 93fa      	ST   -Y,R31
001777 93ea      	ST   -Y,R30
                +
001778 e2e2     +LDI R30 , LOW ( 2 * _0x0 + ( 324 ) )
001779 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 324 ) )
                 	__POINTW1FN _0x0,324
00177a 940e 3a59 	CALL SUBOPT_0x88
                 ;SD1[13]=0x0D;
00177c e0ed      	LDI  R30,LOW(13)
                +
00177d 93e0 3604+STS _SD1 + ( 13 ) , R30
                 	__PUTB1MN _SD1,13
                 ;SD1[14]=0x0A;
00177f e0ea      	LDI  R30,LOW(10)
                +
001780 93e0 3605+STS _SD1 + ( 14 ) , R30
                 	__PUTB1MN _SD1,14
                 ;
                 ;if ((res=f_write(&file,SD1,sizeof(SD1)-1,&nbytes))==FR_OK)
001782 940e 3a6a 	CALL SUBOPT_0x8B
001784 efe7      	LDI  R30,LOW(_SD1)
001785 e3f5      	LDI  R31,HIGH(_SD1)
001786 940e 3a74 	CALL SUBOPT_0x8D
001788 f429      	BRNE _0x1C3
                 ;   {
                 ;   sprintf(info,"%u bytes written of %u\r\n",nbytes,sizeof(SD1)-1);
001789 940e 3928 	CALL SUBOPT_0x62
00178b 940e 3a82 	CALL SUBOPT_0x8E
                 ;   monitor();
                 ;   }
                 ;else
00178d c002      	RJMP _0x1C4
                 _0x1C3:
                 ;
                 ;   error(res);
00178e 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;
                 ;
                 ;if ((res=f_close(&file))==FR_OK)
                 _0x1C4:
001790 940e 3a9a 	CALL SUBOPT_0x8F
001792 30e0      	CPI  R30,0
001793 f439      	BRNE _0x1C5
                 ;   {
                 ;   sprintf(info,"File %s closed OK\r\n",path);
001794 940e 3928 	CALL SUBOPT_0x62
                +
001796 e2ef     +LDI R30 , LOW ( 2 * _0x0 + ( 337 ) )
001797 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 337 ) )
                 	__POINTW1FN _0x0,337
001798 940e 3a6f 	CALL SUBOPT_0x8C
                 ;   monitor();
                 ;   }
                 ;else
00179a c002      	RJMP _0x1C6
                 _0x1C5:
                 ;   /* an error occured, display it and stop */
                 ;   error(res);
00179b 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;
                 ;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ...
                 ;
                 ;get_CNTRTC(&X);
                 _0x1C6:
00179d 940e 38ec 	CALL SUBOPT_0x5C
                 ;calcDateTime(X, 0, &date1,&time1);
                 ;sprintf(fNAME,"0:/%ld.bin",date1);
00179f e0e4      	LDI  R30,LOW(_fNAME)
0017a0 e3f0      	LDI  R31,HIGH(_fNAME)
0017a1 940e 3a25 	CALL SUBOPT_0x82
                 ;
                 ;
                 ;bufform();
0017a3 dee2      	RCALL _bufform
                 ;
                 ;if ((res=f_open(&file,fNAME,FA_READ)==FR_OK))
0017a4 940e 3a41 	CALL SUBOPT_0x84
0017a6 e0a1      	LDI  R26,LOW(1)
0017a7 940e 2abf 	CALL _f_open
0017a9 e0a0      	LDI  R26,LOW(0)
0017aa 940e 416c 	CALL __EQB12
0017ac 93e0 3162 	STS  _res,R30
0017ae 30e0      	CPI  R30,0
0017af f049      	BREQ _0x1C7
                 ;{
                 ;sprintf(info,"File est yze");
0017b0 940e 3928 	CALL SUBOPT_0x62
                +
0017b2 e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 357 ) )
0017b3 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 357 ) )
                 	__POINTW1FN _0x0,357
0017b4 940e 3a59 	CALL SUBOPT_0x88
                 ;monitor();
0017b6 940e 0fe6 	CALL _monitor
                 ;}
                 ;else
0017b8 c033      	RJMP _0x1C8
                 _0x1C7:
                 ;{
                 ;   if ((res=f_open(&file,fNAME,FA_CREATE_ALWAYS | FA_WRITE))==FR_OK)
0017b9 940e 3a41 	CALL SUBOPT_0x84
0017bb e0aa      	LDI  R26,LOW(10)
0017bc 940e 3a4a 	CALL SUBOPT_0x85
0017be 30e0      	CPI  R30,0
0017bf f439      	BRNE _0x1C9
                 ;   {
                 ;   sprintf(info,"File %s created OK\r\n",fNAME);
0017c0 940e 3928 	CALL SUBOPT_0x62
                +
0017c2 eee7     +LDI R30 , LOW ( 2 * _0x0 + ( 265 ) )
0017c3 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 265 ) )
                 	__POINTW1FN _0x0,265
0017c4 940e 3a9d 	CALL SUBOPT_0x90
                 ;   monitor();
                 ;   }
                 ;else
0017c6 c002      	RJMP _0x1CA
                 _0x1C9:
                 ;      error(res);
0017c7 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;if ((res=f_write(&file,buffer,sizeof(buffer),&nbytes))==FR_OK)
                 _0x1CA:
0017c9 940e 3a6a 	CALL SUBOPT_0x8B
0017cb 940e 3aa2 	CALL SUBOPT_0x91
0017cd 30e0      	CPI  R30,0
0017ce f4d9      	BRNE _0x1CB
                 ;
                 ; {
                 ;   sprintf(info,"%u bytes written of %u\r\n",nbytes,sizeof(buffer)-1);
0017cf 940e 3928 	CALL SUBOPT_0x62
                +
0017d1 e0e9     +LDI R30 , LOW ( 2 * _0x0 + ( 299 ) )
0017d2 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 299 ) )
                 	__POINTW1FN _0x0,299
0017d3 93fa      	ST   -Y,R31
0017d4 93ea      	ST   -Y,R30
0017d5 91e0 3163 	LDS  R30,_nbytes
0017d7 91f0 3164 	LDS  R31,_nbytes+1
0017d9 2766      	CLR  R22
0017da 2777      	CLR  R23
0017db 940e 426c 	CALL __PUTPARD1
                +
0017dd e2e3     +LDI R30 , LOW ( 0x23 )
0017de e0f0     +LDI R31 , HIGH ( 0x23 )
0017df e060     +LDI R22 , BYTE3 ( 0x23 )
0017e0 e070     +LDI R23 , BYTE4 ( 0x23 )
                 	__GETD1N 0x23
0017e1 940e 426c 	CALL __PUTPARD1
0017e3 e088      	LDI  R24,8
0017e4 940e 3312 	CALL _sprintf
0017e6 962c      	ADIW R28,12
                 ;   monitor();
0017e7 940e 0fe6 	CALL _monitor
                 ;   }
                 ;else
0017e9 c002      	RJMP _0x1CC
                 _0x1CB:
                 ;    error(res);
0017ea 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;}
                 _0x1CC:
                 _0x1C8:
                 ;
                 ;/*зактрыть файл*/
                 ;if ((res=f_close(&file))==FR_OK)
0017ec 940e 3a9a 	CALL SUBOPT_0x8F
0017ee 30e0      	CPI  R30,0
0017ef f439      	BRNE _0x1CD
                 ;   {
                 ;   sprintf(info,"File %s closed OK\r\n",fNAME);
0017f0 940e 3928 	CALL SUBOPT_0x62
                +
0017f2 e2ef     +LDI R30 , LOW ( 2 * _0x0 + ( 337 ) )
0017f3 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 337 ) )
                 	__POINTW1FN _0x0,337
0017f4 940e 3a9d 	CALL SUBOPT_0x90
                 ;   monitor();
                 ;   }
                 ;else
0017f6 c002      	RJMP _0x1CE
                 _0x1CD:
                 ;
                 ;   error(res);
0017f7 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;delay_ms(100);
                 _0x1CE:
0017f9 e6a4      	LDI  R26,LOW(100)
0017fa e0b0      	LDI  R27,0
0017fb 940e 3f1b 	CALL _delay_ms
                 ;
                 ;
                 ;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ...
                 ;}
                 ;
                 ;PORTC.OUTSET=0b00010001;
                 _0x1C0:
0017fd e1e1      	LDI  R30,LOW(17)
0017fe 93e0 0645 	STS  1605,R30
                 ;}
001800 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;// Timer/counter TCC0 Overflow/Underflow interrupt service routine
                 ;interrupt [TCC0_OVF_vect] void tcc0_overflow_isr(void)
                 ;{
                 _tcc0_overflow_isr:
                 ; .FSTART _tcc0_overflow_isr
001801 940e 3841 	CALL SUBOPT_0x46
                 ;// write your code here
                 ;char qw,qi;
                 ;
                 ;if(send&&Mx==0xFF) {topk();delay_us(5);izm=0;}
001803 931a      	ST   -Y,R17
001804 930a      	ST   -Y,R16
                 ;	qw -> R17
                 ;	qi -> R16
001805 91e0 3149 	LDS  R30,_send
001807 30e0      	CPI  R30,0
001808 f021      	BREQ _0x1D0
001809 91a0 314a 	LDS  R26,_Mx
00180b 3faf      	CPI  R26,LOW(0xFF)
00180c f009      	BREQ _0x1D1
                 _0x1D0:
00180d c006      	RJMP _0x1CF
                 _0x1D1:
00180e 940e 039b 	CALL _topk
                +
001810 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
001811 958a     +DEC R24
001812 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
001813 2433      	CLR  R3
                 ;
                 ;
                 ;}
                 _0x1CF:
001814 9109      	LD   R16,Y+
001815 9119      	LD   R17,Y+
001816 c17b      	RJMP _0x238
                 ; .FEND
                 ;
                 ;// Timer/counter TCC1 Overflow/Underflow interrupt service routine
                 ;interrupt [TCC1_OVF_vect] void tcc1_overflow_isr(void)
                 ;{
                 _tcc1_overflow_isr:
                 ; .FSTART _tcc1_overflow_isr
001817 940e 3841 	CALL SUBOPT_0x46
                 ;
                 ;if(!izm)
001819 2033      	TST  R3
00181a f009      	BREQ PC+2
00181b c14b      	RJMP _0x1D2
                 ;{
                 ;izm=1;
00181c e0e1      	LDI  R30,LOW(1)
00181d 2e3e      	MOV  R3,R30
                 ;RESULT_buf=ad7705(1);
00181e e0a1      	LDI  R26,LOW(1)
00181f ddd0      	RCALL _ad7705
001820 93e0 36b6 	STS  _RESULT_buf,R30
001822 93f0 36b7 	STS  _RESULT_buf+1,R31
                 ;if(RESULT_buf<0) RESULT_buf=32768+RESULT_buf;
                 ;else RESULT_buf=-32768+RESULT_buf;
                 _0x229:
001824 91e0 36b6 	LDS  R30,_RESULT_buf
001826 91f0 36b7 	LDS  R31,_RESULT_buf+1
001828 50e0      	SUBI R30,LOW(-32768)
001829 48f0      	SBCI R31,HIGH(-32768)
00182a 93e0 36b6 	STS  _RESULT_buf,R30
00182c 93f0 36b7 	STS  _RESULT_buf+1,R31
                 ;RESULT_sr+=RESULT_buf;
00182e 940e 3ab1 	CALL SUBOPT_0x92
001830 940e 38d5 	CALL SUBOPT_0x59
001832 93e0 36b8 	STS  _RESULT_sr,R30
001834 93f0 36b9 	STS  _RESULT_sr+1,R31
001836 9360 36ba 	STS  _RESULT_sr+2,R22
001838 9370 36bb 	STS  _RESULT_sr+3,R23
                 ;S0[7]=RESULT_buf;// Сигнал  усилителя младший
00183a 91e0 36b6 	LDS  R30,_RESULT_buf
                +
00183c 93e0 311b+STS _S0 + ( 7 ) , R30
                 	__PUTB1MN _S0,7
                 ;S0[8]=(RESULT_buf>>8); //Сигнал  усилителя старший
00183e 91e0 36b6 	LDS  R30,_RESULT_buf
001840 91f0 36b7 	LDS  R31,_RESULT_buf+1
001842 940e 4141 	CALL __ASRW8
                +
001844 93e0 311c+STS _S0 + ( 8 ) , R30
                 	__PUTB1MN _S0,8
                 ;//4*2 АЦП
                 ;for (nn=0; nn<CHANNELS; nn++)
001846 e0e0      	LDI  R30,LOW(0)
001847 93e0 3055 	STS  _nn,R30
                 _0x1D6:
001849 91a0 3055 	LDS  R26,_nn
00184b 30a4      	CPI  R26,LOW(0x4)
00184c f008      	BRLO PC+2
00184d c03f      	RJMP _0x1D7
                 ;{
                 ;adca_store[nn]=adca_read(nn);
00184e 91e0 3055 	LDS  R30,_nn
001850 e5ae      	LDI  R26,LOW(_adca_store)
001851 e3b0      	LDI  R27,HIGH(_adca_store)
001852 940e 392d 	CALL SUBOPT_0x63
001854 93ff      	PUSH R31
001855 93ef      	PUSH R30
001856 91a0 3055 	LDS  R26,_nn
001858 940e 0332 	CALL _adca_read
00185a 91af      	POP  R26
00185b 91bf      	POP  R27
00185c 940e 3aba 	CALL SUBOPT_0x93
                 ;adca_SD[nn]+=adca_store[nn];
00185e e6ae      	LDI  R26,LOW(_adca_SD)
00185f e3b0      	LDI  R27,HIGH(_adca_SD)
001860 940e 392d 	CALL SUBOPT_0x63
001862 01bf      	MOVW R22,R30
001863 8000      	LD   R0,Z
001864 8011      	LDD  R1,Z+1
001865 91e0 3055 	LDS  R30,_nn
001867 e5ae      	LDI  R26,LOW(_adca_store)
001868 e3b0      	LDI  R27,HIGH(_adca_store)
001869 940e 3abf 	CALL SUBOPT_0x94
00186b 940e 3aba 	CALL SUBOPT_0x93
                 ;adcb_store[nn]=adcb_read(nn);
00186d e5a6      	LDI  R26,LOW(_adcb_store)
00186e e3b0      	LDI  R27,HIGH(_adcb_store)
00186f 940e 392d 	CALL SUBOPT_0x63
001871 93ff      	PUSH R31
001872 93ef      	PUSH R30
001873 91a0 3055 	LDS  R26,_nn
001875 940e 0382 	CALL _adcb_read
001877 91af      	POP  R26
001878 91bf      	POP  R27
001879 940e 3aba 	CALL SUBOPT_0x93
                 ;adcb_SD[nn]+=adcb_store[nn];
00187b e6a6      	LDI  R26,LOW(_adcb_SD)
00187c e3b0      	LDI  R27,HIGH(_adcb_SD)
00187d 940e 392d 	CALL SUBOPT_0x63
00187f 01bf      	MOVW R22,R30
001880 8000      	LD   R0,Z
001881 8011      	LDD  R1,Z+1
001882 91e0 3055 	LDS  R30,_nn
001884 e5a6      	LDI  R26,LOW(_adcb_store)
001885 e3b0      	LDI  R27,HIGH(_adcb_store)
001886 940e 3abf 	CALL SUBOPT_0x94
001888 93ed      	ST   X+,R30
001889 93fc      	ST   X,R31
                 ;}
00188a 940e 3aca 	CALL SUBOPT_0x95
00188c cfbc      	RJMP _0x1D6
                 _0x1D7:
                 ;
                 ;
                 ;S0[1]=adcb_store[0];//adc0 b0 мл ток ФЭУ
00188d 91e0 3056 	LDS  R30,_adcb_store
                +
00188f 93e0 3115+STS _S0 + ( 1 ) , R30
                 	__PUTB1MN _S0,1
                 ;S0[2]=adcb_store[0]>>8;// ст
001891 91e0 3057 	LDS  R30,_adcb_store+1
                +
001893 93e0 3116+STS _S0 + ( 2 ) , R30
                 	__PUTB1MN _S0,2
                 ;
                 ;S0[5]=adcb_store[1];//adc1 b1 мл напряжение фэу
                +
001895 91e0 3058+LDS R30 , _adcb_store + ( 2 )
                 	__GETB1MN _adcb_store,2
                +
001897 93e0 3119+STS _S0 + ( 5 ) , R30
                 	__PUTB1MN _S0,5
                 ;S0[6]=adcb_store[1]>>8;// ст
                +
001899 91e0 3059+LDS R30 , _adcb_store + ( 3 )
                 	__GETB1MN _adcb_store,3
                +
00189b 93e0 311a+STS _S0 + ( 6 ) , R30
                 	__PUTB1MN _S0,6
                 ;
                 ;S0[3]=adcb_store[2];//adc2 b2 мл расход помпы
                +
00189d 91e0 305a+LDS R30 , _adcb_store + ( 4 )
                 	__GETB1MN _adcb_store,4
                +
00189f 93e0 3117+STS _S0 + ( 3 ) , R30
                 	__PUTB1MN _S0,3
                 ;S0[4]=adcb_store[2]>>8;// ст
                +
0018a1 91e0 305b+LDS R30 , _adcb_store + ( 5 )
                 	__GETB1MN _adcb_store,5
                +
0018a3 93e0 3118+STS _S0 + ( 4 ) , R30
                 	__PUTB1MN _S0,4
                 ;
                 ;T_analog=(((adcb_store[3]-993)/19.85)+273)*10;
                +
0018a5 91e0 305c+LDS R30 , _adcb_store + ( 6 )
0018a7 91f0 305d+LDS R31 , _adcb_store + ( 6 ) + 1
                 	__GETW1MN _adcb_store,6
0018a9 940e 3ad0 	CALL SUBOPT_0x96
                 ;
                 ;S0[13]=T_analog;//adc3 b3 мл температура контрольн кюветы
                +
0018ab 9240 3121+STS _S0 + ( 13 ) , R4
                 	__PUTBMRN _S0,13,4
                 ;S0[14]=T_analog>>8;// ст
                +
0018ad 9250 3122+STS _S0 + ( 14 ) , R5
                 	__PUTBMRN _S0,14,5
                 ;
                 ;
                 ;S0[17]=adca_store[0];//adc4 a4 доп ацп
0018af 91e0 305e 	LDS  R30,_adca_store
                +
0018b1 93e0 3125+STS _S0 + ( 17 ) , R30
                 	__PUTB1MN _S0,17
                 ;S0[18]=adca_store[0]>>8;// ст
0018b3 91e0 305f 	LDS  R30,_adca_store+1
                +
0018b5 93e0 3126+STS _S0 + ( 18 ) , R30
                 	__PUTB1MN _S0,18
                 ;
                 ;S0[19]=adca_store[1];//adc5 a5 мл доп ацп
                +
0018b7 91e0 3060+LDS R30 , _adca_store + ( 2 )
                 	__GETB1MN _adca_store,2
                +
0018b9 93e0 3127+STS _S0 + ( 19 ) , R30
                 	__PUTB1MN _S0,19
                 ;S0[20]=adca_store[1]>>8;// ст
                +
0018bb 91e0 3061+LDS R30 , _adca_store + ( 3 )
                 	__GETB1MN _adca_store,3
                +
0018bd 93e0 3128+STS _S0 + ( 20 ) , R30
                 	__PUTB1MN _S0,20
                 ;
                 ;S0[9]=adca_store[2];//adc6 a6 мл доп ацп
                +
0018bf 91e0 3062+LDS R30 , _adca_store + ( 4 )
                 	__GETB1MN _adca_store,4
                +
0018c1 93e0 311d+STS _S0 + ( 9 ) , R30
                 	__PUTB1MN _S0,9
                 ;S0[10]=adca_store[2]>>8;// ст
                +
0018c3 91e0 3063+LDS R30 , _adca_store + ( 5 )
                 	__GETB1MN _adca_store,5
                +
0018c5 93e0 311e+STS _S0 + ( 10 ) , R30
                 	__PUTB1MN _S0,10
                 ;
                 ;if(SD_IN)
0018c7 91e0 35c3 	LDS  R30,_SD_IN
0018c9 30e0      	CPI  R30,0
0018ca f409      	BRNE PC+2
0018cb c09b      	RJMP _0x1D8
                 ;{
                 ;//подсчет для усреднения
                 ;RESULT_count++;
0018cc 91e0 36bc 	LDS  R30,_RESULT_count
0018ce 5fef      	SUBI R30,-LOW(1)
0018cf 93e0 36bc 	STS  _RESULT_count,R30
                 ;////////////////////////////////////////////////////////////////////////////////////////////////////
                 ;if(RESULT_count==16)    {
0018d1 91a0 36bc 	LDS  R26,_RESULT_count
0018d3 31a0      	CPI  R26,LOW(0x10)
0018d4 f009      	BREQ PC+2
0018d5 c091      	RJMP _0x1D9
                 ;                        RESULT=RESULT_sr/16;
0018d6 940e 3ab1 	CALL SUBOPT_0x92
                +
0018d8 e1e0     +LDI R30 , LOW ( 0x10 )
0018d9 e0f0     +LDI R31 , HIGH ( 0x10 )
0018da e060     +LDI R22 , BYTE3 ( 0x10 )
0018db e070     +LDI R23 , BYTE4 ( 0x10 )
                 	__GETD1N 0x10
0018dc 940e 41e7 	CALL __DIVD21
0018de 93e0 36b4 	STS  _RESULT,R30
0018e0 93f0 36b5 	STS  _RESULT+1,R31
                 ;                        RESULT_count=0;
0018e2 e0e0      	LDI  R30,LOW(0)
0018e3 93e0 36bc 	STS  _RESULT_count,R30
                 ;                        RESULT_sr=0;
0018e5 93e0 36b8 	STS  _RESULT_sr,R30
0018e7 93e0 36b9 	STS  _RESULT_sr+1,R30
0018e9 93e0 36ba 	STS  _RESULT_sr+2,R30
0018eb 93e0 36bb 	STS  _RESULT_sr+3,R30
                 ;                        potok1[14]=RESULT;// Сигнал  усилителя младший;
0018ed 91e0 36b4 	LDS  R30,_RESULT
                +
0018ef 93e0 3021+STS _potok1 + ( 14 ) , R30
                 	__PUTB1MN _potok1,14
                 ;                        potok1[15]=(RESULT>>8); //Сигнал  усилителя старший
0018f1 940e 3aee 	CALL SUBOPT_0x97
                +
0018f3 93e0 3022+STS _potok1 + ( 15 ) , R30
                 	__PUTB1MN _potok1,15
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;for (nn=0; nn<CHANNELS; nn++)
0018f5 e0e0      	LDI  R30,LOW(0)
0018f6 93e0 3055 	STS  _nn,R30
                 _0x1DB:
0018f8 91a0 3055 	LDS  R26,_nn
0018fa 30a4      	CPI  R26,LOW(0x4)
0018fb f4d8      	BRSH _0x1DC
                 ;{
                 ;adca_SD[nn]=adca_SD[nn]/16;
0018fc 940e 3af5 	CALL SUBOPT_0x98
0018fe 940e 392d 	CALL SUBOPT_0x63
001900 010f      	MOVW R0,R30
001901 940e 3af5 	CALL SUBOPT_0x98
001903 940e 3afa 	CALL SUBOPT_0x99
001905 940e 3aba 	CALL SUBOPT_0x93
                 ;adcb_SD[nn]=adcb_SD[nn]/16;
001907 e6a6      	LDI  R26,LOW(_adcb_SD)
001908 e3b0      	LDI  R27,HIGH(_adcb_SD)
001909 940e 392d 	CALL SUBOPT_0x63
00190b 010f      	MOVW R0,R30
00190c 91e0 3055 	LDS  R30,_nn
00190e e6a6      	LDI  R26,LOW(_adcb_SD)
00190f e3b0      	LDI  R27,HIGH(_adcb_SD)
001910 940e 3afa 	CALL SUBOPT_0x99
001912 93ed      	ST   X+,R30
001913 93fc      	ST   X,R31
                 ;}
001914 940e 3aca 	CALL SUBOPT_0x95
001916 cfe1      	RJMP _0x1DB
                 _0x1DC:
                 ;
                 ;
                 ;
                 ;potok1[8]=adcb_SD[0];//adc0 b0 мл ток ФЭУ
001917 91e0 3066 	LDS  R30,_adcb_SD
                +
001919 93e0 301b+STS _potok1 + ( 8 ) , R30
                 	__PUTB1MN _potok1,8
                 ;potok1[9]=adcb_SD[0]>>8;// ст
00191b 91e0 3067 	LDS  R30,_adcb_SD+1
                +
00191d 93e0 301c+STS _potok1 + ( 9 ) , R30
                 	__PUTB1MN _potok1,9
                 ;
                 ;potok1[12]=adcb_SD[1];//adc1 b1 мл напряжение фэу
                +
00191f 91e0 3068+LDS R30 , _adcb_SD + ( 2 )
                 	__GETB1MN _adcb_SD,2
                +
001921 93e0 301f+STS _potok1 + ( 12 ) , R30
                 	__PUTB1MN _potok1,12
                 ;potok1[13]=adcb_SD[1]>>8;// ст
                +
001923 91e0 3069+LDS R30 , _adcb_SD + ( 3 )
                 	__GETB1MN _adcb_SD,3
                +
001925 93e0 3020+STS _potok1 + ( 13 ) , R30
                 	__PUTB1MN _potok1,13
                 ;
                 ;potok1[10]=adcb_SD[2];//adc2 b2 мл расход помпы
                +
001927 91e0 306a+LDS R30 , _adcb_SD + ( 4 )
                 	__GETB1MN _adcb_SD,4
                +
001929 93e0 301d+STS _potok1 + ( 10 ) , R30
                 	__PUTB1MN _potok1,10
                 ;potok1[11]=adcb_SD[2]>>8;// ст
                +
00192b 91e0 306b+LDS R30 , _adcb_SD + ( 5 )
                 	__GETB1MN _adcb_SD,5
                +
00192d 93e0 301e+STS _potok1 + ( 11 ) , R30
                 	__PUTB1MN _potok1,11
                 ;
                 ;T_analog=(((adcb_SD[3]-993)/19.85)+273)*10;
                +
00192f 91e0 306c+LDS R30 , _adcb_SD + ( 6 )
001931 91f0 306d+LDS R31 , _adcb_SD + ( 6 ) + 1
                 	__GETW1MN _adcb_SD,6
001933 940e 3ad0 	CALL SUBOPT_0x96
                 ;
                 ;potok1[20]=T_analog;//adc3 b3 мл температура контрольн кюветы
                +
001935 9240 3027+STS _potok1 + ( 20 ) , R4
                 	__PUTBMRN _potok1,20,4
                 ;potok1[21]=T_analog>>8;// ст
                +
001937 9250 3028+STS _potok1 + ( 21 ) , R5
                 	__PUTBMRN _potok1,21,5
                 ;
                 ;//potok1[20]=adcb_SD[3];//adc3 b3 мл температура контрольн кюветы
                 ;//potok1[21]=adcb_SD[3]>>8;// ст
                 ;
                 ;potok1[24]=adca_SD[0];//adc4 a4 доп ацп
001939 91e0 306e 	LDS  R30,_adca_SD
                +
00193b 93e0 302b+STS _potok1 + ( 24 ) , R30
                 	__PUTB1MN _potok1,24
                 ;potok1[25]=adca_SD[0]>>8;// ст
00193d 91e0 306f 	LDS  R30,_adca_SD+1
                +
00193f 93e0 302c+STS _potok1 + ( 25 ) , R30
                 	__PUTB1MN _potok1,25
                 ;
                 ;potok1[26]=adca_SD[1];//adc5 a5 мл доп ацп
                +
001941 91e0 3070+LDS R30 , _adca_SD + ( 2 )
                 	__GETB1MN _adca_SD,2
                +
001943 93e0 302d+STS _potok1 + ( 26 ) , R30
                 	__PUTB1MN _potok1,26
                 ;potok1[27]=adca_SD[1]>>8;// ст
                +
001945 91e0 3071+LDS R30 , _adca_SD + ( 3 )
                 	__GETB1MN _adca_SD,3
                +
001947 93e0 302e+STS _potok1 + ( 27 ) , R30
                 	__PUTB1MN _potok1,27
                 ;
                 ;potok1[16]=adca_SD[2];//adc6 a6 мл доп ацп
                +
001949 91e0 3072+LDS R30 , _adca_SD + ( 4 )
                 	__GETB1MN _adca_SD,4
                +
00194b 93e0 3023+STS _potok1 + ( 16 ) , R30
                 	__PUTB1MN _potok1,16
                 ;potok1[17]=adca_SD[2]>>8;// ст
                +
00194d 91e0 3073+LDS R30 , _adca_SD + ( 5 )
                 	__GETB1MN _adca_SD,5
                +
00194f 93e0 3024+STS _potok1 + ( 17 ) , R30
                 	__PUTB1MN _potok1,17
                 ;
                 ;
                 ;for (nn=0; nn<CHANNELS; nn++)
001951 e0e0      	LDI  R30,LOW(0)
001952 93e0 3055 	STS  _nn,R30
                 _0x1DE:
001954 91a0 3055 	LDS  R26,_nn
001956 30a4      	CPI  R26,LOW(0x4)
001957 f478      	BRSH _0x1DF
                 ;{
                 ;adca_SD[nn]=0;
001958 940e 3af5 	CALL SUBOPT_0x98
00195a 940e 3b05 	CALL SUBOPT_0x9A
00195c 940e 3aba 	CALL SUBOPT_0x93
                 ;adcb_SD[nn]=0;
00195e e6a6      	LDI  R26,LOW(_adcb_SD)
00195f e3b0      	LDI  R27,HIGH(_adcb_SD)
001960 940e 3b05 	CALL SUBOPT_0x9A
001962 93ed      	ST   X+,R30
001963 93fc      	ST   X,R31
                 ;}
001964 940e 3aca 	CALL SUBOPT_0x95
001966 cfed      	RJMP _0x1DE
                 _0x1DF:
                 ;
                 ;
                 ;}
                 ;}
                 _0x1D9:
                 ;
                 ;}
                 _0x1D8:
                 ;
                 ;
                 ;else
                 _0x1D2:
                 ;{
                 ;;
                 ;}
                 ;
                 ;
                 ;}
001967 c02a      	RJMP _0x238
                 ; .FEND
                 ;
                 ;// Timer/counter TCD0 Overflow/Underflow interrupt service routine
                 ;interrupt [TCD0_OVF_vect] void tcd0_overflow_isr(void)
                 ;{
                 _tcd0_overflow_isr:
                 ; .FSTART _tcd0_overflow_isr
001968 940e 3841 	CALL SUBOPT_0x46
                 ;if(SD_IN)
00196a 91e0 35c3 	LDS  R30,_SD_IN
00196c 30e0      	CPI  R30,0
00196d f011      	BREQ _0x1E1
                 ;disk_timerproc();
00196e 940e 213f 	CALL _disk_timerproc
                 ;}
                 _0x1E1:
001970 c021      	RJMP _0x238
                 ; .FEND
                 ;
                 ;//  прерывание по секунде от таймера
                 ;interrupt [TCF0_OVF_vect] void tcf0_overflow_isr(void)
                 ;{
                 _tcf0_overflow_isr:
                 ; .FSTART _tcf0_overflow_isr
001971 940e 3841 	CALL SUBOPT_0x46
                 ;if(SD_IN==1)
001973 91a0 35c3 	LDS  R26,_SD_IN
001975 30a1      	CPI  R26,LOW(0x1)
001976 f4c9      	BRNE _0x1E2
                 ;{
                 ;res = f_open(&file,fNAME,FA_READ|FA_WRITE);
001977 940e 3a41 	CALL SUBOPT_0x84
001979 e0a3      	LDI  R26,LOW(3)
00197a 940e 3a4a 	CALL SUBOPT_0x85
                 ;res = f_lseek(&file, file.fsize);
00197c 940e 3a6a 	CALL SUBOPT_0x8B
                +
00197e 91a0 33a1+LDS R26 , _file + ( 10 )
001980 91b0 33a2+LDS R27 , _file + ( 10 ) + 1
001982 9180 33a3+LDS R24 , _file + ( 10 ) + 2
001984 9190 33a4+LDS R25 , _file + ( 10 ) + 3
                 	__GETD2MN _file,10
001986 940e 2e56 	CALL _f_lseek
001988 93e0 3162 	STS  _res,R30
                 ;
                 ;res=f_write(&file,buffer,sizeof(buffer),&nbytes);
00198a 940e 3a6a 	CALL SUBOPT_0x8B
00198c 940e 3aa2 	CALL SUBOPT_0x91
                 ;res=f_close(&file);
00198e 940e 3a9a 	CALL SUBOPT_0x8F
                 ;}
                 ;error(res);
                 _0x1E2:
001990 940e 3a66 	CALL SUBOPT_0x8A
                 ;
                 ;
                 ;}
                 _0x238:
001992 91e9      	LD   R30,Y+
001993 bfef      	OUT  SREG,R30
001994 91f9      	LD   R31,Y+
001995 91e9      	LD   R30,Y+
001996 91b9      	LD   R27,Y+
001997 91a9      	LD   R26,Y+
001998 9199      	LD   R25,Y+
001999 9189      	LD   R24,Y+
00199a 9179      	LD   R23,Y+
00199b 9169      	LD   R22,Y+
00199c 90f9      	LD   R15,Y+
00199d 9019      	LD   R1,Y+
00199e 9009      	LD   R0,Y+
00199f 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;// System Clocks initialization
                 ;void system_clocks_init(void)
                 ; 0000 001E {
                 _system_clocks_init:
                 ; .FSTART _system_clocks_init
                 ; 0000 001F unsigned char n,s;
                 ; 0000 0020 
                 ; 0000 0021 // Optimize for speed
                 ; 0000 0022 #pragma optsize-
                 ; 0000 0023 // Save interrupts enabled/disabled state
                 ; 0000 0024 s=SREG;
0019a0 931a      	ST   -Y,R17
0019a1 930a      	ST   -Y,R16
                 ;	n -> R17
                 ;	s -> R16
0019a2 b70f      	IN   R16,63
                 ; 0000 0025 // Disable interrupts
                 ; 0000 0026 #asm("cli")
0019a3 94f8      	cli
                 ; 0000 0027 
                 ; 0000 0028 // Internal 32 MHz RC oscillator initialization
                 ; 0000 0029 // Enable the internal 32 MHz RC oscillator
                 ; 0000 002A OSC.CTRL|=OSC_RC32MEN_bm;
0019a4 91e0 0050 	LDS  R30,80
0019a6 60e2      	ORI  R30,2
0019a7 93e0 0050 	STS  80,R30
                 ; 0000 002B 
                 ; 0000 002C // System Clock prescaler A division factor: 1
                 ; 0000 002D // System Clock prescalers B & C division factors: B:1, C:1
                 ; 0000 002E // ClkPer4: 32000,000 kHz
                 ; 0000 002F // ClkPer2: 32000,000 kHz
                 ; 0000 0030 // ClkPer:  32000,000 kHz
                 ; 0000 0031 // ClkCPU:  32000,000 kHz
                 ; 0000 0032 n=(CLK.PSCTRL & (~(CLK_PSADIV_gm | CLK_PSBCDIV1_bm | CLK_PSBCDIV0_bm))) |
                 ; 0000 0033 	CLK_PSADIV_1_gc | CLK_PSBCDIV_1_1_gc;
0019a9 91e0 0041 	LDS  R30,65
0019ab 78e0      	ANDI R30,LOW(0x80)
0019ac 2f1e      	MOV  R17,R30
                 ; 0000 0034 CCP=CCP_IOREG_gc;
0019ad ede8      	LDI  R30,LOW(216)
0019ae bfe4      	OUT  0x34,R30
                 ; 0000 0035 CLK.PSCTRL=n;
0019af 9310 0041 	STS  65,R17
                 ; 0000 0036 
                 ; 0000 0037 // Disable the autocalibration of the internal 32 MHz RC oscillator
                 ; 0000 0038 DFLLRC32M.CTRL&= ~DFLL_ENABLE_bm;
0019b1 91e0 0060 	LDS  R30,96
0019b3 7fee      	ANDI R30,0xFE
0019b4 93e0 0060 	STS  96,R30
                 ; 0000 0039 
                 ; 0000 003A // Wait for the internal 32 MHz RC oscillator to stabilize
                 ; 0000 003B while ((OSC.STATUS & OSC_RC32MRDY_bm)==0);
                 _0x1E3:
0019b6 91e0 0051 	LDS  R30,81
0019b8 70e2      	ANDI R30,LOW(0x2)
0019b9 f3e1      	BREQ _0x1E3
                 ; 0000 003C 
                 ; 0000 003D // Select the system clock source: 32 MHz Internal RC Osc.
                 ; 0000 003E n=(CLK.CTRL & (~CLK_SCLKSEL_gm)) | CLK_SCLKSEL_RC32M_gc;
0019ba 91e0 0040 	LDS  R30,64
0019bc 7fe8      	ANDI R30,LOW(0xF8)
0019bd 60e1      	ORI  R30,1
0019be 2f1e      	MOV  R17,R30
                 ; 0000 003F CCP=CCP_IOREG_gc;
0019bf ede8      	LDI  R30,LOW(216)
0019c0 bfe4      	OUT  0x34,R30
                 ; 0000 0040 CLK.CTRL=n;
0019c1 9310 0040 	STS  64,R17
                 ; 0000 0041 
                 ; 0000 0042 // Disable the unused oscillators: 2 MHz, internal 32 kHz, external clock/crystal oscillator, PLL
                 ; 0000 0043 OSC.CTRL&= ~(OSC_RC2MEN_bm | OSC_RC32KEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm);
0019c3 91e0 0050 	LDS  R30,80
0019c5 7ee2      	ANDI R30,LOW(0xE2)
0019c6 93e0 0050 	STS  80,R30
                 ; 0000 0044 
                 ; 0000 0045 // Peripheral Clock output: Disabled
                 ; 0000 0046 PORTCFG.CLKEVOUT=(PORTCFG.CLKEVOUT & (~PORTCFG_CLKOUT_gm)) | PORTCFG_CLKOUT_OFF_gc;
0019c8 91e0 00b4 	LDS  R30,180
0019ca 7fec      	ANDI R30,LOW(0xFC)
0019cb 93e0 00b4 	STS  180,R30
                 ; 0000 0047 
                 ; 0000 0048 // Restore interrupts enabled/disabled state
                 ; 0000 0049 SREG=s;
0019cd bf0f      	OUT  0x3F,R16
                 ; 0000 004A // Restore optimization for size if needed
                 ; 0000 004B #pragma optsize_default
                 ; 0000 004C }
0019ce 9109      	LD   R16,Y+
0019cf 9119      	LD   R17,Y+
0019d0 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0052 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0053 unsigned char n;
                 ; 0000 0054 #pragma optsize-
                 ; 0000 0055 #asm("cli")
                 ;	n -> R17
0019d1 94f8      	cli
                 ; 0000 0056 n=(PMIC.CTRL & (~(PMIC_RREN_bm | PMIC_IVSEL_bm | PMIC_HILVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm))) |
                 ; 0000 0057 	PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_HILVLEN_bm;
0019d2 91e0 00a2 	LDS  R30,162
0019d4 73e8      	ANDI R30,LOW(0x38)
0019d5 60e7      	ORI  R30,LOW(0x7)
0019d6 2f1e      	MOV  R17,R30
                 ; 0000 0058 CCP=CCP_IOREG_gc;
0019d7 ede8      	LDI  R30,LOW(216)
0019d8 bfe4      	OUT  0x34,R30
                 ; 0000 0059 PMIC.CTRL=n;
0019d9 9310 00a2 	STS  162,R17
                 ; 0000 005A PMIC.INTPRI=0x00;
0019db e0e0      	LDI  R30,LOW(0)
0019dc 93e0 00a1 	STS  161,R30
                 ; 0000 005B #pragma optsize_default
                 ; 0000 005C system_clocks_init();
0019de dfc1      	RCALL _system_clocks_init
                 ; 0000 005D 
                 ; 0000 005E ports_init();
0019df 940e 066b 	CALL _ports_init
                 ; 0000 005F usartc0_init();
0019e1 940e 09c0 	CALL _usartc0_init
                 ; 0000 0060 usartd1_init();
0019e3 940e 0fc5 	CALL _usartd1_init
                 ; 0000 0061 rtc32_init_my();
0019e5 940e 0755 	CALL _rtc32_init_my
                 ; 0000 0062 delay_ms(50);
0019e7 940e 3b0d 	CALL SUBOPT_0x9B
                 ; 0000 0063 tcd0_init();
0019e9 940e 10d5 	CALL _tcd0_init
                 ; 0000 0064 twie_init();
0019eb 940e 1168 	CALL _twie_init
                 ; 0000 0065 sprintf(info,"start i2c");
0019ed 940e 3928 	CALL SUBOPT_0x62
                +
0019ef e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 370 ) )
0019f0 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 370 ) )
                 	__POINTW1FN _0x0,370
0019f1 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 0066 monitor();
0019f3 940e 3b11 	CALL SUBOPT_0x9C
                 ; 0000 0067 delay_ms(50);
                 ; 0000 0068 #asm("sei")
0019f5 9478      	sei
                 ; 0000 0069 delay_ms(1);
0019f6 e0a1      	LDI  R26,LOW(1)
0019f7 940e 3b14 	CALL SUBOPT_0x9D
                 ; 0000 006A PORTE.OUT=PORTE.OUT|0b00010000;
0019f9 61e0      	ORI  R30,0x10
0019fa 93e0 0684 	STS  1668,R30
                 ; 0000 006B init_buferU1();
0019fc db2d      	RCALL _init_buferU1
                 ; 0000 006C delay_ms(50);
0019fd 940e 3b0d 	CALL SUBOPT_0x9B
                 ; 0000 006D PORTE.OUT=PORTE.OUT&0b11101111;
0019ff 940e 3b1a 	CALL SUBOPT_0x9E
                 ; 0000 006E delay_ms(50);
                 ; 0000 006F PORTE.OUT=PORTE.OUT|0b00010000;
001a01 940e 3b20 	CALL SUBOPT_0x9F
                 ; 0000 0070 init_buferU2();
001a03 db5d      	RCALL _init_buferU2
                 ; 0000 0071 delay_ms(50);
001a04 940e 3b0d 	CALL SUBOPT_0x9B
                 ; 0000 0072 PORTE.OUT=PORTE.OUT&0b11101111;
001a06 940e 3b1a 	CALL SUBOPT_0x9E
                 ; 0000 0073 delay_ms(50);
                 ; 0000 0074 PORTE.OUT=PORTE.OUT|0b00010000;
001a08 940e 3b20 	CALL SUBOPT_0x9F
                 ; 0000 0075 init_buferU3();
001a0a db8d      	RCALL _init_buferU3
                 ; 0000 0076 delay_ms(50);
001a0b 940e 3b0d 	CALL SUBOPT_0x9B
                 ; 0000 0077 PORTE.OUT=PORTE.OUT&0b11101111;
001a0d 940e 3b1a 	CALL SUBOPT_0x9E
                 ; 0000 0078 delay_ms(50);
                 ; 0000 0079 sprintf(info,"buf i2c start ok");
001a0f 940e 3928 	CALL SUBOPT_0x62
                +
001a11 e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 380 ) )
001a12 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 380 ) )
                 	__POINTW1FN _0x0,380
001a13 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 007A monitor();
001a15 940e 3b11 	CALL SUBOPT_0x9C
                 ; 0000 007B delay_ms(50);
                 ; 0000 007C PORTE.OUT=PORTE.OUT|0b00010000;
001a17 940e 3b20 	CALL SUBOPT_0x9F
                 ; 0000 007D bmp_reg_init();
001a19 940e 1201 	CALL _bmp_reg_init
                 ; 0000 007E delay_ms(50);
001a1b 940e 3b0d 	CALL SUBOPT_0x9B
                 ; 0000 007F sprintf(info,"bmp i2c start ok");
001a1d 940e 3928 	CALL SUBOPT_0x62
                +
001a1f e6eb     +LDI R30 , LOW ( 2 * _0x0 + ( 397 ) )
001a20 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 397 ) )
                 	__POINTW1FN _0x0,397
001a21 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 0080 PORTE.OUT=PORTE.OUT&0b11101111;
001a23 940e 3b1a 	CALL SUBOPT_0x9E
                 ; 0000 0081 delay_ms(50);
                 ; 0000 0082 monitor();
001a25 940e 3a60 	CALL SUBOPT_0x89
                 ; 0000 0083 delay_ms(100);
                 ; 0000 0084 spic_init();
001a27 940e 1153 	CALL _spic_init
                 ; 0000 0085 sprintf(info,"SPI START");
001a29 940e 3928 	CALL SUBOPT_0x62
                +
001a2b e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 414 ) )
001a2c e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 414 ) )
                 	__POINTW1FN _0x0,414
001a2d 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 0086 monitor();
001a2f 940e 0fe6 	CALL _monitor
                 ; 0000 0087 #asm("sei")
001a31 9478      	sei
                 ; 0000 0088 delay_ms(200);
001a32 eca8      	LDI  R26,LOW(200)
001a33 e0b0      	LDI  R27,0
001a34 940e 3f1b 	CALL _delay_ms
                 ; 0000 0089 
                 ; 0000 008A check_sd_card();
001a36 dceb      	RCALL _check_sd_card
                 ; 0000 008B 
                 ; 0000 008C 
                 ; 0000 008D spic_init();
001a37 940e 1153 	CALL _spic_init
                 ; 0000 008E PORTA.DIRSET=0b00000001;
001a39 e0e1      	LDI  R30,LOW(1)
001a3a 93e0 0601 	STS  1537,R30
                 ; 0000 008F PORTA.OUTSET = 0b00000001;
001a3c 940e 3b26 	CALL SUBOPT_0xA0
                 ; 0000 0090 delay_ms(10);
                 ; 0000 0091 PORTA.OUTCLR = 0b00000001;
001a3e e0e1      	LDI  R30,LOW(1)
001a3f 93e0 0606 	STS  1542,R30
                 ; 0000 0092 delay_ms(100);
001a41 e6a4      	LDI  R26,LOW(100)
001a42 e0b0      	LDI  R27,0
001a43 940e 3f1b 	CALL _delay_ms
                 ; 0000 0093 PORTA.OUTSET = 0b00000001;
001a45 940e 3b26 	CALL SUBOPT_0xA0
                 ; 0000 0094 delay_ms(10);
                 ; 0000 0095 ad7705_init(can1cl,mclk4,can1set,set1);
001a47 940e 3a1c 	CALL SUBOPT_0x81
                 ; 0000 0096 delay_ms(10);
001a49 e0aa      	LDI  R26,LOW(10)
001a4a 940e 3b14 	CALL SUBOPT_0x9D
                 ; 0000 0097 PORTE.OUT=PORTE.OUT&0b11101111;
001a4c 7eef      	ANDI R30,0xEF
001a4d 93e0 0684 	STS  1668,R30
                 ; 0000 0098 delay_ms(10);
001a4f e0aa      	LDI  R26,LOW(10)
001a50 940e 3b14 	CALL SUBOPT_0x9D
                 ; 0000 0099 PORTE.OUT=PORTE.OUT|0b00010000;
001a52 61e0      	ORI  R30,0x10
001a53 93e0 0684 	STS  1668,R30
                 ; 0000 009A sprintf(info,"ad7705 start ok");
001a55 940e 3928 	CALL SUBOPT_0x62
                +
001a57 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 424 ) )
001a58 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 424 ) )
                 	__POINTW1FN _0x0,424
001a59 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 009B monitor();
001a5b 940e 0fe6 	CALL _monitor
                 ; 0000 009C 
                 ; 0000 009D RESULT=ad7705(1);
001a5d e0a1      	LDI  R26,LOW(1)
001a5e db91      	RCALL _ad7705
001a5f 93e0 36b4 	STS  _RESULT,R30
001a61 93f0 36b5 	STS  _RESULT+1,R31
                 ; 0000 009E S0[7]=RESULT;// Сигнал  усилителя младший
001a63 91e0 36b4 	LDS  R30,_RESULT
                +
001a65 93e0 311b+STS _S0 + ( 7 ) , R30
                 	__PUTB1MN _S0,7
                 ; 0000 009F S0[8]=(RESULT>>8); //Сигнал  усилителя старший
001a67 940e 3aee 	CALL SUBOPT_0x97
                +
001a69 93e0 311c+STS _S0 + ( 8 ) , R30
                 	__PUTB1MN _S0,8
                 ; 0000 00A0 
                 ; 0000 00A1 // ADCA initialization
                 ; 0000 00A2 adca_init();
001a6b 940e 02f3 	CALL _adca_init
                 ; 0000 00A3 // ADCB initialization
                 ; 0000 00A4 adcb_init();
001a6d 940e 0340 	CALL _adcb_init
                 ; 0000 00A5 
                 ; 0000 00A6 // Timer/Counter
                 ; 0000 00A7 tcc0_init();
001a6f 940e 1038 	CALL _tcc0_init
                 ; 0000 00A8 tcc1_init();
001a71 940e 109c 	CALL _tcc1_init
                 ; 0000 00A9 tcf0_init();
001a73 940e 1113 	CALL _tcf0_init
                 ; 0000 00AA delay_ms(10);
001a75 e0aa      	LDI  R26,LOW(10)
001a76 e0b0      	LDI  R27,0
001a77 940e 3f1b 	CALL _delay_ms
                 ; 0000 00AB 
                 ; 0000 00AC sprintf(info,"start device");
001a79 940e 3928 	CALL SUBOPT_0x62
                +
001a7b e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 440 ) )
001a7c e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 440 ) )
                 	__POINTW1FN _0x0,440
001a7d 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 00AD monitor();
001a7f 940e 3b11 	CALL SUBOPT_0x9C
                 ; 0000 00AE delay_ms(50);
                 ; 0000 00AF 
                 ; 0000 00B0 if(Xsave==0xFFFFFFFF)Xsave=0;
001a81 e0a1      	LDI  R26,LOW(_Xsave)
001a82 e0b0      	LDI  R27,HIGH(_Xsave)
001a83 940e 4283 	CALL __EEPROMRDD
                +
001a85 3fef     +CPI R30 , LOW ( 0xFFFFFFFF )
001a86 efaf     +LDI R26 , HIGH ( 0xFFFFFFFF )
001a87 07fa     +CPC R31 , R26
001a88 efaf     +LDI R26 , BYTE3 ( 0xFFFFFFFF )
001a89 076a     +CPC R22 , R26
001a8a efaf     +LDI R26 , BYTE4 ( 0xFFFFFFFF )
001a8b 077a     +CPC R23 , R26
                 	__CPD1N 0xFFFFFFFF
001a8c f431      	BRNE _0x1E6
001a8d e0a1      	LDI  R26,LOW(_Xsave)
001a8e e0b0      	LDI  R27,HIGH(_Xsave)
001a8f 940e 371b 	CALL SUBOPT_0x1C
001a91 940e 4290 	CALL __EEPROMWRD
                 ; 0000 00B1 sprintf(info,"START WHILE");
                 _0x1E6:
001a93 940e 3928 	CALL SUBOPT_0x62
                +
001a95 eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 453 ) )
001a96 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 453 ) )
                 	__POINTW1FN _0x0,453
001a97 940e 3a59 	CALL SUBOPT_0x88
                 ; 0000 00B2 monitor();
001a99 940e 3b11 	CALL SUBOPT_0x9C
                 ; 0000 00B3 delay_ms(50);
                 ; 0000 00B4 
                 ; 0000 00B5 if(RTC32.CNT<1454622753) RTC32.CNT=1454622753;
001a9b 91a0 0424 	LDS  R26,1060
001a9d 91b0 0425 	LDS  R27,1060+1
001a9f 9180 0426 	LDS  R24,1060+2
001aa1 9190 0427 	LDS  R25,1060+3
                +
001aa3 32a1     +CPI R26 , LOW ( 0x56B3C821 )
001aa4 ece8     +LDI R30 , HIGH ( 0x56B3C821 )
001aa5 07be     +CPC R27 , R30
001aa6 ebe3     +LDI R30 , BYTE3 ( 0x56B3C821 )
001aa7 078e     +CPC R24 , R30
001aa8 e5e6     +LDI R30 , BYTE4 ( 0x56B3C821 )
001aa9 079e     +CPC R25 , R30
                 	__CPD2N 0x56B3C821
001aaa f430      	BRSH _0x1E7
                +
001aab e2e1     +LDI R30 , LOW ( 0x56B3C821 )
001aac ecf8     +LDI R31 , HIGH ( 0x56B3C821 )
001aad eb63     +LDI R22 , BYTE3 ( 0x56B3C821 )
001aae e576     +LDI R23 , BYTE4 ( 0x56B3C821 )
                 	__GETD1N 0x56B3C821
001aaf 940e 3729 	CALL SUBOPT_0x1E
                 ; 0000 00B6 
                 ; 0000 00B7 PORTE.OUT=PORTE.OUT&0b11101111;
                 _0x1E7:
001ab1 91e0 0684 	LDS  R30,1668
001ab3 7eef      	ANDI R30,0xEF
001ab4 93e0 0684 	STS  1668,R30
                 ; 0000 00B8 //прописываем заводской ответ
                 ; 0000 00B9 //!!!! важно смертельно
                 ; 0000 00BA initzavod();
001ab6 940e 03c5 	CALL _initzavod
                 ; 0000 00BB reginit();
001ab8 940e 062e 	CALL _reginit
                 ; 0000 00BC 
                 ; 0000 00BD 
                 ; 0000 00BE 
                 ; 0000 00BF while (1)
                 _0x1E8:
                 ; 0000 00C0 {
                 ; 0000 00C1 PORTR.OUTTGL=0b00000010;
001aba e0e2      	LDI  R30,LOW(2)
001abb 93e0 07e7 	STS  2023,R30
                 ; 0000 00C2 //////////////////////////////////////*************************************
                 ; 0000 00C3 //поиск ошибки буфера
                 ; 0000 00C4 //buferU1_error();
                 ; 0000 00C5 //включаю подсветку
                 ; 0000 00C6 //if(error_buf!=0) PORTE.OUT=PORTE.OUT|0b00010000;
                 ; 0000 00C7 init_buferU1();
001abd da6c      	RCALL _init_buferU1
                 ; 0000 00C8 /////////////////////////////////////////////////////////////////////////////
                 ; 0000 00C9 read_bmp();
001abe 940e 1304 	CALL _read_bmp
                 ; 0000 00CA ///////////////////////////////////////////////////////////////
                 ; 0000 00CB if((0.0<Tempf&&Tempf<60.0)&&(300.0<p1&&p1<825.0))
001ac0 91e0 3659 	LDS  R30,_Tempf
001ac2 91f0 365a 	LDS  R31,_Tempf+1
001ac4 9160 365b 	LDS  R22,_Tempf+2
001ac6 9170 365c 	LDS  R23,_Tempf+3
001ac8 940e 42ca 	CALL __CPD01
001aca f44c      	BRGE _0x1EC
001acb 940e 3b2d 	CALL SUBOPT_0xA1
                +
001acd e0e0     +LDI R30 , LOW ( 0x42700000 )
001ace e0f0     +LDI R31 , HIGH ( 0x42700000 )
001acf e760     +LDI R22 , BYTE3 ( 0x42700000 )
001ad0 e472     +LDI R23 , BYTE4 ( 0x42700000 )
                 	__GETD1N 0x42700000
001ad1 940e 40ae 	CALL __CMPF12
001ad3 f008      	BRLO _0x1ED
                 _0x1EC:
001ad4 c020      	RJMP _0x1EE
                 _0x1ED:
001ad5 91e0 365d 	LDS  R30,_p1
001ad7 91f0 365e 	LDS  R31,_p1+1
001ad9 9160 365f 	LDS  R22,_p1+2
001adb 9170 3660 	LDS  R23,_p1+3
                +
001add e0a0     +LDI R26 , LOW ( 0x43960000 )
001ade e0b0     +LDI R27 , HIGH ( 0x43960000 )
001adf e986     +LDI R24 , BYTE3 ( 0x43960000 )
001ae0 e493     +LDI R25 , BYTE4 ( 0x43960000 )
                 	__GETD2N 0x43960000
001ae1 940e 40ae 	CALL __CMPF12
001ae3 f478      	BRSH _0x1EF
001ae4 91a0 365d 	LDS  R26,_p1
001ae6 91b0 365e 	LDS  R27,_p1+1
001ae8 9180 365f 	LDS  R24,_p1+2
001aea 9190 3660 	LDS  R25,_p1+3
                +
001aec e0e0     +LDI R30 , LOW ( 0x444E4000 )
001aed e4f0     +LDI R31 , HIGH ( 0x444E4000 )
001aee e46e     +LDI R22 , BYTE3 ( 0x444E4000 )
001aef e474     +LDI R23 , BYTE4 ( 0x444E4000 )
                 	__GETD1N 0x444E4000
001af0 940e 40ae 	CALL __CMPF12
001af2 f008      	BRLO _0x1F0
                 _0x1EF:
001af3 c001      	RJMP _0x1EE
                 _0x1F0:
001af4 c001      	RJMP _0x1F1
                 _0x1EE:
001af5 c01e      	RJMP _0x1EB
                 _0x1F1:
                 ; 0000 00CC {
                 ; 0000 00CD Tempf_K=Tempf*10.0+2730.0;
001af6 940e 3b2d 	CALL SUBOPT_0xA1
001af8 940e 3b36 	CALL SUBOPT_0xA2
                +
001afa e0a0     +LDI R26 , LOW ( 0x452AA000 )
001afb eab0     +LDI R27 , HIGH ( 0x452AA000 )
001afc e28a     +LDI R24 , BYTE3 ( 0x452AA000 )
001afd e495     +LDI R25 , BYTE4 ( 0x452AA000 )
                 	__GETD2N 0x452AA000
001afe 940e 3fcb 	CALL __ADDF12
001b00 940e 3f58 	CALL __CFD1U
001b02 013f      	MOVW R6,R30
                 ; 0000 00CE S0[11]=Tempf_K;// температура бмп младший
                +
001b03 9260 311f+STS _S0 + ( 11 ) , R6
                 	__PUTBMRN _S0,11,6
                 ; 0000 00CF S0[12]=(Tempf_K>>8); //температура бмп  старший
                +
001b05 9270 3120+STS _S0 + ( 12 ) , R7
                 	__PUTBMRN _S0,12,7
                 ; 0000 00D0 ///////////////////////////////////////////////////////////////
                 ; 0000 00D1 S0[15]=p/10;//ДАВЛЕНИЕ бмп младший
001b07 940e 3b3a 	CALL SUBOPT_0xA3
                +
001b09 93e0 3123+STS _S0 + ( 15 ) , R30
                 	__PUTB1MN _S0,15
                 ; 0000 00D2 S0[16]=(p/10>>8);//ДАВЛЕНИЕ бмп  старший
001b0b 940e 3b3a 	CALL SUBOPT_0xA3
001b0d 01df      	MOVW R26,R30
001b0e 01cb      	MOVW R24,R22
001b0f e0e8      	LDI  R30,LOW(8)
001b10 940e 410d 	CALL __ASRD12
                +
001b12 93e0 3124+STS _S0 + ( 16 ) , R30
                 	__PUTB1MN _S0,16
                 ; 0000 00D3 }
                 ; 0000 00D4 
                 ; 0000 00D5 init_buferU2();
                 _0x1EB:
001b14 da4c      	RCALL _init_buferU2
                 ; 0000 00D6 
                 ; 0000 00D7 if(SD_IN)
001b15 91e0 35c3 	LDS  R30,_SD_IN
001b17 30e0      	CPI  R30,0
001b18 f021      	BREQ _0x1F2
                 ; 0000 00D8 {
                 ; 0000 00D9 get_CNTRTC(&X);
001b19 940e 38ec 	CALL SUBOPT_0x5C
                 ; 0000 00DA calcDateTime(X, 0, &date1,&time1);
                 ; 0000 00DB bufform();
001b1b db6a      	RCALL _bufform
                 ; 0000 00DC GETFILNAME();
001b1c db2b      	RCALL _GETFILNAME
                 ; 0000 00DD }
                 ; 0000 00DE 
                 ; 0000 00DF init_buferU3();
                 _0x1F2:
001b1d da7a      	RCALL _init_buferU3
                 ; 0000 00E0 
                 ; 0000 00E1 buferU1_opros();
001b1e da27      	RCALL _buferU1_opros
                 ; 0000 00E2 buferU2_opros();
001b1f da5d      	RCALL _buferU2_opros
                 ; 0000 00E3 buferU3_opros();
001b20 da93      	RCALL _buferU3_opros
                 ; 0000 00E4 //обработочка
                 ; 0000 00E5     //21.1 b2 io7  +
                 ; 0000 00E6      if((U2in.input&0b10000000)==0b10000000) S0[21]=S0[21]|0b00000010;
                +
001b21 91e0 36a4+LDS R30 , _U2in + ( 1 )
                 	__GETB1MN _U2in,1
001b23 78e0      	ANDI R30,LOW(0x80)
001b24 38e0      	CPI  R30,LOW(0x80)
001b25 f421      	BRNE _0x1F3
                +
001b26 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b28 60e2      	ORI  R30,2
001b29 c007      	RJMP _0x22A
                 ; 0000 00E7 else if((U2in.input&0b10000000)==0b00000000) S0[21]=S0[21]&0b11111101;
                 _0x1F3:
                +
001b2a 91e0 36a4+LDS R30 , _U2in + ( 1 )
                 	__GETB1MN _U2in,1
001b2c 78e0      	ANDI R30,LOW(0x80)
001b2d f429      	BRNE _0x1F5
                +
001b2e 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b30 7fed      	ANDI R30,0xFD
                 _0x22A:
                +
001b31 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00E8      //21.2 b1 io4 +
                 ; 0000 00E9      if((U1in.input&0b00010000)==0b00010000) S0[21]=S0[21]|0b00000100;
                 _0x1F5:
                +
001b33 91e0 369c+LDS R30 , _U1in + ( 1 )
                 	__GETB1MN _U1in,1
001b35 71e0      	ANDI R30,LOW(0x10)
001b36 31e0      	CPI  R30,LOW(0x10)
001b37 f421      	BRNE _0x1F6
                +
001b38 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b3a 60e4      	ORI  R30,4
001b3b c007      	RJMP _0x22B
                 ; 0000 00EA else if((U1in.input&0b00010000)==0b00000000) S0[21]=S0[21]&0b11111011;
                 _0x1F6:
                +
001b3c 91e0 369c+LDS R30 , _U1in + ( 1 )
                 	__GETB1MN _U1in,1
001b3e 71e0      	ANDI R30,LOW(0x10)
001b3f f429      	BRNE _0x1F8
                +
001b40 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b42 7feb      	ANDI R30,0xFB
                 _0x22B:
                +
001b43 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00EB      //21.3 b1 io5  +
                 ; 0000 00EC      if((U1in.input&0b00100000)==0b00100000) S0[21]=S0[21]|0b00001000;
                 _0x1F8:
                +
001b45 91e0 369c+LDS R30 , _U1in + ( 1 )
                 	__GETB1MN _U1in,1
001b47 72e0      	ANDI R30,LOW(0x20)
001b48 32e0      	CPI  R30,LOW(0x20)
001b49 f421      	BRNE _0x1F9
                +
001b4a 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b4c 60e8      	ORI  R30,8
001b4d c007      	RJMP _0x22C
                 ; 0000 00ED else if((U1in.input&0b00100000)==0b00000000) S0[21]=S0[21]&0b11110111;
                 _0x1F9:
                +
001b4e 91e0 369c+LDS R30 , _U1in + ( 1 )
                 	__GETB1MN _U1in,1
001b50 72e0      	ANDI R30,LOW(0x20)
001b51 f429      	BRNE _0x1FB
                +
001b52 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b54 7fe7      	ANDI R30,0XF7
                 _0x22C:
                +
001b55 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00EE      //21.4 b1 io1   ----
                 ; 0000 00EF      if((U1in.input&0b00000010)==0b00000010) S0[21]=S0[21]|0b00010000;
                 _0x1FB:
                +
001b57 91e0 369c+LDS R30 , _U1in + ( 1 )
                 	__GETB1MN _U1in,1
001b59 70e2      	ANDI R30,LOW(0x2)
001b5a 30e2      	CPI  R30,LOW(0x2)
001b5b f421      	BRNE _0x1FC
                +
001b5c 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b5e 61e0      	ORI  R30,0x10
001b5f c007      	RJMP _0x22D
                 ; 0000 00F0 else if((U1in.input&0b00000010)==0b00000000) S0[21]=S0[21]&0b11101111;
                 _0x1FC:
                +
001b60 91e0 369c+LDS R30 , _U1in + ( 1 )
                 	__GETB1MN _U1in,1
001b62 70e2      	ANDI R30,LOW(0x2)
001b63 f429      	BRNE _0x1FE
                +
001b64 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b66 7eef      	ANDI R30,0xEF
                 _0x22D:
                +
001b67 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00F1      //21.5 b2 io3
                 ; 0000 00F2      if((U2in.input&0b00001000)==0b00001000) S0[21]=S0[21]|0b00100000;
                 _0x1FE:
                +
001b69 91e0 36a4+LDS R30 , _U2in + ( 1 )
                 	__GETB1MN _U2in,1
001b6b 70e8      	ANDI R30,LOW(0x8)
001b6c 30e8      	CPI  R30,LOW(0x8)
001b6d f421      	BRNE _0x1FF
                +
001b6e 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b70 62e0      	ORI  R30,0x20
001b71 c007      	RJMP _0x22E
                 ; 0000 00F3 else if((U2in.input&0b00001000)==0b00000000) S0[21]=S0[21]&0b11011111;
                 _0x1FF:
                +
001b72 91e0 36a4+LDS R30 , _U2in + ( 1 )
                 	__GETB1MN _U2in,1
001b74 70e8      	ANDI R30,LOW(0x8)
001b75 f429      	BRNE _0x201
                +
001b76 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b78 7def      	ANDI R30,0xDF
                 _0x22E:
                +
001b79 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00F4      //21.6 b2 io4
                 ; 0000 00F5      if((U2in.input&0b00010000)==0b00010000) S0[21]=S0[21]|0b01000000;
                 _0x201:
                +
001b7b 91e0 36a4+LDS R30 , _U2in + ( 1 )
                 	__GETB1MN _U2in,1
001b7d 71e0      	ANDI R30,LOW(0x10)
001b7e 31e0      	CPI  R30,LOW(0x10)
001b7f f421      	BRNE _0x202
                +
001b80 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b82 64e0      	ORI  R30,0x40
001b83 c007      	RJMP _0x22F
                 ; 0000 00F6 else if((U2in.input&0b00010000)==0b00000000) S0[21]=S0[21]&0b10111111;
                 _0x202:
                +
001b84 91e0 36a4+LDS R30 , _U2in + ( 1 )
                 	__GETB1MN _U2in,1
001b86 71e0      	ANDI R30,LOW(0x10)
001b87 f429      	BRNE _0x204
                +
001b88 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b8a 7bef      	ANDI R30,0xBF
                 _0x22F:
                +
001b8b 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00F7      //21.6 b3 io6
                 ; 0000 00F8      if((U3in.input&0b01000000)==0b01000000) S0[21]=S0[21]|0b10000000;
                 _0x204:
                +
001b8d 91e0 36ac+LDS R30 , _U3in + ( 1 )
                 	__GETB1MN _U3in,1
001b8f 74e0      	ANDI R30,LOW(0x40)
001b90 34e0      	CPI  R30,LOW(0x40)
001b91 f421      	BRNE _0x205
                +
001b92 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b94 68e0      	ORI  R30,0x80
001b95 c007      	RJMP _0x230
                 ; 0000 00F9 else if((U3in.input&0b01000000)==0b00000000) S0[21]=S0[21]&0b01111111;
                 _0x205:
                +
001b96 91e0 36ac+LDS R30 , _U3in + ( 1 )
                 	__GETB1MN _U3in,1
001b98 74e0      	ANDI R30,LOW(0x40)
001b99 f429      	BRNE _0x207
                +
001b9a 91e0 3129+LDS R30 , _S0 + ( 21 )
                 	__GETB1MN _S0,21
001b9c 77ef      	ANDI R30,0x7F
                 _0x230:
                +
001b9d 93e0 3129+STS _S0 + ( 21 ) , R30
                 	__PUTB1MN _S0,21
                 ; 0000 00FA 
                 ; 0000 00FB //пождиг
                 ; 0000 00FC if( (B5upr&0b00000010)==0b00000010 ) { U3out.output=U3out.output|0b00000010; }
                 _0x207:
001b9f 91e0 3076 	LDS  R30,_B5upr
001ba1 70e2      	ANDI R30,LOW(0x2)
001ba2 30e2      	CPI  R30,LOW(0x2)
001ba3 f421      	BRNE _0x208
                +
001ba4 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001ba6 60e2      	ORI  R30,2
001ba7 c007      	RJMP _0x231
                 ; 0000 00FD else if( (B5upr&0b00000010)==0b00000000 ) {U3out.output=U3out.output&0b11111101;}
                 _0x208:
001ba8 91e0 3076 	LDS  R30,_B5upr
001baa 70e2      	ANDI R30,LOW(0x2)
001bab f429      	BRNE _0x20A
                +
001bac 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001bae 7fed      	ANDI R30,0xFD
                 _0x231:
                +
001baf 93e0 36ae+STS _U3out + ( 1 ) , R30
                 	__PUTB1MN _U3out,1
                 ; 0000 00FE //клапан1
                 ; 0000 00FF if( (B5upr&0b00000100)==0b00000100 ) {U3out.output=U3out.output|0b00000100;}
                 _0x20A:
001bb1 91e0 3076 	LDS  R30,_B5upr
001bb3 70e4      	ANDI R30,LOW(0x4)
001bb4 30e4      	CPI  R30,LOW(0x4)
001bb5 f421      	BRNE _0x20B
                +
001bb6 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001bb8 60e4      	ORI  R30,4
001bb9 c007      	RJMP _0x232
                 ; 0000 0100 else if( (B5upr&0b00000100)==0b00000000 ) {U3out.output=U3out.output&0b11111011;}
                 _0x20B:
001bba 91e0 3076 	LDS  R30,_B5upr
001bbc 70e4      	ANDI R30,LOW(0x4)
001bbd f429      	BRNE _0x20D
                +
001bbe 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001bc0 7feb      	ANDI R30,0xFB
                 _0x232:
                +
001bc1 93e0 36ae+STS _U3out + ( 1 ) , R30
                 	__PUTB1MN _U3out,1
                 ; 0000 0101 //контрольная кювета
                 ; 0000 0102 if( (B5upr&0b00001000)==0b00001000)        {U1out.output=U1out.output&0b00111111;
                 _0x20D:
001bc3 91e0 3076 	LDS  R30,_B5upr
001bc5 70e8      	ANDI R30,LOW(0x8)
001bc6 30e8      	CPI  R30,LOW(0x8)
001bc7 f421      	BRNE _0x20E
001bc8 940e 3b42 	CALL SUBOPT_0xA4
                 ; 0000 0103                                             U1out.output=U1out.output|0b01000000;}
001bca 64e0      	ORI  R30,0x40
001bcb c007      	RJMP _0x233
                 ; 0000 0104 
                 ; 0000 0105 else if((B5upr&0b00001000)==0b00000000)     {U1out.output=U1out.output&0b00111111;
                 _0x20E:
001bcc 91e0 3076 	LDS  R30,_B5upr
001bce 70e8      	ANDI R30,LOW(0x8)
001bcf f429      	BRNE _0x210
001bd0 940e 3b42 	CALL SUBOPT_0xA4
                 ; 0000 0106                                              U1out.output=U1out.output|0b10000000;}
001bd2 68e0      	ORI  R30,0x80
                 _0x233:
                +
001bd3 93e0 369e+STS _U1out + ( 1 ) , R30
                 	__PUTB1MN _U1out,1
                 ; 0000 0107 
                 ; 0000 0108 
                 ; 0000 0109 //клапан 2
                 ; 0000 010A if( (B5upr&0b00010000)==0b00010000 ) {U3out.output=U3out.output|0b00001000;}
                 _0x210:
001bd5 91e0 3076 	LDS  R30,_B5upr
001bd7 71e0      	ANDI R30,LOW(0x10)
001bd8 31e0      	CPI  R30,LOW(0x10)
001bd9 f421      	BRNE _0x211
                +
001bda 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001bdc 60e8      	ORI  R30,8
001bdd c007      	RJMP _0x234
                 ; 0000 010B else if( (B5upr&0b00010000)==0b00000000 ) {U3out.output=U3out.output&0b11110111;}
                 _0x211:
001bde 91e0 3076 	LDS  R30,_B5upr
001be0 71e0      	ANDI R30,LOW(0x10)
001be1 f429      	BRNE _0x213
                +
001be2 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001be4 7fe7      	ANDI R30,0XF7
                 _0x234:
                +
001be5 93e0 36ae+STS _U3out + ( 1 ) , R30
                 	__PUTB1MN _U3out,1
                 ; 0000 010C //клапан 3
                 ; 0000 010D if( (B5upr&0b00100000)==0b00100000 ) {U3out.output=U3out.output|0b00010000;}
                 _0x213:
001be7 91e0 3076 	LDS  R30,_B5upr
001be9 72e0      	ANDI R30,LOW(0x20)
001bea 32e0      	CPI  R30,LOW(0x20)
001beb f421      	BRNE _0x214
                +
001bec 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001bee 61e0      	ORI  R30,0x10
001bef c007      	RJMP _0x235
                 ; 0000 010E else if( (B5upr&0b00100000)==0b00000000 ) {U3out.output=U3out.output&0b11101111;}
                 _0x214:
001bf0 91e0 3076 	LDS  R30,_B5upr
001bf2 72e0      	ANDI R30,LOW(0x20)
001bf3 f429      	BRNE _0x216
                +
001bf4 91e0 36ae+LDS R30 , _U3out + ( 1 )
                 	__GETB1MN _U3out,1
001bf6 7eef      	ANDI R30,0xEF
                 _0x235:
                +
001bf7 93e0 36ae+STS _U3out + ( 1 ) , R30
                 	__PUTB1MN _U3out,1
                 ; 0000 010F //реле 1    инверсно
                 ; 0000 0110 if( (B5upr&0b01000000)==0b01000000 )       {U1out.output=U1out.output&0b11111110;}
                 _0x216:
001bf9 91e0 3076 	LDS  R30,_B5upr
001bfb 74e0      	ANDI R30,LOW(0x40)
001bfc 34e0      	CPI  R30,LOW(0x40)
001bfd f421      	BRNE _0x217
                +
001bfe 91e0 369e+LDS R30 , _U1out + ( 1 )
                 	__GETB1MN _U1out,1
001c00 7fee      	ANDI R30,0xFE
001c01 c007      	RJMP _0x236
                 ; 0000 0111 else if( (B5upr&0b01000000)==0b00000000 ) {U1out.output=U1out.output|0b00000001;}
                 _0x217:
001c02 91e0 3076 	LDS  R30,_B5upr
001c04 74e0      	ANDI R30,LOW(0x40)
001c05 f429      	BRNE _0x219
                +
001c06 91e0 369e+LDS R30 , _U1out + ( 1 )
                 	__GETB1MN _U1out,1
001c08 60e1      	ORI  R30,1
                 _0x236:
                +
001c09 93e0 369e+STS _U1out + ( 1 ) , R30
                 	__PUTB1MN _U1out,1
                 ; 0000 0112 //реле 2  инверсно
                 ; 0000 0113 if( (B5upr&0b10000000)==0b10000000 )      {U2out.output=U2out.output&0b11111110;}
                 _0x219:
001c0b 91e0 3076 	LDS  R30,_B5upr
001c0d 78e0      	ANDI R30,LOW(0x80)
001c0e 38e0      	CPI  R30,LOW(0x80)
001c0f f421      	BRNE _0x21A
                +
001c10 91e0 36a6+LDS R30 , _U2out + ( 1 )
                 	__GETB1MN _U2out,1
001c12 7fee      	ANDI R30,0xFE
001c13 c007      	RJMP _0x237
                 ; 0000 0114 else if( (B5upr&0b10000000)==0b00000000 ) {U2out.output=U2out.output|0b00000001;}
                 _0x21A:
001c14 91e0 3076 	LDS  R30,_B5upr
001c16 78e0      	ANDI R30,LOW(0x80)
001c17 f429      	BRNE _0x21C
                +
001c18 91e0 36a6+LDS R30 , _U2out + ( 1 )
                 	__GETB1MN _U2out,1
001c1a 60e1      	ORI  R30,1
                 _0x237:
                +
001c1b 93e0 36a6+STS _U2out + ( 1 ) , R30
                 	__PUTB1MN _U2out,1
                 ; 0000 0115 
                 ; 0000 0116 buferU1_set();
                 _0x21C:
001c1d 940e 1557 	CALL _buferU1_set
                 ; 0000 0117 buferU2_set();
001c1f 940e 158e 	CALL _buferU2_set
                 ; 0000 0118 buferU3_set();
001c21 d9a3      	RCALL _buferU3_set
                 ; 0000 0119 
                 ; 0000 011A //////////////////////////////////////*************************************
                 ; 0000 011B //установка даты времени
                 ; 0000 011C if ((newtime==1)||(newdate==1))
001c22 91a0 3158 	LDS  R26,_newtime
001c24 30a1      	CPI  R26,LOW(0x1)
001c25 f021      	BREQ _0x21E
001c26 91a0 3157 	LDS  R26,_newdate
001c28 30a1      	CPI  R26,LOW(0x1)
001c29 f519      	BRNE _0x21D
                 _0x21E:
                 ; 0000 011D                       {
                 ; 0000 011E 
                 ; 0000 011F                       calcSeconds(date1,time1,0,&X);
001c2a 91e0 3153 	LDS  R30,_date1
001c2c 91f0 3154 	LDS  R31,_date1+1
001c2e 9160 3155 	LDS  R22,_date1+2
001c30 9170 3156 	LDS  R23,_date1+3
001c32 940e 426c 	CALL __PUTPARD1
001c34 940e 38e3 	CALL SUBOPT_0x5B
001c36 940e 426c 	CALL __PUTPARD1
001c38 940e 371b 	CALL SUBOPT_0x1C
001c3a 940e 426c 	CALL __PUTPARD1
001c3c e4af      	LDI  R26,LOW(_X)
001c3d e3b1      	LDI  R27,HIGH(_X)
001c3e 940e 08af 	CALL _calcSeconds
                 ; 0000 0120                       Xsave=X;//последняя установка
001c40 940e 3720 	CALL SUBOPT_0x1D
001c42 e0a1      	LDI  R26,LOW(_Xsave)
001c43 e0b0      	LDI  R27,HIGH(_Xsave)
001c44 940e 4290 	CALL __EEPROMWRD
                 ; 0000 0121                       set_CNTRTC();
001c46 940e 0793 	CALL _set_CNTRTC
                 ; 0000 0122                       newdate=0;
001c48 e0e0      	LDI  R30,LOW(0)
001c49 93e0 3157 	STS  _newdate,R30
                 ; 0000 0123                       newtime=0;
001c4b 93e0 3158 	STS  _newtime,R30
                 ; 0000 0124 
                 ; 0000 0125                       }
                 ; 0000 0126 
                 ; 0000 0127 
                 ; 0000 0128 
                 ; 0000 0129 
                 ; 0000 012A 
                 ; 0000 012B }
                 _0x21D:
001c4d ce6c      	RJMP _0x1E8
                 ; 0000 012C 
                 ; 0000 012D 
                 ; 0000 012E 
                 ; 0000 012F }
                 _0x220:
001c4e cfff      	RJMP _0x220
                 ; .FEND
                 ;
                 
                 	.DSEG
                 
                 	.CSEG
                 _crc7_G100:
                 ; .FSTART _crc7_G100
001c4f 93aa      	ST   -Y,R26
001c50 940e 42e6 	CALL __SAVELOCR4
001c52 e020      	LDI  R18,LOW(0)
001c53 810c      	LDD  R16,Y+4
                 _0x2000005:
001c54 81ad      	LDD  R26,Y+5
001c55 81be      	LDD  R27,Y+5+1
001c56 913d      	LD   R19,X+
001c57 83ad      	STD  Y+5,R26
001c58 83be      	STD  Y+5+1,R27
001c59 e018      	LDI  R17,LOW(8)
                 _0x2000008:
001c5a 0f22      	LSL  R18
001c5b 2fe2      	MOV  R30,R18
001c5c 27e3      	EOR  R30,R19
001c5d 78e0      	ANDI R30,LOW(0x80)
001c5e f011      	BREQ _0x200000A
001c5f e0e9      	LDI  R30,LOW(9)
001c60 272e      	EOR  R18,R30
                 _0x200000A:
001c61 0f33      	LSL  R19
001c62 5011      	SUBI R17,LOW(1)
001c63 f7b1      	BRNE _0x2000008
001c64 5001      	SUBI R16,LOW(1)
001c65 f771      	BRNE _0x2000005
001c66 2fe2      	MOV  R30,R18
001c67 0fee      	LSL  R30
001c68 60e1      	ORI  R30,1
001c69 940e 42ed 	CALL __LOADLOCR4
001c6b c568      	RJMP _0x210001E
                 ; .FEND
                 _wait_ready_G100:
                 ; .FSTART _wait_ready_G100
001c6c 931a      	ST   -Y,R17
001c6d e3e2      	LDI  R30,LOW(50)
001c6e 93e0 36bf 	STS  _timer2_G100,R30
001c70 efef      	LDI  R30,LOW(255)
001c71 93e0 08c3 	STS  2243,R30
                 _0x200000B:
001c73 91e0 08c2 	LDS  R30,2242
001c75 78e0      	ANDI R30,LOW(0x80)
001c76 f3e1      	BREQ _0x200000B
                 _0x200000F:
001c77 efef      	LDI  R30,LOW(255)
001c78 93e0 08c3 	STS  2243,R30
                 _0x2000011:
001c7a 91e0 08c2 	LDS  R30,2242
001c7c 78e0      	ANDI R30,LOW(0x80)
001c7d f3e1      	BREQ _0x2000011
001c7e 9110 08c3 	LDS  R17,2243
001c80 3f1f      	CPI  R17,255
001c81 f021      	BREQ _0x2000014
001c82 91e0 36bf 	LDS  R30,_timer2_G100
001c84 30e0      	CPI  R30,0
001c85 f409      	BRNE _0x2000015
                 _0x2000014:
001c86 c001      	RJMP _0x2000010
                 _0x2000015:
001c87 cfef      	RJMP _0x200000F
                 _0x2000010:
001c88 2fe1      	MOV  R30,R17
001c89 c4c9      	RJMP _0x210001F
                 ; .FEND
                 _deselect_card_G100:
                 ; .FSTART _deselect_card_G100
001c8a e0e1      	LDI  R30,LOW(1)
001c8b 93e0 0645 	STS  1605,R30
001c8d efef      	LDI  R30,LOW(255)
001c8e 93e0 08c3 	STS  2243,R30
                 _0x2000016:
001c90 91e0 08c2 	LDS  R30,2242
001c92 78e0      	ANDI R30,LOW(0x80)
001c93 f3e1      	BREQ _0x2000016
001c94 9508      	RET
                 ; .FEND
                 _rx_datablock_G100:
                 ; .FSTART _rx_datablock_G100
001c95 93ba      	ST   -Y,R27
001c96 93aa      	ST   -Y,R26
001c97 940e 42e6 	CALL __SAVELOCR4
001c99 e1e4      	LDI  R30,LOW(20)
001c9a 93e0 36be 	STS  _timer1_G100,R30
                 _0x200001A:
001c9c efef      	LDI  R30,LOW(255)
001c9d 93e0 08c3 	STS  2243,R30
                 _0x200001C:
001c9f 91e0 08c2 	LDS  R30,2242
001ca1 78e0      	ANDI R30,LOW(0x80)
001ca2 f3e1      	BREQ _0x200001C
001ca3 9110 08c3 	LDS  R17,2243
001ca5 3f1f      	CPI  R17,255
001ca6 f421      	BRNE _0x200001F
001ca7 91e0 36be 	LDS  R30,_timer1_G100
001ca9 30e0      	CPI  R30,0
001caa f409      	BRNE _0x2000020
                 _0x200001F:
001cab c001      	RJMP _0x200001B
                 _0x2000020:
001cac cfef      	RJMP _0x200001A
                 _0x200001B:
001cad 3f1e      	CPI  R17,254
001cae f021      	BREQ _0x2000021
001caf e0e0      	LDI  R30,LOW(0)
001cb0 940e 42ed 	CALL __LOADLOCR4
001cb2 c2f1      	RJMP _0x2100021
                 _0x2000021:
                +
001cb3 812e     +LDD R18 , Y + 6
001cb4 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2000023:
001cb5 efef      	LDI  R30,LOW(255)
001cb6 93e0 08c3 	STS  2243,R30
                 _0x2000025:
001cb8 91e0 08c2 	LDS  R30,2242
001cba 78e0      	ANDI R30,LOW(0x80)
001cbb f3e1      	BREQ _0x2000025
001cbc 933f      	PUSH R19
001cbd 932f      	PUSH R18
                +
001cbe 5f2f     +SUBI R18 , LOW ( - 1 )
001cbf 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001cc0 91e0 08c3 	LDS  R30,2243
001cc2 91af      	POP  R26
001cc3 91bf      	POP  R27
001cc4 93ec      	ST   X,R30
001cc5 efef      	LDI  R30,LOW(255)
001cc6 93e0 08c3 	STS  2243,R30
                 _0x2000028:
001cc8 91e0 08c2 	LDS  R30,2242
001cca 78e0      	ANDI R30,LOW(0x80)
001ccb f3e1      	BREQ _0x2000028
001ccc 933f      	PUSH R19
001ccd 932f      	PUSH R18
                +
001cce 5f2f     +SUBI R18 , LOW ( - 1 )
001ccf 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001cd0 91e0 08c3 	LDS  R30,2243
001cd2 91af      	POP  R26
001cd3 91bf      	POP  R27
001cd4 93ec      	ST   X,R30
001cd5 efef      	LDI  R30,LOW(255)
001cd6 93e0 08c3 	STS  2243,R30
                 _0x200002B:
001cd8 91e0 08c2 	LDS  R30,2242
001cda 78e0      	ANDI R30,LOW(0x80)
001cdb f3e1      	BREQ _0x200002B
001cdc 933f      	PUSH R19
001cdd 932f      	PUSH R18
                +
001cde 5f2f     +SUBI R18 , LOW ( - 1 )
001cdf 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001ce0 91e0 08c3 	LDS  R30,2243
001ce2 91af      	POP  R26
001ce3 91bf      	POP  R27
001ce4 93ec      	ST   X,R30
001ce5 efef      	LDI  R30,LOW(255)
001ce6 93e0 08c3 	STS  2243,R30
                 _0x200002E:
001ce8 91e0 08c2 	LDS  R30,2242
001cea 78e0      	ANDI R30,LOW(0x80)
001ceb f3e1      	BREQ _0x200002E
001cec 933f      	PUSH R19
001ced 932f      	PUSH R18
                +
001cee 5f2f     +SUBI R18 , LOW ( - 1 )
001cef 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001cf0 91e0 08c3 	LDS  R30,2243
001cf2 91af      	POP  R26
001cf3 91bf      	POP  R27
001cf4 93ec      	ST   X,R30
001cf5 81ec      	LDD  R30,Y+4
001cf6 81fd      	LDD  R31,Y+4+1
001cf7 9734      	SBIW R30,4
001cf8 83ec      	STD  Y+4,R30
001cf9 83fd      	STD  Y+4+1,R31
001cfa f009      	BREQ _0x2000024
001cfb cfb9      	RJMP _0x2000023
                 _0x2000024:
001cfc efef      	LDI  R30,LOW(255)
001cfd 93e0 08c3 	STS  2243,R30
                 _0x2000031:
001cff 91e0 08c2 	LDS  R30,2242
001d01 78e0      	ANDI R30,LOW(0x80)
001d02 f3e1      	BREQ _0x2000031
001d03 efef      	LDI  R30,LOW(255)
001d04 93e0 08c3 	STS  2243,R30
                 _0x2000034:
001d06 91e0 08c2 	LDS  R30,2242
001d08 78e0      	ANDI R30,LOW(0x80)
001d09 f3e1      	BREQ _0x2000034
001d0a e0e1      	LDI  R30,LOW(1)
001d0b 940e 42ed 	CALL __LOADLOCR4
001d0d c296      	RJMP _0x2100021
                 ; .FEND
                 _tx_datablock_G100:
                 ; .FSTART _tx_datablock_G100
001d0e 93aa      	ST   -Y,R26
001d0f 940e 42e6 	CALL __SAVELOCR4
001d11 df5a      	RCALL _wait_ready_G100
001d12 3fef      	CPI  R30,LOW(0xFF)
001d13 f021      	BREQ _0x2000037
001d14 e0e0      	LDI  R30,LOW(0)
001d15 940e 42ed 	CALL __LOADLOCR4
001d17 c4bc      	RJMP _0x210001E
                 _0x2000037:
001d18 81ec      	LDD  R30,Y+4
001d19 93e0 08c3 	STS  2243,R30
                 _0x2000038:
001d1b 91e0 08c2 	LDS  R30,2242
001d1d 78e0      	ANDI R30,LOW(0x80)
001d1e f3e1      	BREQ _0x2000038
001d1f 81ac      	LDD  R26,Y+4
001d20 3fad      	CPI  R26,LOW(0xFD)
001d21 f1c1      	BREQ _0x200003B
001d22 e000      	LDI  R16,LOW(0)
                +
001d23 812d     +LDD R18 , Y + 5
001d24 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x200003D:
001d25 01d9      	MOVW R26,R18
                +
001d26 5f2f     +SUBI R18 , LOW ( - 1 )
001d27 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001d28 91ec      	LD   R30,X
001d29 93e0 08c3 	STS  2243,R30
                 _0x200003F:
001d2b 91e0 08c2 	LDS  R30,2242
001d2d 78e0      	ANDI R30,LOW(0x80)
001d2e f3e1      	BREQ _0x200003F
001d2f 01d9      	MOVW R26,R18
                +
001d30 5f2f     +SUBI R18 , LOW ( - 1 )
001d31 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001d32 91ec      	LD   R30,X
001d33 93e0 08c3 	STS  2243,R30
                 _0x2000042:
001d35 91e0 08c2 	LDS  R30,2242
001d37 78e0      	ANDI R30,LOW(0x80)
001d38 f3e1      	BREQ _0x2000042
001d39 5001      	SUBI R16,LOW(1)
001d3a f751      	BRNE _0x200003D
001d3b efef      	LDI  R30,LOW(255)
001d3c 93e0 08c3 	STS  2243,R30
                 _0x2000045:
001d3e 91e0 08c2 	LDS  R30,2242
001d40 78e0      	ANDI R30,LOW(0x80)
001d41 f3e1      	BREQ _0x2000045
001d42 efef      	LDI  R30,LOW(255)
001d43 93e0 08c3 	STS  2243,R30
                 _0x2000048:
001d45 91e0 08c2 	LDS  R30,2242
001d47 78e0      	ANDI R30,LOW(0x80)
001d48 f3e1      	BREQ _0x2000048
001d49 efef      	LDI  R30,LOW(255)
001d4a 93e0 08c3 	STS  2243,R30
                 _0x200004B:
001d4c 91e0 08c2 	LDS  R30,2242
001d4e 78e0      	ANDI R30,LOW(0x80)
001d4f f3e1      	BREQ _0x200004B
001d50 9110 08c3 	LDS  R17,2243
001d52 2fe1      	MOV  R30,R17
001d53 71ef      	ANDI R30,LOW(0x1F)
001d54 30e5      	CPI  R30,LOW(0x5)
001d55 f021      	BREQ _0x200004E
001d56 e0e0      	LDI  R30,LOW(0)
001d57 940e 42ed 	CALL __LOADLOCR4
001d59 c47a      	RJMP _0x210001E
                 _0x200004E:
                 _0x200003B:
001d5a e0e1      	LDI  R30,LOW(1)
001d5b 940e 42ed 	CALL __LOADLOCR4
001d5d c476      	RJMP _0x210001E
                 ; .FEND
                 _send_cmd_G100:
                 ; .FSTART _send_cmd_G100
001d5e 940e 4271 	CALL __PUTPARD2
001d60 931a      	ST   -Y,R17
001d61 930a      	ST   -Y,R16
001d62 81ee      	LDD  R30,Y+6
001d63 78e0      	ANDI R30,LOW(0x80)
001d64 f081      	BREQ _0x200004F
001d65 81ee      	LDD  R30,Y+6
001d66 77ef      	ANDI R30,0x7F
001d67 83ee      	STD  Y+6,R30
001d68 e7e7      	LDI  R30,LOW(119)
001d69 93ea      	ST   -Y,R30
                +
001d6a e0a0     +LDI R26 , LOW ( 0x0 )
001d6b e0b0     +LDI R27 , HIGH ( 0x0 )
001d6c e080     +LDI R24 , BYTE3 ( 0x0 )
001d6d e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001d6e dfef      	RCALL _send_cmd_G100
001d6f 2f0e      	MOV  R16,R30
001d70 3002      	CPI  R16,2
001d71 f018      	BRLO _0x2000050
001d72 8119      	LDD  R17,Y+1
001d73 8108      	LDD  R16,Y+0
001d74 c45f      	RJMP _0x210001E
                 _0x2000050:
                 _0x200004F:
001d75 81ae      	LDD  R26,Y+6
001d76 34ac      	CPI  R26,LOW(0x4C)
001d77 f059      	BREQ _0x2000051
001d78 df11      	RCALL _deselect_card_G100
001d79 e0e1      	LDI  R30,LOW(1)
001d7a 93e0 0646 	STS  1606,R30
001d7c deef      	RCALL _wait_ready_G100
001d7d 3fef      	CPI  R30,LOW(0xFF)
001d7e f021      	BREQ _0x2000052
001d7f efef      	LDI  R30,LOW(255)
001d80 8119      	LDD  R17,Y+1
001d81 8108      	LDD  R16,Y+0
001d82 c451      	RJMP _0x210001E
                 _0x2000052:
                 _0x2000051:
001d83 81ee      	LDD  R30,Y+6
001d84 93e0 08c3 	STS  2243,R30
                 _0x2000053:
001d86 91e0 08c2 	LDS  R30,2242
001d88 78e0      	ANDI R30,LOW(0x80)
001d89 f3e1      	BREQ _0x2000053
001d8a 81ed      	LDD  R30,Y+5
001d8b 93e0 08c3 	STS  2243,R30
                 _0x2000056:
001d8d 91e0 08c2 	LDS  R30,2242
001d8f 78e0      	ANDI R30,LOW(0x80)
001d90 f3e1      	BREQ _0x2000056
001d91 81ec      	LDD  R30,Y+4
001d92 93e0 08c3 	STS  2243,R30
                 _0x2000059:
001d94 91e0 08c2 	LDS  R30,2242
001d96 78e0      	ANDI R30,LOW(0x80)
001d97 f3e1      	BREQ _0x2000059
001d98 81eb      	LDD  R30,Y+3
001d99 93e0 08c3 	STS  2243,R30
                 _0x200005C:
001d9b 91e0 08c2 	LDS  R30,2242
001d9d 78e0      	ANDI R30,LOW(0x80)
001d9e f3e1      	BREQ _0x200005C
001d9f 81ea      	LDD  R30,Y+2
001da0 93e0 08c3 	STS  2243,R30
                 _0x200005F:
001da2 91e0 08c2 	LDS  R30,2242
001da4 78e0      	ANDI R30,LOW(0x80)
001da5 f3e1      	BREQ _0x200005F
001da6 e011      	LDI  R17,LOW(1)
001da7 81ae      	LDD  R26,Y+6
001da8 34a0      	CPI  R26,LOW(0x40)
001da9 f411      	BRNE _0x2000062
001daa e915      	LDI  R17,LOW(149)
001dab c004      	RJMP _0x2000063
                 _0x2000062:
001dac 81ae      	LDD  R26,Y+6
001dad 34a8      	CPI  R26,LOW(0x48)
001dae f409      	BRNE _0x2000064
001daf e817      	LDI  R17,LOW(135)
                 _0x2000064:
                 _0x2000063:
001db0 9310 08c3 	STS  2243,R17
                 _0x2000065:
001db2 91e0 08c2 	LDS  R30,2242
001db4 78e0      	ANDI R30,LOW(0x80)
001db5 f3e1      	BREQ _0x2000065
001db6 81ae      	LDD  R26,Y+6
001db7 34ac      	CPI  R26,LOW(0x4C)
001db8 f439      	BRNE _0x2000068
001db9 efef      	LDI  R30,LOW(255)
001dba 93e0 08c3 	STS  2243,R30
                 _0x2000069:
001dbc 91e0 08c2 	LDS  R30,2242
001dbe 78e0      	ANDI R30,LOW(0x80)
001dbf f3e1      	BREQ _0x2000069
                 _0x2000068:
001dc0 ef1f      	LDI  R17,LOW(255)
                 _0x200006D:
001dc1 efef      	LDI  R30,LOW(255)
001dc2 93e0 08c3 	STS  2243,R30
                 _0x200006F:
001dc4 91e0 08c2 	LDS  R30,2242
001dc6 78e0      	ANDI R30,LOW(0x80)
001dc7 f3e1      	BREQ _0x200006F
001dc8 9100 08c3 	LDS  R16,2243
001dca ff07      	SBRS R16,7
001dcb c002      	RJMP _0x2000072
001dcc 5011      	SUBI R17,LOW(1)
001dcd f409      	BRNE _0x2000073
                 _0x2000072:
001dce c001      	RJMP _0x200006E
                 _0x2000073:
001dcf cff1      	RJMP _0x200006D
                 _0x200006E:
001dd0 2fe0      	MOV  R30,R16
001dd1 8119      	LDD  R17,Y+1
001dd2 8108      	LDD  R16,Y+0
001dd3 c400      	RJMP _0x210001E
                 ; .FEND
                 _rx_spi4_G100:
                 ; .FSTART _rx_spi4_G100
001dd4 93ba      	ST   -Y,R27
001dd5 93aa      	ST   -Y,R26
001dd6 931a      	ST   -Y,R17
001dd7 e014      	LDI  R17,4
                 _0x2000075:
001dd8 efef      	LDI  R30,LOW(255)
001dd9 93e0 08c3 	STS  2243,R30
                 _0x2000077:
001ddb 91e0 08c2 	LDS  R30,2242
001ddd 78e0      	ANDI R30,LOW(0x80)
001dde f3e1      	BREQ _0x2000077
001ddf 81a9      	LDD  R26,Y+1
001de0 81ba      	LDD  R27,Y+1+1
001de1 9611      	ADIW R26,1
001de2 83a9      	STD  Y+1,R26
001de3 83ba      	STD  Y+1+1,R27
001de4 9711      	SBIW R26,1
001de5 91e0 08c3 	LDS  R30,2243
001de7 93ec      	ST   X,R30
001de8 5011      	SUBI R17,LOW(1)
001de9 f771      	BRNE _0x2000075
001dea c4d3      	RJMP _0x210001C
                 ; .FEND
                 _disk_initialize:
                 ; .FSTART _disk_initialize
001deb 93aa      	ST   -Y,R26
001dec 9724      	SBIW R28,4
001ded 940e 42e6 	CALL __SAVELOCR4
001def 85e8      	LDD  R30,Y+8
001df0 30e0      	CPI  R30,0
001df1 f011      	BREQ _0x200007A
001df2 e0e1      	LDI  R30,LOW(1)
001df3 c0c9      	RJMP _0x2100024
                 _0x200007A:
001df4 e0ea      	LDI  R30,LOW(10)
001df5 93e0 36be 	STS  _timer1_G100,R30
                 _0x200007B:
001df7 91e0 36be 	LDS  R30,_timer1_G100
001df9 30e0      	CPI  R30,0
001dfa f7e1      	BRNE _0x200007B
001dfb 91e0 36bd 	LDS  R30,_status_G100
001dfd 70e2      	ANDI R30,LOW(0x2)
001dfe f009      	BREQ _0x200007E
001dff c0bb      	RJMP _0x2100023
                 _0x200007E:
001e00 e0e1      	LDI  R30,LOW(1)
001e01 93e0 0641 	STS  1601,R30
001e03 93e0 0645 	STS  1605,R30
001e05 eae0      	LDI  R30,LOW(160)
001e06 93e0 0646 	STS  1606,R30
001e08 e4e0      	LDI  R30,LOW(64)
001e09 93e0 0642 	STS  1602,R30
001e0b e1e8      	LDI  R30,LOW(24)
001e0c 93e0 0656 	STS  1622,R30
001e0e ebe0      	LDI  R30,LOW(176)
001e0f 93e0 0641 	STS  1601,R30
001e11 e5e3      	LDI  R30,LOW(83)
001e12 93e0 08c0 	STS  2240,R30
001e14 e035      	LDI  R19,LOW(5)
                 _0x2000080:
001e15 e01a      	LDI  R17,LOW(10)
                 _0x2000083:
001e16 efef      	LDI  R30,LOW(255)
001e17 93e0 08c3 	STS  2243,R30
                 _0x2000085:
001e19 91e0 08c2 	LDS  R30,2242
001e1b 78e0      	ANDI R30,LOW(0x80)
001e1c f3e1      	BREQ _0x2000085
001e1d 5011      	SUBI R17,LOW(1)
001e1e f7b9      	BRNE _0x2000083
001e1f e4e0      	LDI  R30,LOW(64)
001e20 93ea      	ST   -Y,R30
                +
001e21 e0a0     +LDI R26 , LOW ( 0x0 )
001e22 e0b0     +LDI R27 , HIGH ( 0x0 )
001e23 e080     +LDI R24 , BYTE3 ( 0x0 )
001e24 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001e25 df38      	RCALL _send_cmd_G100
001e26 2f0e      	MOV  R16,R30
001e27 5031      	SUBI R19,LOW(1)
001e28 3001      	CPI  R16,1
001e29 f011      	BREQ _0x2000088
001e2a 3030      	CPI  R19,0
001e2b f409      	BRNE _0x2000089
                 _0x2000088:
001e2c c001      	RJMP _0x2000081
                 _0x2000089:
001e2d cfe7      	RJMP _0x2000080
                 _0x2000081:
001e2e e030      	LDI  R19,LOW(0)
001e2f 3001      	CPI  R16,1
001e30 f009      	BREQ PC+2
001e31 c068      	RJMP _0x200008A
001e32 e6e4      	LDI  R30,LOW(100)
001e33 93e0 36be 	STS  _timer1_G100,R30
001e35 e4e8      	LDI  R30,LOW(72)
001e36 93ea      	ST   -Y,R30
                +
001e37 eaaa     +LDI R26 , LOW ( 0x1AA )
001e38 e0b1     +LDI R27 , HIGH ( 0x1AA )
001e39 e080     +LDI R24 , BYTE3 ( 0x1AA )
001e3a e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
001e3b df22      	RCALL _send_cmd_G100
001e3c 30e1      	CPI  R30,LOW(0x1)
001e3d f591      	BRNE _0x200008B
001e3e 01de      	MOVW R26,R28
001e3f 9614      	ADIW R26,4
001e40 df93      	RCALL _rx_spi4_G100
001e41 81ae      	LDD  R26,Y+6
001e42 30a1      	CPI  R26,LOW(0x1)
001e43 f419      	BRNE _0x200008D
001e44 81af      	LDD  R26,Y+7
001e45 3aaa      	CPI  R26,LOW(0xAA)
001e46 f009      	BREQ _0x200008E
                 _0x200008D:
001e47 c027      	RJMP _0x200008C
                 _0x200008E:
                 _0x200008F:
001e48 91e0 36be 	LDS  R30,_timer1_G100
001e4a 30e0      	CPI  R30,0
001e4b f049      	BREQ _0x2000092
001e4c eee9      	LDI  R30,LOW(233)
001e4d 93ea      	ST   -Y,R30
                +
001e4e e0a0     +LDI R26 , LOW ( 0x40000000 )
001e4f e0b0     +LDI R27 , HIGH ( 0x40000000 )
001e50 e080     +LDI R24 , BYTE3 ( 0x40000000 )
001e51 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
001e52 df0b      	RCALL _send_cmd_G100
001e53 30e0      	CPI  R30,0
001e54 f409      	BRNE _0x2000093
                 _0x2000092:
001e55 c001      	RJMP _0x2000091
                 _0x2000093:
001e56 cff1      	RJMP _0x200008F
                 _0x2000091:
001e57 91e0 36be 	LDS  R30,_timer1_G100
001e59 30e0      	CPI  R30,0
001e5a f049      	BREQ _0x2000095
001e5b e7ea      	LDI  R30,LOW(122)
001e5c 93ea      	ST   -Y,R30
                +
001e5d e0a0     +LDI R26 , LOW ( 0x0 )
001e5e e0b0     +LDI R27 , HIGH ( 0x0 )
001e5f e080     +LDI R24 , BYTE3 ( 0x0 )
001e60 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001e61 defc      	RCALL _send_cmd_G100
001e62 30e0      	CPI  R30,0
001e63 f009      	BREQ _0x2000096
                 _0x2000095:
001e64 c00a      	RJMP _0x2000094
                 _0x2000096:
001e65 01de      	MOVW R26,R28
001e66 9614      	ADIW R26,4
001e67 df6c      	RCALL _rx_spi4_G100
001e68 81ec      	LDD  R30,Y+4
001e69 74e0      	ANDI R30,LOW(0x40)
001e6a f011      	BREQ _0x2000097
001e6b e0ec      	LDI  R30,LOW(12)
001e6c c001      	RJMP _0x2000098
                 _0x2000097:
001e6d e0e4      	LDI  R30,LOW(4)
                 _0x2000098:
001e6e 2f3e      	MOV  R19,R30
                 _0x2000094:
                 _0x200008C:
001e6f c02a      	RJMP _0x200009A
                 _0x200008B:
001e70 eee9      	LDI  R30,LOW(233)
001e71 93ea      	ST   -Y,R30
                +
001e72 e0a0     +LDI R26 , LOW ( 0x0 )
001e73 e0b0     +LDI R27 , HIGH ( 0x0 )
001e74 e080     +LDI R24 , BYTE3 ( 0x0 )
001e75 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001e76 dee7      	RCALL _send_cmd_G100
001e77 30e2      	CPI  R30,LOW(0x2)
001e78 f418      	BRSH _0x200009B
001e79 e032      	LDI  R19,LOW(2)
001e7a ee09      	LDI  R16,LOW(233)
001e7b c002      	RJMP _0x200009C
                 _0x200009B:
001e7c e031      	LDI  R19,LOW(1)
001e7d e401      	LDI  R16,LOW(65)
                 _0x200009C:
                 _0x200009D:
001e7e 91e0 36be 	LDS  R30,_timer1_G100
001e80 30e0      	CPI  R30,0
001e81 f041      	BREQ _0x20000A0
001e82 930a      	ST   -Y,R16
                +
001e83 e0a0     +LDI R26 , LOW ( 0x0 )
001e84 e0b0     +LDI R27 , HIGH ( 0x0 )
001e85 e080     +LDI R24 , BYTE3 ( 0x0 )
001e86 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001e87 ded6      	RCALL _send_cmd_G100
001e88 30e0      	CPI  R30,0
001e89 f409      	BRNE _0x20000A1
                 _0x20000A0:
001e8a c001      	RJMP _0x200009F
                 _0x20000A1:
001e8b cff2      	RJMP _0x200009D
                 _0x200009F:
001e8c 91e0 36be 	LDS  R30,_timer1_G100
001e8e 30e0      	CPI  R30,0
001e8f f049      	BREQ _0x20000A3
001e90 e5e0      	LDI  R30,LOW(80)
001e91 93ea      	ST   -Y,R30
                +
001e92 e0a0     +LDI R26 , LOW ( 0x200 )
001e93 e0b2     +LDI R27 , HIGH ( 0x200 )
001e94 e080     +LDI R24 , BYTE3 ( 0x200 )
001e95 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
001e96 dec7      	RCALL _send_cmd_G100
001e97 30e0      	CPI  R30,0
001e98 f009      	BREQ _0x20000A2
                 _0x20000A3:
001e99 e030      	LDI  R19,LOW(0)
                 _0x20000A2:
                 _0x200009A:
                 _0x200008A:
001e9a 9330 36c0 	STS  _card_type_G100,R19
001e9c dded      	RCALL _deselect_card_G100
001e9d 3030      	CPI  R19,0
001e9e f049      	BREQ _0x20000A5
001e9f 91e0 36bd 	LDS  R30,_status_G100
001ea1 7fee      	ANDI R30,0xFE
001ea2 93e0 36bd 	STS  _status_G100,R30
001ea4 ede0      	LDI  R30,LOW(208)
001ea5 93e0 08c0 	STS  2240,R30
001ea7 c013      	RJMP _0x20000A6
                 _0x20000A5:
001ea8 e0e1      	LDI  R30,LOW(1)
001ea9 93e0 0646 	STS  1606,R30
001eab ddc0      	RCALL _wait_ready_G100
001eac dddd      	RCALL _deselect_card_G100
001ead e0e0      	LDI  R30,LOW(0)
001eae 93e0 08c0 	STS  2240,R30
001eb0 efe0      	LDI  R30,LOW(240)
001eb1 93e0 0642 	STS  1602,R30
001eb3 e0e1      	LDI  R30,LOW(1)
001eb4 93e0 0642 	STS  1602,R30
001eb6 91e0 36bd 	LDS  R30,_status_G100
001eb8 60e1      	ORI  R30,1
001eb9 93e0 36bd 	STS  _status_G100,R30
                 _0x20000A6:
                 _0x2100023:
001ebb 91e0 36bd 	LDS  R30,_status_G100
                 _0x2100024:
001ebd 940e 42ed 	CALL __LOADLOCR4
001ebf 9629      	ADIW R28,9
001ec0 9508      	RET
                 ; .FEND
                 _disk_status:
                 ; .FSTART _disk_status
001ec1 93aa      	ST   -Y,R26
001ec2 81e8      	LD   R30,Y
001ec3 30e0      	CPI  R30,0
001ec4 f011      	BREQ _0x20000A7
001ec5 e0e1      	LDI  R30,LOW(1)
001ec6 c002      	RJMP _0x2100022
                 _0x20000A7:
001ec7 91e0 36bd 	LDS  R30,_status_G100
                 _0x2100022:
001ec9 9621      	ADIW R28,1
001eca 9508      	RET
                 ; .FEND
                 _disk_read:
                 ; .FSTART _disk_read
001ecb 93aa      	ST   -Y,R26
001ecc 81ef      	LDD  R30,Y+7
001ecd 30e0      	CPI  R30,0
001ece f419      	BRNE _0x20000A9
001ecf 81e8      	LD   R30,Y
001ed0 30e0      	CPI  R30,0
001ed1 f411      	BRNE _0x20000A8
                 _0x20000A9:
001ed2 e0e4      	LDI  R30,LOW(4)
001ed3 c0d0      	RJMP _0x2100021
                 _0x20000A8:
001ed4 91e0 36bd 	LDS  R30,_status_G100
001ed6 70e1      	ANDI R30,LOW(0x1)
001ed7 f011      	BREQ _0x20000AB
001ed8 e0e3      	LDI  R30,LOW(3)
001ed9 c0ca      	RJMP _0x2100021
                 _0x20000AB:
001eda 91e0 36c0 	LDS  R30,_card_type_G100
001edc 70e8      	ANDI R30,LOW(0x8)
001edd f471      	BRNE _0x20000AC
                +
001ede 81e9     +LDD R30 , Y + 1
001edf 81fa     +LDD R31 , Y + 1 + 1
001ee0 816b     +LDD R22 , Y + 1 + 2
001ee1 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
001ee2 e0a0     +LDI R26 , LOW ( 0x200 )
001ee3 e0b2     +LDI R27 , HIGH ( 0x200 )
001ee4 e080     +LDI R24 , BYTE3 ( 0x200 )
001ee5 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
001ee6 940e 4171 	CALL __MULD12U
                +
001ee8 83e9     +STD Y + 1 , R30
001ee9 83fa     +STD Y + 1 + 1 , R31
001eea 836b     +STD Y + 1 + 2 , R22
001eeb 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20000AC:
001eec 81a8      	LD   R26,Y
001eed 30a1      	CPI  R26,LOW(0x1)
001eee f4a9      	BRNE _0x20000AD
001eef e5e1      	LDI  R30,LOW(81)
001ef0 93ea      	ST   -Y,R30
                +
001ef1 81aa     +LDD R26 , Y + 2
001ef2 81bb     +LDD R27 , Y + 2 + 1
001ef3 818c     +LDD R24 , Y + 2 + 2
001ef4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001ef5 de68      	RCALL _send_cmd_G100
001ef6 30e0      	CPI  R30,0
001ef7 f459      	BRNE _0x20000AE
001ef8 81ed      	LDD  R30,Y+5
001ef9 81fe      	LDD  R31,Y+5+1
001efa 93fa      	ST   -Y,R31
001efb 93ea      	ST   -Y,R30
001efc e0a0      	LDI  R26,LOW(512)
001efd e0b2      	LDI  R27,HIGH(512)
001efe dd96      	RCALL _rx_datablock_G100
001eff 30e0      	CPI  R30,0
001f00 f011      	BREQ _0x20000AF
001f01 e0e0      	LDI  R30,LOW(0)
001f02 83e8      	ST   Y,R30
                 _0x20000AF:
                 _0x20000AE:
001f03 c023      	RJMP _0x20000B0
                 _0x20000AD:
001f04 e5e2      	LDI  R30,LOW(82)
001f05 93ea      	ST   -Y,R30
                +
001f06 81aa     +LDD R26 , Y + 2
001f07 81bb     +LDD R27 , Y + 2 + 1
001f08 818c     +LDD R24 , Y + 2 + 2
001f09 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001f0a de53      	RCALL _send_cmd_G100
001f0b 30e0      	CPI  R30,0
001f0c f4d1      	BRNE _0x20000B1
                 _0x20000B3:
001f0d 81ed      	LDD  R30,Y+5
001f0e 81fe      	LDD  R31,Y+5+1
001f0f 93fa      	ST   -Y,R31
001f10 93ea      	ST   -Y,R30
001f11 e0a0      	LDI  R26,LOW(512)
001f12 e0b2      	LDI  R27,HIGH(512)
001f13 dd81      	RCALL _rx_datablock_G100
001f14 30e0      	CPI  R30,0
001f15 f051      	BREQ _0x20000B4
001f16 81ed      	LDD  R30,Y+5
001f17 81fe      	LDD  R31,Y+5+1
001f18 50e0      	SUBI R30,LOW(-512)
001f19 4ffe      	SBCI R31,HIGH(-512)
001f1a 83ed      	STD  Y+5,R30
001f1b 83fe      	STD  Y+5+1,R31
001f1c 81e8      	LD   R30,Y
001f1d 50e1      	SUBI R30,LOW(1)
001f1e 83e8      	ST   Y,R30
001f1f f769      	BRNE _0x20000B3
                 _0x20000B4:
001f20 e4ec      	LDI  R30,LOW(76)
001f21 93ea      	ST   -Y,R30
                +
001f22 e0a0     +LDI R26 , LOW ( 0x0 )
001f23 e0b0     +LDI R27 , HIGH ( 0x0 )
001f24 e080     +LDI R24 , BYTE3 ( 0x0 )
001f25 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001f26 de37      	RCALL _send_cmd_G100
                 _0x20000B1:
                 _0x20000B0:
001f27 dd62      	RCALL _deselect_card_G100
001f28 81e8      	LD   R30,Y
001f29 30e0      	CPI  R30,0
001f2a f011      	BREQ _0x20000B6
001f2b e0e1      	LDI  R30,LOW(1)
001f2c c001      	RJMP _0x20000B7
                 _0x20000B6:
001f2d e0e0      	LDI  R30,LOW(0)
                 _0x20000B7:
001f2e c075      	RJMP _0x2100021
                 ; .FEND
                 _disk_write:
                 ; .FSTART _disk_write
001f2f 93aa      	ST   -Y,R26
001f30 81ef      	LDD  R30,Y+7
001f31 30e0      	CPI  R30,0
001f32 f419      	BRNE _0x20000BA
001f33 81e8      	LD   R30,Y
001f34 30e0      	CPI  R30,0
001f35 f411      	BRNE _0x20000B9
                 _0x20000BA:
001f36 e0e4      	LDI  R30,LOW(4)
001f37 c06c      	RJMP _0x2100021
                 _0x20000B9:
001f38 91e0 36bd 	LDS  R30,_status_G100
001f3a 70e1      	ANDI R30,LOW(0x1)
001f3b f011      	BREQ _0x20000BC
001f3c e0e3      	LDI  R30,LOW(3)
001f3d c066      	RJMP _0x2100021
                 _0x20000BC:
001f3e 91e0 36bd 	LDS  R30,_status_G100
001f40 70e4      	ANDI R30,LOW(0x4)
001f41 f011      	BREQ _0x20000BD
001f42 e0e2      	LDI  R30,LOW(2)
001f43 c060      	RJMP _0x2100021
                 _0x20000BD:
001f44 91e0 36c0 	LDS  R30,_card_type_G100
001f46 70e8      	ANDI R30,LOW(0x8)
001f47 f471      	BRNE _0x20000BE
                +
001f48 81e9     +LDD R30 , Y + 1
001f49 81fa     +LDD R31 , Y + 1 + 1
001f4a 816b     +LDD R22 , Y + 1 + 2
001f4b 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
001f4c e0a0     +LDI R26 , LOW ( 0x200 )
001f4d e0b2     +LDI R27 , HIGH ( 0x200 )
001f4e e080     +LDI R24 , BYTE3 ( 0x200 )
001f4f e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
001f50 940e 4171 	CALL __MULD12U
                +
001f52 83e9     +STD Y + 1 , R30
001f53 83fa     +STD Y + 1 + 1 , R31
001f54 836b     +STD Y + 1 + 2 , R22
001f55 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20000BE:
001f56 81a8      	LD   R26,Y
001f57 30a1      	CPI  R26,LOW(0x1)
001f58 f4a1      	BRNE _0x20000BF
001f59 e5e8      	LDI  R30,LOW(88)
001f5a 93ea      	ST   -Y,R30
                +
001f5b 81aa     +LDD R26 , Y + 2
001f5c 81bb     +LDD R27 , Y + 2 + 1
001f5d 818c     +LDD R24 , Y + 2 + 2
001f5e 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001f5f ddfe      	RCALL _send_cmd_G100
001f60 30e0      	CPI  R30,0
001f61 f451      	BRNE _0x20000C0
001f62 81ed      	LDD  R30,Y+5
001f63 81fe      	LDD  R31,Y+5+1
001f64 93fa      	ST   -Y,R31
001f65 93ea      	ST   -Y,R30
001f66 efae      	LDI  R26,LOW(254)
001f67 dda6      	RCALL _tx_datablock_G100
001f68 30e0      	CPI  R30,0
001f69 f011      	BREQ _0x20000C1
001f6a e0e0      	LDI  R30,LOW(0)
001f6b 83e8      	ST   Y,R30
                 _0x20000C1:
                 _0x20000C0:
001f6c c030      	RJMP _0x20000C2
                 _0x20000BF:
001f6d 91e0 36c0 	LDS  R30,_card_type_G100
001f6f 70e6      	ANDI R30,LOW(0x6)
001f70 f039      	BREQ _0x20000C3
001f71 ede7      	LDI  R30,LOW(215)
001f72 93ea      	ST   -Y,R30
001f73 81a9      	LDD  R26,Y+1
001f74 27bb      	CLR  R27
001f75 2788      	CLR  R24
001f76 2799      	CLR  R25
001f77 dde6      	RCALL _send_cmd_G100
                 _0x20000C3:
001f78 e5e9      	LDI  R30,LOW(89)
001f79 93ea      	ST   -Y,R30
                +
001f7a 81aa     +LDD R26 , Y + 2
001f7b 81bb     +LDD R27 , Y + 2 + 1
001f7c 818c     +LDD R24 , Y + 2 + 2
001f7d 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001f7e dddf      	RCALL _send_cmd_G100
001f7f 30e0      	CPI  R30,0
001f80 f4e1      	BRNE _0x20000C4
                 _0x20000C6:
001f81 81ed      	LDD  R30,Y+5
001f82 81fe      	LDD  R31,Y+5+1
001f83 93fa      	ST   -Y,R31
001f84 93ea      	ST   -Y,R30
001f85 efac      	LDI  R26,LOW(252)
001f86 dd87      	RCALL _tx_datablock_G100
001f87 30e0      	CPI  R30,0
001f88 f051      	BREQ _0x20000C7
001f89 81ed      	LDD  R30,Y+5
001f8a 81fe      	LDD  R31,Y+5+1
001f8b 50e0      	SUBI R30,LOW(-512)
001f8c 4ffe      	SBCI R31,HIGH(-512)
001f8d 83ed      	STD  Y+5,R30
001f8e 83fe      	STD  Y+5+1,R31
001f8f 81e8      	LD   R30,Y
001f90 50e1      	SUBI R30,LOW(1)
001f91 83e8      	ST   Y,R30
001f92 f771      	BRNE _0x20000C6
                 _0x20000C7:
001f93 e0e0      	LDI  R30,LOW(0)
001f94 e0f0      	LDI  R31,HIGH(0)
001f95 93fa      	ST   -Y,R31
001f96 93ea      	ST   -Y,R30
001f97 efad      	LDI  R26,LOW(253)
001f98 dd75      	RCALL _tx_datablock_G100
001f99 30e0      	CPI  R30,0
001f9a f411      	BRNE _0x20000C9
001f9b e0e1      	LDI  R30,LOW(1)
001f9c 83e8      	ST   Y,R30
                 _0x20000C9:
                 _0x20000C4:
                 _0x20000C2:
001f9d dcec      	RCALL _deselect_card_G100
001f9e 81e8      	LD   R30,Y
001f9f 30e0      	CPI  R30,0
001fa0 f011      	BREQ _0x20000CA
001fa1 e0e1      	LDI  R30,LOW(1)
001fa2 c001      	RJMP _0x20000CB
                 _0x20000CA:
001fa3 e0e0      	LDI  R30,LOW(0)
                 _0x20000CB:
                 _0x2100021:
001fa4 9628      	ADIW R28,8
001fa5 9508      	RET
                 ; .FEND
                 _disk_ioctl:
                 ; .FSTART _disk_ioctl
001fa6 93ba      	ST   -Y,R27
001fa7 93aa      	ST   -Y,R26
001fa8 9760      	SBIW R28,16
001fa9 940e 42e6 	CALL __SAVELOCR4
001fab 89ef      	LDD  R30,Y+23
001fac 30e0      	CPI  R30,0
001fad f011      	BREQ _0x20000CD
001fae e0e4      	LDI  R30,LOW(4)
001faf c18b      	RJMP _0x2100020
                 _0x20000CD:
001fb0 91e0 36bd 	LDS  R30,_status_G100
001fb2 70e1      	ANDI R30,LOW(0x1)
001fb3 f011      	BREQ _0x20000CE
001fb4 e0e3      	LDI  R30,LOW(3)
001fb5 c185      	RJMP _0x2100020
                 _0x20000CE:
001fb6 e011      	LDI  R17,LOW(1)
001fb7 89ee      	LDD  R30,Y+22
001fb8 30e0      	CPI  R30,0
001fb9 f441      	BRNE _0x20000D2
001fba e0e1      	LDI  R30,LOW(1)
001fbb 93e0 0646 	STS  1606,R30
001fbd dcae      	RCALL _wait_ready_G100
001fbe 3fef      	CPI  R30,LOW(0xFF)
001fbf f409      	BRNE _0x20000D3
001fc0 e010      	LDI  R17,LOW(0)
                 _0x20000D3:
001fc1 c177      	RJMP _0x20000D1
                 _0x20000D2:
001fc2 30e1      	CPI  R30,LOW(0x1)
001fc3 f009      	BREQ PC+2
001fc4 c05b      	RJMP _0x20000D4
001fc5 e4e9      	LDI  R30,LOW(73)
001fc6 93ea      	ST   -Y,R30
                +
001fc7 e0a0     +LDI R26 , LOW ( 0x0 )
001fc8 e0b0     +LDI R27 , HIGH ( 0x0 )
001fc9 e080     +LDI R24 , BYTE3 ( 0x0 )
001fca e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001fcb dd92      	RCALL _send_cmd_G100
001fcc 30e0      	CPI  R30,0
001fcd f449      	BRNE _0x20000D6
001fce 01fe      	MOVW R30,R28
001fcf 9634      	ADIW R30,4
001fd0 93fa      	ST   -Y,R31
001fd1 93ea      	ST   -Y,R30
001fd2 e1a0      	LDI  R26,LOW(16)
001fd3 e0b0      	LDI  R27,0
001fd4 dcc0      	RCALL _rx_datablock_G100
001fd5 30e0      	CPI  R30,0
001fd6 f409      	BRNE _0x20000D7
                 _0x20000D6:
001fd7 c047      	RJMP _0x20000D5
                 _0x20000D7:
001fd8 81ec      	LDD  R30,Y+4
001fd9 95e2      	SWAP R30
001fda 70ef      	ANDI R30,0xF
001fdb 95e6      	LSR  R30
001fdc 95e6      	LSR  R30
001fdd 30e1      	CPI  R30,LOW(0x1)
001fde f469      	BRNE _0x20000D8
001fdf e0e0      	LDI  R30,0
001fe0 85fc      	LDD  R31,Y+12
001fe1 85ad      	LDD  R26,Y+13
001fe2 e0b0      	LDI  R27,0
001fe3 0fea      	ADD  R30,R26
001fe4 1ffb      	ADC  R31,R27
001fe5 9631      	ADIW R30,1
001fe6 019f      	MOVW R18,R30
001fe7 01d9      	MOVW R26,R18
001fe8 2788      	CLR  R24
001fe9 2799      	CLR  R25
001fea e0ea      	LDI  R30,LOW(10)
001feb c02c      	RJMP _0x2000104
                 _0x20000D8:
001fec 85e9      	LDD  R30,Y+9
001fed 70ef      	ANDI R30,LOW(0xF)
001fee 2fae      	MOV  R26,R30
001fef 85ee      	LDD  R30,Y+14
001ff0 78e0      	ANDI R30,LOW(0x80)
001ff1 1fee      	ROL  R30
001ff2 e0e0      	LDI  R30,0
001ff3 1fee      	ROL  R30
001ff4 0fae      	ADD  R26,R30
001ff5 85ed      	LDD  R30,Y+13
001ff6 70e3      	ANDI R30,LOW(0x3)
001ff7 0fee      	LSL  R30
001ff8 0fea      	ADD  R30,R26
001ff9 5fee      	SUBI R30,-LOW(2)
001ffa 2f0e      	MOV  R16,R30
001ffb 85ec      	LDD  R30,Y+12
001ffc 95e2      	SWAP R30
001ffd 70ef      	ANDI R30,0xF
001ffe 95e6      	LSR  R30
001fff 95e6      	LSR  R30
002000 2fae      	MOV  R26,R30
002001 85eb      	LDD  R30,Y+11
002002 e0f0      	LDI  R31,0
002003 940e 4129 	CALL __LSLW2
002005 e0b0      	LDI  R27,0
002006 0fae      	ADD  R26,R30
002007 1fbf      	ADC  R27,R31
002008 85ea      	LDD  R30,Y+10
002009 70e3      	ANDI R30,LOW(0x3)
00200a e0f0      	LDI  R31,0
00200b 940e 4129 	CALL __LSLW2
00200d 2ffe      	MOV  R31,R30
00200e e0e0      	LDI  R30,0
00200f 0fea      	ADD  R30,R26
002010 1ffb      	ADC  R31,R27
002011 9631      	ADIW R30,1
002012 019f      	MOVW R18,R30
002013 01d9      	MOVW R26,R18
002014 2788      	CLR  R24
002015 2799      	CLR  R25
002016 2fe0      	MOV  R30,R16
002017 50e9      	SUBI R30,LOW(9)
                 _0x2000104:
002018 940e 4101 	CALL __LSLD12
00201a 89ac      	LDD  R26,Y+20
00201b 89bd      	LDD  R27,Y+20+1
00201c 940e 424a 	CALL __PUTDP1
00201e e010      	LDI  R17,LOW(0)
                 _0x20000D5:
00201f c119      	RJMP _0x20000D1
                 _0x20000D4:
002020 30e2      	CPI  R30,LOW(0x2)
002021 f441      	BRNE _0x20000DA
002022 89ac      	LDD  R26,Y+20
002023 89bd      	LDD  R27,Y+20+1
002024 e0e0      	LDI  R30,LOW(512)
002025 e0f2      	LDI  R31,HIGH(512)
002026 93ed      	ST   X+,R30
002027 93fc      	ST   X,R31
002028 e010      	LDI  R17,LOW(0)
002029 c10f      	RJMP _0x20000D1
                 _0x20000DA:
00202a 30e3      	CPI  R30,LOW(0x3)
00202b f009      	BREQ PC+2
00202c c0af      	RJMP _0x20000DB
00202d 91e0 36c0 	LDS  R30,_card_type_G100
00202f 70e4      	ANDI R30,LOW(0x4)
002030 f1a1      	BREQ _0x20000DC
002031 eced      	LDI  R30,LOW(205)
002032 93ea      	ST   -Y,R30
                +
002033 e0a0     +LDI R26 , LOW ( 0x0 )
002034 e0b0     +LDI R27 , HIGH ( 0x0 )
002035 e080     +LDI R24 , BYTE3 ( 0x0 )
002036 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
002037 dd26      	RCALL _send_cmd_G100
002038 30e0      	CPI  R30,0
002039 f551      	BRNE _0x20000DD
00203a efef      	LDI  R30,LOW(255)
00203b 93e0 08c3 	STS  2243,R30
                 _0x20000DE:
00203d 91e0 08c2 	LDS  R30,2242
00203f 78e0      	ANDI R30,LOW(0x80)
002040 f3e1      	BREQ _0x20000DE
002041 01fe      	MOVW R30,R28
002042 9634      	ADIW R30,4
002043 93fa      	ST   -Y,R31
002044 93ea      	ST   -Y,R30
002045 e1a0      	LDI  R26,LOW(16)
002046 e0b0      	LDI  R27,0
002047 dc4d      	RCALL _rx_datablock_G100
002048 30e0      	CPI  R30,0
002049 f0d1      	BREQ _0x20000E1
00204a e300      	LDI  R16,LOW(48)
                 _0x20000E3:
00204b 3000      	CPI  R16,0
00204c f049      	BREQ _0x20000E4
00204d efef      	LDI  R30,LOW(255)
00204e 93e0 08c3 	STS  2243,R30
                 _0x20000E5:
002050 91e0 08c2 	LDS  R30,2242
002052 78e0      	ANDI R30,LOW(0x80)
002053 f3e1      	BREQ _0x20000E5
002054 5001      	SUBI R16,1
002055 cff5      	RJMP _0x20000E3
                 _0x20000E4:
002056 85ee      	LDD  R30,Y+14
002057 95e2      	SWAP R30
002058 70ef      	ANDI R30,0xF
                +
002059 e1a0     +LDI R26 , LOW ( 0x10 )
00205a e0b0     +LDI R27 , HIGH ( 0x10 )
00205b e080     +LDI R24 , BYTE3 ( 0x10 )
00205c e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00205d 940e 4101 	CALL __LSLD12
00205f 89ac      	LDD  R26,Y+20
002060 89bd      	LDD  R27,Y+20+1
002061 940e 424a 	CALL __PUTDP1
002063 e010      	LDI  R17,LOW(0)
                 _0x20000E1:
                 _0x20000DD:
002064 c076      	RJMP _0x20000E8
                 _0x20000DC:
002065 e4e9      	LDI  R30,LOW(73)
002066 93ea      	ST   -Y,R30
                +
002067 e0a0     +LDI R26 , LOW ( 0x0 )
002068 e0b0     +LDI R27 , HIGH ( 0x0 )
002069 e080     +LDI R24 , BYTE3 ( 0x0 )
00206a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00206b dcf2      	RCALL _send_cmd_G100
00206c 30e0      	CPI  R30,0
00206d f009      	BREQ PC+2
00206e c06c      	RJMP _0x20000E9
00206f 01fe      	MOVW R30,R28
002070 9634      	ADIW R30,4
002071 93fa      	ST   -Y,R31
002072 93ea      	ST   -Y,R30
002073 e1a0      	LDI  R26,LOW(16)
002074 e0b0      	LDI  R27,0
002075 dc1f      	RCALL _rx_datablock_G100
002076 30e0      	CPI  R30,0
002077 f409      	BRNE PC+2
002078 c062      	RJMP _0x20000EA
002079 91e0 36c0 	LDS  R30,_card_type_G100
00207b 70e2      	ANDI R30,LOW(0x2)
00207c f151      	BREQ _0x20000EB
00207d 85ee      	LDD  R30,Y+14
00207e 73ef      	ANDI R30,LOW(0x3F)
00207f 27ff      	CLR  R31
002080 2766      	CLR  R22
002081 2777      	CLR  R23
002082 940e 413c 	CALL __LSLD1
002084 937f      	PUSH R23
002085 936f      	PUSH R22
002086 93ff      	PUSH R31
002087 93ef      	PUSH R30
002088 85ef      	LDD  R30,Y+15
002089 78e0      	ANDI R30,LOW(0x80)
00208a 27ff      	CLR  R31
00208b 2766      	CLR  R22
00208c 2777      	CLR  R23
00208d 01df      	MOVW R26,R30
00208e 01cb      	MOVW R24,R22
00208f e0e7      	LDI  R30,LOW(7)
002090 940e 4119 	CALL __LSRD12
002092 91af      	POP  R26
002093 91bf      	POP  R27
002094 918f      	POP  R24
002095 919f      	POP  R25
002096 940e 40d2 	CALL __ADDD12
                +
002098 5fef     +SUBI R30 , LOW ( - 1 )
002099 4fff     +SBCI R31 , HIGH ( - 1 )
00209a 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00209b 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00209c 01df      	MOVW R26,R30
00209d 01cb      	MOVW R24,R22
00209e 89e9      	LDD  R30,Y+17
00209f 95e2      	SWAP R30
0020a0 70ef      	ANDI R30,0xF
0020a1 95e6      	LSR  R30
0020a2 95e6      	LSR  R30
0020a3 50e1      	SUBI R30,LOW(1)
0020a4 940e 4101 	CALL __LSLD12
0020a6 c02f      	RJMP _0x2000105
                 _0x20000EB:
0020a7 85ee      	LDD  R30,Y+14
0020a8 77ec      	ANDI R30,LOW(0x7C)
0020a9 95e6      	LSR  R30
0020aa 95e6      	LSR  R30
0020ab 27ff      	CLR  R31
0020ac 2766      	CLR  R22
0020ad 2777      	CLR  R23
                +
0020ae 5fef     +SUBI R30 , LOW ( - 1 )
0020af 4fff     +SBCI R31 , HIGH ( - 1 )
0020b0 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0020b1 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
0020b2 937f      	PUSH R23
0020b3 936f      	PUSH R22
0020b4 93ff      	PUSH R31
0020b5 93ef      	PUSH R30
0020b6 85ef      	LDD  R30,Y+15
0020b7 70e3      	ANDI R30,LOW(0x3)
0020b8 27ff      	CLR  R31
0020b9 2766      	CLR  R22
0020ba 2777      	CLR  R23
0020bb 01df      	MOVW R26,R30
0020bc 01cb      	MOVW R24,R22
0020bd e0e3      	LDI  R30,LOW(3)
0020be 940e 4101 	CALL __LSLD12
0020c0 01df      	MOVW R26,R30
0020c1 01cb      	MOVW R24,R22
0020c2 85ef      	LDD  R30,Y+15
0020c3 7ee0      	ANDI R30,LOW(0xE0)
0020c4 95e2      	SWAP R30
0020c5 70ef      	ANDI R30,0xF
0020c6 95e6      	LSR  R30
0020c7 27ff      	CLR  R31
0020c8 2766      	CLR  R22
0020c9 2777      	CLR  R23
0020ca 940e 40d2 	CALL __ADDD12
                +
0020cc 5fef     +SUBI R30 , LOW ( - 1 )
0020cd 4fff     +SBCI R31 , HIGH ( - 1 )
0020ce 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0020cf 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
0020d0 91af      	POP  R26
0020d1 91bf      	POP  R27
0020d2 918f      	POP  R24
0020d3 919f      	POP  R25
0020d4 940e 4171 	CALL __MULD12U
                 _0x2000105:
0020d6 89ac      	LDD  R26,Y+20
0020d7 89bd      	LDD  R27,Y+20+1
0020d8 940e 424a 	CALL __PUTDP1
0020da e010      	LDI  R17,LOW(0)
                 _0x20000EA:
                 _0x20000E9:
                 _0x20000E8:
0020db c05d      	RJMP _0x20000D1
                 _0x20000DB:
0020dc 30ea      	CPI  R30,LOW(0xA)
0020dd f439      	BRNE _0x20000ED
0020de 91e0 36c0 	LDS  R30,_card_type_G100
0020e0 89ac      	LDD  R26,Y+20
0020e1 89bd      	LDD  R27,Y+20+1
0020e2 93ec      	ST   X,R30
0020e3 e010      	LDI  R17,LOW(0)
0020e4 c054      	RJMP _0x20000D1
                 _0x20000ED:
0020e5 30eb      	CPI  R30,LOW(0xB)
0020e6 f411      	BRNE _0x20000EE
0020e7 e409      	LDI  R16,LOW(73)
0020e8 c003      	RJMP _0x20000EF
                 _0x20000EE:
0020e9 30ec      	CPI  R30,LOW(0xC)
0020ea f501      	BRNE _0x20000F1
0020eb e40a      	LDI  R16,LOW(74)
                 _0x20000EF:
0020ec 930a      	ST   -Y,R16
                +
0020ed e0a0     +LDI R26 , LOW ( 0x0 )
0020ee e0b0     +LDI R27 , HIGH ( 0x0 )
0020ef e080     +LDI R24 , BYTE3 ( 0x0 )
0020f0 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0020f1 dc6c      	RCALL _send_cmd_G100
0020f2 30e0      	CPI  R30,0
0020f3 f4b1      	BRNE _0x20000F2
0020f4 89ec      	LDD  R30,Y+20
0020f5 89fd      	LDD  R31,Y+20+1
0020f6 93fa      	ST   -Y,R31
0020f7 93ea      	ST   -Y,R30
0020f8 e1a0      	LDI  R26,LOW(16)
0020f9 e0b0      	LDI  R27,0
0020fa db9a      	RCALL _rx_datablock_G100
0020fb 30e0      	CPI  R30,0
0020fc f069      	BREQ _0x20000F3
0020fd 89ec      	LDD  R30,Y+20
0020fe 89fd      	LDD  R31,Y+20+1
0020ff 93fa      	ST   -Y,R31
002100 93ea      	ST   -Y,R30
002101 e0af      	LDI  R26,LOW(15)
002102 db4c      	RCALL _crc7_G100
002103 2fae      	MOV  R26,R30
002104 89ec      	LDD  R30,Y+20
002105 89fd      	LDD  R31,Y+20+1
002106 85e7      	LDD  R30,Z+15
002107 17ea      	CP   R30,R26
002108 f409      	BRNE _0x20000F4
002109 e010      	LDI  R17,LOW(0)
                 _0x20000F4:
                 _0x20000F3:
                 _0x20000F2:
00210a c02e      	RJMP _0x20000D1
                 _0x20000F1:
00210b 30ed      	CPI  R30,LOW(0xD)
00210c f471      	BRNE _0x20000F5
00210d e7ea      	LDI  R30,LOW(122)
00210e 93ea      	ST   -Y,R30
                +
00210f e0a0     +LDI R26 , LOW ( 0x0 )
002110 e0b0     +LDI R27 , HIGH ( 0x0 )
002111 e080     +LDI R24 , BYTE3 ( 0x0 )
002112 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
002113 dc4a      	RCALL _send_cmd_G100
002114 30e0      	CPI  R30,0
002115 f421      	BRNE _0x20000F6
002116 89ac      	LDD  R26,Y+20
002117 89bd      	LDD  R27,Y+20+1
002118 dcbb      	RCALL _rx_spi4_G100
002119 e010      	LDI  R17,LOW(0)
                 _0x20000F6:
00211a c01e      	RJMP _0x20000D1
                 _0x20000F5:
00211b 30ee      	CPI  R30,LOW(0xE)
00211c f4d9      	BRNE _0x20000FD
00211d eced      	LDI  R30,LOW(205)
00211e 93ea      	ST   -Y,R30
                +
00211f e0a0     +LDI R26 , LOW ( 0x0 )
002120 e0b0     +LDI R27 , HIGH ( 0x0 )
002121 e080     +LDI R24 , BYTE3 ( 0x0 )
002122 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
002123 dc3a      	RCALL _send_cmd_G100
002124 30e0      	CPI  R30,0
002125 f489      	BRNE _0x20000F8
002126 efef      	LDI  R30,LOW(255)
002127 93e0 08c3 	STS  2243,R30
                 _0x20000F9:
002129 91e0 08c2 	LDS  R30,2242
00212b 78e0      	ANDI R30,LOW(0x80)
00212c f3e1      	BREQ _0x20000F9
00212d 89ec      	LDD  R30,Y+20
00212e 89fd      	LDD  R31,Y+20+1
00212f 93fa      	ST   -Y,R31
002130 93ea      	ST   -Y,R30
002131 e4a0      	LDI  R26,LOW(64)
002132 e0b0      	LDI  R27,0
002133 db61      	RCALL _rx_datablock_G100
002134 30e0      	CPI  R30,0
002135 f009      	BREQ _0x20000FC
002136 e010      	LDI  R17,LOW(0)
                 _0x20000FC:
                 _0x20000F8:
002137 c001      	RJMP _0x20000D1
                 _0x20000FD:
002138 e014      	LDI  R17,LOW(4)
                 _0x20000D1:
002139 db50      	RCALL _deselect_card_G100
00213a 2fe1      	MOV  R30,R17
                 _0x2100020:
00213b 940e 42ed 	CALL __LOADLOCR4
00213d 9668      	ADIW R28,24
00213e 9508      	RET
                 ; .FEND
                 _disk_timerproc:
                 ; .FSTART _disk_timerproc
00213f 931a      	ST   -Y,R17
002140 9110 36be 	LDS  R17,_timer1_G100
002142 3010      	CPI  R17,0
002143 f019      	BREQ _0x20000FE
002144 5011      	SUBI R17,LOW(1)
002145 9310 36be 	STS  _timer1_G100,R17
                 _0x20000FE:
002147 9110 36bf 	LDS  R17,_timer2_G100
002149 3010      	CPI  R17,0
00214a f019      	BREQ _0x20000FF
00214b 5011      	SUBI R17,LOW(1)
00214c 9310 36bf 	STS  _timer2_G100,R17
                 _0x20000FF:
00214e 91e0 36bd 	LDS  R30,_status_G100
002150 7feb      	ANDI R30,0xFB
002151 93e0 36bd 	STS  _status_G100,R30
                 _0x210001F:
002153 9119      	LD   R17,Y+
002154 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _get_fattime:
                 ; .FSTART _get_fattime
002155 9727      	SBIW R28,7
002156 91a0 3000 	LDS  R26,_prtc_get_time
002158 91b0 3001 	LDS  R27,_prtc_get_time+1
00215a 9710      	SBIW R26,0
00215b f031      	BREQ _0x2020004
00215c 91a0 3002 	LDS  R26,_prtc_get_date
00215e 91b0 3003 	LDS  R27,_prtc_get_date+1
002160 9710      	SBIW R26,0
002161 f429      	BRNE _0x2020003
                 _0x2020004:
                +
002162 e0e0     +LDI R30 , LOW ( 0x3A210000 )
002163 e0f0     +LDI R31 , HIGH ( 0x3A210000 )
002164 e261     +LDI R22 , BYTE3 ( 0x3A210000 )
002165 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
002166 c06d      	RJMP _0x210001E
                 _0x2020003:
002167 01fe      	MOVW R30,R28
002168 9636      	ADIW R30,6
002169 93fa      	ST   -Y,R31
00216a 93ea      	ST   -Y,R30
00216b 01fe      	MOVW R30,R28
00216c 9637      	ADIW R30,7
00216d 93fa      	ST   -Y,R31
00216e 93ea      	ST   -Y,R30
00216f 01de      	MOVW R26,R28
002170 9618      	ADIW R26,8
                +
002171 91e0 3000+LDS R30 , _prtc_get_time + ( 0 )
002173 91f0 3001+LDS R31 , _prtc_get_time + ( 0 ) + 1
002175 9509     +ICALL
                 	__CALL1MN _prtc_get_time,0
002176 01fe      	MOVW R30,R28
002177 9633      	ADIW R30,3
002178 93fa      	ST   -Y,R31
002179 93ea      	ST   -Y,R30
00217a 01fe      	MOVW R30,R28
00217b 9634      	ADIW R30,4
00217c 93fa      	ST   -Y,R31
00217d 93ea      	ST   -Y,R30
00217e 01de      	MOVW R26,R28
00217f 9614      	ADIW R26,4
                +
002180 91e0 3002+LDS R30 , _prtc_get_date + ( 0 )
002182 91f0 3003+LDS R31 , _prtc_get_date + ( 0 ) + 1
002184 9509     +ICALL
                 	__CALL1MN _prtc_get_date,0
002185 81e8      	LD   R30,Y
002186 81f9      	LDD  R31,Y+1
002187 5bec      	SUBI R30,LOW(1980)
002188 40f7      	SBCI R31,HIGH(1980)
002189 2766      	CLR  R22
00218a 2777      	CLR  R23
00218b 01df      	MOVW R26,R30
00218c 01cb      	MOVW R24,R22
00218d e1e9      	LDI  R30,LOW(25)
00218e 940e 4101 	CALL __LSLD12
002190 937f      	PUSH R23
002191 936f      	PUSH R22
002192 93ff      	PUSH R31
002193 93ef      	PUSH R30
002194 81ea      	LDD  R30,Y+2
002195 940e 3b4a 	CALL SUBOPT_0xA5
002197 e1e5      	LDI  R30,LOW(21)
002198 940e 4101 	CALL __LSLD12
00219a 91af      	POP  R26
00219b 91bf      	POP  R27
00219c 918f      	POP  R24
00219d 919f      	POP  R25
00219e 940e 40eb 	CALL __ORD12
0021a0 01df      	MOVW R26,R30
0021a1 01cb      	MOVW R24,R22
0021a2 81eb      	LDD  R30,Y+3
0021a3 e0f0      	LDI  R31,0
0021a4 940e 415d 	CALL __CWD1
0021a6 940e 4152 	CALL __LSLD16
0021a8 940e 40eb 	CALL __ORD12
0021aa 937f      	PUSH R23
0021ab 936f      	PUSH R22
0021ac 93ff      	PUSH R31
0021ad 93ef      	PUSH R30
0021ae 81ee      	LDD  R30,Y+6
0021af 940e 3b4a 	CALL SUBOPT_0xA5
0021b1 e0eb      	LDI  R30,LOW(11)
0021b2 940e 4101 	CALL __LSLD12
0021b4 91af      	POP  R26
0021b5 91bf      	POP  R27
0021b6 918f      	POP  R24
0021b7 919f      	POP  R25
0021b8 940e 40eb 	CALL __ORD12
0021ba 937f      	PUSH R23
0021bb 936f      	PUSH R22
0021bc 93ff      	PUSH R31
0021bd 93ef      	PUSH R30
0021be 81ed      	LDD  R30,Y+5
0021bf 940e 3b4a 	CALL SUBOPT_0xA5
0021c1 e0e5      	LDI  R30,LOW(5)
0021c2 940e 4101 	CALL __LSLD12
0021c4 91af      	POP  R26
0021c5 91bf      	POP  R27
0021c6 918f      	POP  R24
0021c7 919f      	POP  R25
0021c8 940e 40eb 	CALL __ORD12
0021ca 01df      	MOVW R26,R30
0021cb 01cb      	MOVW R24,R22
0021cc 81ec      	LDD  R30,Y+4
0021cd e0f0      	LDI  R31,0
0021ce 95f5      	ASR  R31
0021cf 95e7      	ROR  R30
0021d0 940e 415d 	CALL __CWD1
0021d2 940e 40eb 	CALL __ORD12
                 _0x210001E:
0021d4 9627      	ADIW R28,7
0021d5 9508      	RET
                 ; .FEND
                 _chk_chrf_G101:
                 ; .FSTART _chk_chrf_G101
0021d6 93aa      	ST   -Y,R26
0021d7 931a      	ST   -Y,R17
                 _0x2020006:
0021d8 81ea      	LDD  R30,Y+2
0021d9 81fb      	LDD  R31,Y+2+1
0021da 91e4      	LPM  R30,Z
0021db 2f1e      	MOV  R17,R30
0021dc 30e0      	CPI  R30,0
0021dd f019      	BREQ _0x2020009
0021de 81e9      	LDD  R30,Y+1
0021df 17e1      	CP   R30,R17
0021e0 f409      	BRNE _0x202000A
                 _0x2020009:
0021e1 c006      	RJMP _0x2020008
                 _0x202000A:
0021e2 81ea      	LDD  R30,Y+2
0021e3 81fb      	LDD  R31,Y+2+1
0021e4 9631      	ADIW R30,1
0021e5 83ea      	STD  Y+2,R30
0021e6 83fb      	STD  Y+2+1,R31
0021e7 cff0      	RJMP _0x2020006
                 _0x2020008:
0021e8 2fe1      	MOV  R30,R17
0021e9 e0f0      	LDI  R31,0
0021ea 8118      	LDD  R17,Y+0
0021eb 9624      	ADIW R28,4
0021ec 9508      	RET
                 ; .FEND
                 _move_window_G101:
                 ; .FSTART _move_window_G101
0021ed 940e 4271 	CALL __PUTPARD2
0021ef 9724      	SBIW R28,4
0021f0 931a      	ST   -Y,R17
0021f1 85a9      	LDD  R26,Y+9
0021f2 85ba      	LDD  R27,Y+9+1
0021f3 969e      	ADIW R26,46
0021f4 940e 3b50 	CALL SUBOPT_0xA6
0021f6 940e 3b57 	CALL SUBOPT_0xA7
0021f8 940e 3b5c 	CALL SUBOPT_0xA8
0021fa 940e 42da 	CALL __CPD12
0021fc f409      	BRNE PC+2
0021fd c050      	RJMP _0x202000B
0021fe 85e9      	LDD  R30,Y+9
0021ff 85fa      	LDD  R31,Y+9+1
002200 81e4      	LDD  R30,Z+4
002201 30e0      	CPI  R30,0
002202 f189      	BREQ _0x202000C
002203 940e 3b61 	CALL SUBOPT_0xA9
002205 30e0      	CPI  R30,0
002206 f5e1      	BRNE _0x210001D
002207 85a9      	LDD  R26,Y+9
002208 85ba      	LDD  R27,Y+9+1
002209 9614      	ADIW R26,4
00220a e0e0      	LDI  R30,LOW(0)
00220b 93ec      	ST   X,R30
00220c 85e9      	LDD  R30,Y+9
00220d 85fa      	LDD  R31,Y+9+1
00220e 940e 3b70 	CALL SUBOPT_0xAA
002210 010d      	MOVW R0,R26
002211 85a9      	LDD  R26,Y+9
002212 85ba      	LDD  R27,Y+9+1
002213 965a      	ADIW R26,26
002214 940e 423f 	CALL __GETD1P
002216 01d0      	MOVW R26,R0
002217 940e 40d2 	CALL __ADDD12
002219 940e 3b5c 	CALL SUBOPT_0xA8
00221b 940e 42df 	CALL __CPD21
00221d f4b0      	BRSH _0x202000E
00221e 85e9      	LDD  R30,Y+9
00221f 85fa      	LDD  R31,Y+9+1
002220 8113      	LDD  R17,Z+3
                 _0x2020010:
002221 3012      	CPI  R17,2
002222 f088      	BRLO _0x2020011
002223 85a9      	LDD  R26,Y+9
002224 85ba      	LDD  R27,Y+9+1
002225 965a      	ADIW R26,26
002226 940e 423f 	CALL __GETD1P
002228 940e 3b5c 	CALL SUBOPT_0xA8
00222a 940e 40d2 	CALL __ADDD12
                +
00222c 83e9     +STD Y + 1 , R30
00222d 83fa     +STD Y + 1 + 1 , R31
00222e 836b     +STD Y + 1 + 2 , R22
00222f 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
002230 940e 3b61 	CALL SUBOPT_0xA9
002232 5011      	SUBI R17,1
002233 cfed      	RJMP _0x2020010
                 _0x2020011:
                 _0x202000E:
                 _0x202000C:
002234 940e 3b57 	CALL SUBOPT_0xA7
002236 940e 42d0 	CALL __CPD10
002238 f0a9      	BREQ _0x2020012
002239 85e9      	LDD  R30,Y+9
00223a 85fa      	LDD  R31,Y+9+1
00223b 81a1      	LDD  R26,Z+1
00223c 93aa      	ST   -Y,R26
00223d 85ea      	LDD  R30,Y+10
00223e 85fb      	LDD  R31,Y+10+1
00223f 96f2      	ADIW R30,50
002240 940e 3b75 	CALL SUBOPT_0xAB
002242 f021      	BREQ _0x2020013
                 _0x210001D:
002243 e0e1      	LDI  R30,LOW(1)
002244 8118      	LDD  R17,Y+0
002245 962b      	ADIW R28,11
002246 9508      	RET
                 _0x2020013:
002247 940e 3b57 	CALL SUBOPT_0xA7
                +
002249 85a9     +LDD R26 , Y + 9
00224a 85ba     +LDD R27 , Y + 9 + 1
00224b 969e     +ADIW R26 , 46
00224c 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2020012:
                 _0x202000B:
00224e e0e0      	LDI  R30,LOW(0)
00224f 8118      	LDD  R17,Y+0
002250 c458      	RJMP _0x2100018
                 ; .FEND
                 _sync_G101:
                 ; .FSTART _sync_G101
002251 93ba      	ST   -Y,R27
002252 93aa      	ST   -Y,R26
002253 931a      	ST   -Y,R17
002254 81e9      	LDD  R30,Y+1
002255 81fa      	LDD  R31,Y+1+1
002256 940e 3b7f 	CALL SUBOPT_0xAC
002258 2f1e      	MOV  R17,R30
002259 3010      	CPI  R17,0
00225a f009      	BREQ PC+2
00225b c061      	RJMP _0x2020014
00225c 81a9      	LDD  R26,Y+1
00225d 81ba      	LDD  R27,Y+1+1
00225e 91ac      	LD   R26,X
00225f 30a3      	CPI  R26,LOW(0x3)
002260 f429      	BRNE _0x2020016
002261 81e9      	LDD  R30,Y+1
002262 81fa      	LDD  R31,Y+1+1
002263 81e5      	LDD  R30,Z+5
002264 30e0      	CPI  R30,0
002265 f409      	BRNE _0x2020017
                 _0x2020016:
002266 c04a      	RJMP _0x2020015
                 _0x2020017:
002267 81a9      	LDD  R26,Y+1
002268 81ba      	LDD  R27,Y+1+1
002269 969e      	ADIW R26,46
00226a 940e 3b87 	CALL SUBOPT_0xAD
00226c 81e9      	LDD  R30,Y+1
00226d 81fa      	LDD  R31,Y+1+1
00226e 96f2      	ADIW R30,50
00226f 940e 393d 	CALL SUBOPT_0x65
002271 e0a0      	LDI  R26,LOW(512)
002272 e0b2      	LDI  R27,HIGH(512)
002273 940e 3377 	CALL _memset
002275 81e9      	LDD  R30,Y+1
002276 81fa      	LDD  R31,Y+1+1
002277 96f2      	ADIW R30,50
002278 50e2      	SUBI R30,LOW(-510)
002279 4ffe      	SBCI R31,HIGH(-510)
00227a e5a5      	LDI  R26,LOW(43605)
00227b eaba      	LDI  R27,HIGH(43605)
00227c 83a0      	STD  Z+0,R26
00227d 83b1      	STD  Z+1,R27
00227e 81e9      	LDD  R30,Y+1
00227f 81fa      	LDD  R31,Y+1+1
002280 96f2      	ADIW R30,50
                +
002281 e5a2     +LDI R26 , LOW ( 0x41615252 )
002282 e5b2     +LDI R27 , HIGH ( 0x41615252 )
002283 e681     +LDI R24 , BYTE3 ( 0x41615252 )
002284 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
002285 940e 3b8b 	CALL SUBOPT_0xAE
002287 51ec      	SUBI R30,LOW(-484)
002288 4ffe      	SBCI R31,HIGH(-484)
                +
002289 e7a2     +LDI R26 , LOW ( 0x61417272 )
00228a e7b2     +LDI R27 , HIGH ( 0x61417272 )
00228b e481     +LDI R24 , BYTE3 ( 0x61417272 )
00228c e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00228d 940e 3b8b 	CALL SUBOPT_0xAE
00228f 51e8      	SUBI R30,LOW(-488)
002290 4ffe      	SBCI R31,HIGH(-488)
002291 010f      	MOVW R0,R30
002292 81a9      	LDD  R26,Y+1
002293 81ba      	LDD  R27,Y+1+1
002294 961e      	ADIW R26,14
002295 940e 3b91 	CALL SUBOPT_0xAF
002297 96f2      	ADIW R30,50
002298 51e4      	SUBI R30,LOW(-492)
002299 4ffe      	SBCI R31,HIGH(-492)
00229a 010f      	MOVW R0,R30
00229b 81a9      	LDD  R26,Y+1
00229c 81ba      	LDD  R27,Y+1+1
00229d 961a      	ADIW R26,10
00229e 940e 3b91 	CALL SUBOPT_0xAF
0022a0 81a1      	LDD  R26,Z+1
0022a1 93aa      	ST   -Y,R26
0022a2 81ea      	LDD  R30,Y+2
0022a3 81fb      	LDD  R31,Y+2+1
0022a4 96f2      	ADIW R30,50
0022a5 93fa      	ST   -Y,R31
0022a6 93ea      	ST   -Y,R30
0022a7 81ec      	LDD  R30,Y+4
0022a8 81fd      	LDD  R31,Y+4+1
0022a9 940e 3b99 	CALL SUBOPT_0xB0
0022ab dc83      	RCALL _disk_write
0022ac 81a9      	LDD  R26,Y+1
0022ad 81ba      	LDD  R27,Y+1+1
0022ae 9615      	ADIW R26,5
0022af e0e0      	LDI  R30,LOW(0)
0022b0 93ec      	ST   X,R30
                 _0x2020015:
0022b1 81e9      	LDD  R30,Y+1
0022b2 81fa      	LDD  R31,Y+1+1
0022b3 81a1      	LDD  R26,Z+1
0022b4 93aa      	ST   -Y,R26
0022b5 e0e0      	LDI  R30,LOW(0)
0022b6 93ea      	ST   -Y,R30
0022b7 e0a0      	LDI  R26,LOW(0)
0022b8 e0b0      	LDI  R27,HIGH(0)
0022b9 dcec      	RCALL _disk_ioctl
0022ba 30e0      	CPI  R30,0
0022bb f009      	BREQ _0x2020018
0022bc e011      	LDI  R17,LOW(1)
                 _0x2020018:
                 _0x2020014:
0022bd 2fe1      	MOV  R30,R17
                 _0x210001C:
0022be 8118      	LDD  R17,Y+0
0022bf 9623      	ADIW R28,3
0022c0 9508      	RET
                 ; .FEND
                 _get_fat:
                 ; .FSTART _get_fat
0022c1 940e 4271 	CALL __PUTPARD2
0022c3 9724      	SBIW R28,4
0022c4 940e 42e6 	CALL __SAVELOCR4
0022c6 940e 3826 	CALL SUBOPT_0x41
0022c8 940e 3ba1 	CALL SUBOPT_0xB1
0022ca f050      	BRLO _0x202001A
0022cb 85ac      	LDD  R26,Y+12
0022cc 85bd      	LDD  R27,Y+12+1
0022cd 965e      	ADIW R26,30
0022ce 940e 423f 	CALL __GETD1P
0022d0 940e 3826 	CALL SUBOPT_0x41
0022d2 940e 42df 	CALL __CPD21
0022d4 f018      	BRLO _0x2020019
                 _0x202001A:
0022d5 940e 3768 	CALL SUBOPT_0x26
0022d7 c060      	RJMP _0x210001B
                 _0x2020019:
0022d8 85ac      	LDD  R26,Y+12
0022d9 85bd      	LDD  R27,Y+12+1
0022da 9692      	ADIW R26,34
0022db 940e 3ba9 	CALL SUBOPT_0xB2
0022dd 85ac      	LDD  R26,Y+12
0022de 85bd      	LDD  R27,Y+12+1
0022df 91ec      	LD   R30,X
0022e0 e0f0      	LDI  R31,0
0022e1 30e1      	CPI  R30,LOW(0x1)
0022e2 e0a0      	LDI  R26,HIGH(0x1)
0022e3 07fa      	CPC  R31,R26
0022e4 f539      	BRNE _0x202001F
                +
0022e5 8528     +LDD R18 , Y + 8
0022e6 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
0022e7 01f9      	MOVW R30,R18
0022e8 95f6      	LSR  R31
0022e9 95e7      	ROR  R30
                +
0022ea 0f2e     +ADD R18 , R30
0022eb 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
0022ec 940e 3bac 	CALL SUBOPT_0xB3
0022ee f009      	BREQ _0x2020020
0022ef c046      	RJMP _0x202001E
                 _0x2020020:
0022f0 940e 3bc1 	CALL SUBOPT_0xB4
0022f2 910c      	LD   R16,X
0022f3 2711      	CLR  R17
                +
0022f4 5f2f     +SUBI R18 , LOW ( - 1 )
0022f5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0022f6 940e 3bac 	CALL SUBOPT_0xB3
0022f8 f5e9      	BRNE _0x202001E
0022f9 940e 3bc1 	CALL SUBOPT_0xB4
0022fb 91ec      	LD   R30,X
0022fc 2ffe      	MOV  R31,R30
0022fd e0e0      	LDI  R30,0
                +
0022fe 2b0e     +OR R16 , R30
0022ff 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
002300 85e8      	LDD  R30,Y+8
002301 70e1      	ANDI R30,LOW(0x1)
002302 f021      	BREQ _0x2020022
002303 01f8      	MOVW R30,R16
002304 940e 4133 	CALL __LSRW4
002306 c002      	RJMP _0x202027A
                 _0x2020022:
002307 01f8      	MOVW R30,R16
002308 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x202027A:
002309 2766      	CLR  R22
00230a 2777      	CLR  R23
00230b c02c      	RJMP _0x210001B
                 _0x202001F:
00230c 30e2      	CPI  R30,LOW(0x2)
00230d e0a0      	LDI  R26,HIGH(0x2)
00230e 07fa      	CPC  R31,R26
00230f f479      	BRNE _0x2020025
002310 940e 3bc9 	CALL SUBOPT_0xB5
002312 940e 3bd2 	CALL SUBOPT_0xB6
002314 940e 3bd9 	CALL SUBOPT_0xB7
002316 f4f9      	BRNE _0x202001E
002317 85a8      	LDD  R26,Y+8
002318 85b9      	LDD  R27,Y+8+1
002319 e0e2      	LDI  R30,LOW(2)
00231a 940e 3be3 	CALL SUBOPT_0xB8
00231c 940e 3bec 	CALL SUBOPT_0xB9
00231e c019      	RJMP _0x210001B
                 _0x2020025:
00231f 30e3      	CPI  R30,LOW(0x3)
002320 e0a0      	LDI  R26,HIGH(0x3)
002321 07fa      	CPC  R31,R26
002322 f499      	BRNE _0x202001E
002323 940e 3bc9 	CALL SUBOPT_0xB5
002325 940e 3bf1 	CALL SUBOPT_0xBA
002327 940e 3bd9 	CALL SUBOPT_0xB7
002329 f461      	BRNE _0x202001E
00232a 85a8      	LDD  R26,Y+8
00232b 85b9      	LDD  R27,Y+8+1
00232c e0e4      	LDI  R30,LOW(4)
00232d 940e 3be3 	CALL SUBOPT_0xB8
00232f 940e 423f 	CALL __GETD1P
                +
002331 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
002332 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
002333 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
002334 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
002335 c002      	RJMP _0x210001B
                 _0x202001E:
002336 940e 3bf8 	CALL SUBOPT_0xBB
                 _0x210001B:
002338 940e 42ed 	CALL __LOADLOCR4
00233a 962e      	ADIW R28,14
00233b 9508      	RET
                 ; .FEND
                 _put_fat:
                 ; .FSTART _put_fat
00233c 940e 4271 	CALL __PUTPARD2
00233e 9724      	SBIW R28,4
00233f 940e 42e4 	CALL __SAVELOCR6
002341 940e 3bfd 	CALL SUBOPT_0xBC
002343 940e 3ba1 	CALL SUBOPT_0xB1
002345 f050      	BRLO _0x202002A
002346 89aa      	LDD  R26,Y+18
002347 89bb      	LDD  R27,Y+18+1
002348 965e      	ADIW R26,30
002349 940e 423f 	CALL __GETD1P
00234b 940e 3bfd 	CALL SUBOPT_0xBC
00234d 940e 42df 	CALL __CPD21
00234f f010      	BRLO _0x2020029
                 _0x202002A:
002350 e052      	LDI  R21,LOW(2)
002351 c085      	RJMP _0x202002C
                 _0x2020029:
002352 89aa      	LDD  R26,Y+18
002353 89bb      	LDD  R27,Y+18+1
002354 9692      	ADIW R26,34
002355 940e 423f 	CALL __GETD1P
                +
002357 83ee     +STD Y + 6 , R30
002358 83ff     +STD Y + 6 + 1 , R31
002359 8768     +STD Y + 6 + 2 , R22
00235a 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00235b 89aa      	LDD  R26,Y+18
00235c 89bb      	LDD  R27,Y+18+1
00235d 91ec      	LD   R30,X
00235e e0f0      	LDI  R31,0
00235f 30e1      	CPI  R30,LOW(0x1)
002360 e0a0      	LDI  R26,HIGH(0x1)
002361 07fa      	CPC  R31,R26
002362 f009      	BREQ PC+2
002363 c043      	RJMP _0x2020030
                +
002364 850e     +LDD R16 , Y + 14
002365 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
002366 01f8      	MOVW R30,R16
002367 95f6      	LSR  R31
002368 95e7      	ROR  R30
                +
002369 0f0e     +ADD R16 , R30
00236a 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00236b 940e 3c02 	CALL SUBOPT_0xBD
00236d f009      	BREQ _0x2020031
00236e c063      	RJMP _0x202002F
                 _0x2020031:
00236f 940e 3c15 	CALL SUBOPT_0xBE
002371 f051      	BREQ _0x2020032
002372 01d9      	MOVW R26,R18
002373 91ec      	LD   R30,X
002374 70ef      	ANDI R30,LOW(0xF)
002375 2fae      	MOV  R26,R30
002376 85ea      	LDD  R30,Y+10
002377 e0f0      	LDI  R31,0
002378 940e 4125 	CALL __LSLW4
00237a 2bea      	OR   R30,R26
00237b c001      	RJMP _0x2020033
                 _0x2020032:
00237c 85ea      	LDD  R30,Y+10
                 _0x2020033:
00237d 01d9      	MOVW R26,R18
00237e 93ec      	ST   X,R30
                +
00237f 5f0f     +SUBI R16 , LOW ( - 1 )
002380 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
002381 89aa      	LDD  R26,Y+18
002382 89bb      	LDD  R27,Y+18+1
002383 9614      	ADIW R26,4
002384 e0e1      	LDI  R30,LOW(1)
002385 93ec      	ST   X,R30
002386 940e 3c02 	CALL SUBOPT_0xBD
002388 f009      	BREQ _0x2020035
002389 c048      	RJMP _0x202002F
                 _0x2020035:
00238a 940e 3c15 	CALL SUBOPT_0xBE
00238c f049      	BREQ _0x2020036
00238d 940e 3c20 	CALL SUBOPT_0xBF
00238f e0e4      	LDI  R30,LOW(4)
002390 940e 4119 	CALL __LSRD12
002392 27ff      	CLR  R31
002393 2766      	CLR  R22
002394 2777      	CLR  R23
002395 c00e      	RJMP _0x2020037
                 _0x2020036:
002396 01d9      	MOVW R26,R18
002397 91ec      	LD   R30,X
002398 7fe0      	ANDI R30,LOW(0xF0)
002399 2e1e      	MOV  R1,R30
00239a 940e 3c20 	CALL SUBOPT_0xBF
00239c e0e8      	LDI  R30,LOW(8)
00239d 940e 4119 	CALL __LSRD12
00239f 27ff      	CLR  R31
0023a0 2766      	CLR  R22
0023a1 2777      	CLR  R23
0023a2 70ef      	ANDI R30,LOW(0xF)
0023a3 29e1      	OR   R30,R1
                 _0x2020037:
0023a4 01d9      	MOVW R26,R18
0023a5 93ec      	ST   X,R30
0023a6 c02b      	RJMP _0x202002F
                 _0x2020030:
0023a7 30e2      	CPI  R30,LOW(0x2)
0023a8 e0a0      	LDI  R26,HIGH(0x2)
0023a9 07fa      	CPC  R31,R26
0023aa f489      	BRNE _0x2020039
0023ab 940e 3c25 	CALL SUBOPT_0xC0
0023ad 940e 3bd2 	CALL SUBOPT_0xB6
0023af 940e 3c2a 	CALL SUBOPT_0xC1
0023b1 f501      	BRNE _0x202002F
0023b2 85ae      	LDD  R26,Y+14
0023b3 85bf      	LDD  R27,Y+14+1
0023b4 e0e2      	LDI  R30,LOW(2)
0023b5 940e 3c32 	CALL SUBOPT_0xC2
0023b7 85aa      	LDD  R26,Y+10
0023b8 85bb      	LDD  R27,Y+10+1
0023b9 83a0      	STD  Z+0,R26
0023ba 83b1      	STD  Z+1,R27
0023bb c016      	RJMP _0x202002F
                 _0x2020039:
0023bc 30e3      	CPI  R30,LOW(0x3)
0023bd e0a0      	LDI  R26,HIGH(0x3)
0023be 07fa      	CPC  R31,R26
0023bf f489      	BRNE _0x202003D
0023c0 940e 3c25 	CALL SUBOPT_0xC0
0023c2 940e 3bf1 	CALL SUBOPT_0xBA
0023c4 940e 3c2a 	CALL SUBOPT_0xC1
0023c6 f459      	BRNE _0x202002F
0023c7 85ae      	LDD  R26,Y+14
0023c8 85bf      	LDD  R27,Y+14+1
0023c9 e0e4      	LDI  R30,LOW(4)
0023ca 940e 3c32 	CALL SUBOPT_0xC2
0023cc 940e 3c20 	CALL SUBOPT_0xBF
0023ce 940e 4267 	CALL __PUTDZ20
0023d0 c001      	RJMP _0x202002F
                 _0x202003D:
0023d1 e052      	LDI  R21,LOW(2)
                 _0x202002F:
0023d2 89aa      	LDD  R26,Y+18
0023d3 89bb      	LDD  R27,Y+18+1
0023d4 9614      	ADIW R26,4
0023d5 e0e1      	LDI  R30,LOW(1)
0023d6 93ec      	ST   X,R30
                 _0x202002C:
0023d7 2fe5      	MOV  R30,R21
0023d8 940e 42eb 	CALL __LOADLOCR6
0023da 9664      	ADIW R28,20
0023db 9508      	RET
                 ; .FEND
                 _remove_chain_G101:
                 ; .FSTART _remove_chain_G101
0023dc 940e 4271 	CALL __PUTPARD2
0023de 9724      	SBIW R28,4
0023df 931a      	ST   -Y,R17
0023e0 940e 3c3b 	CALL SUBOPT_0xC3
0023e2 940e 3ba1 	CALL SUBOPT_0xB1
0023e4 f018      	BRLO _0x202003F
0023e5 940e 3c40 	CALL SUBOPT_0xC4
0023e7 f010      	BRLO _0x202003E
                 _0x202003F:
0023e8 e012      	LDI  R17,LOW(2)
0023e9 c044      	RJMP _0x2020041
                 _0x202003E:
0023ea e010      	LDI  R17,LOW(0)
                 _0x2020042:
0023eb 940e 3c40 	CALL SUBOPT_0xC4
0023ed f008      	BRLO PC+2
0023ee c03f      	RJMP _0x2020044
0023ef 85e9      	LDD  R30,Y+9
0023f0 85fa      	LDD  R31,Y+9+1
0023f1 93fa      	ST   -Y,R31
0023f2 93ea      	ST   -Y,R30
                +
0023f3 81af     +LDD R26 , Y + 7
0023f4 85b8     +LDD R27 , Y + 7 + 1
0023f5 8589     +LDD R24 , Y + 7 + 2
0023f6 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
0023f7 dec9      	RCALL _get_fat
                +
0023f8 83e9     +STD Y + 1 , R30
0023f9 83fa     +STD Y + 1 + 1 , R31
0023fa 836b     +STD Y + 1 + 2 , R22
0023fb 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
0023fc 940e 3c49 	CALL SUBOPT_0xC5
0023fe 940e 42d0 	CALL __CPD10
002400 f169      	BREQ _0x2020044
002401 940e 3b5c 	CALL SUBOPT_0xA8
002403 940e 3c4e 	CALL SUBOPT_0xC6
002405 f411      	BRNE _0x2020046
002406 e012      	LDI  R17,LOW(2)
002407 c026      	RJMP _0x2020044
                 _0x2020046:
002408 940e 3b5c 	CALL SUBOPT_0xA8
00240a 940e 3c56 	CALL SUBOPT_0xC7
00240c f411      	BRNE _0x2020047
00240d e011      	LDI  R17,LOW(1)
00240e c01f      	RJMP _0x2020044
                 _0x2020047:
00240f 85e9      	LDD  R30,Y+9
002410 85fa      	LDD  R31,Y+9+1
002411 93fa      	ST   -Y,R31
002412 93ea      	ST   -Y,R30
                +
002413 81ef     +LDD R30 , Y + 7
002414 85f8     +LDD R31 , Y + 7 + 1
002415 8569     +LDD R22 , Y + 7 + 2
002416 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
002417 940e 426c 	CALL __PUTPARD1
002419 940e 3c5e 	CALL SUBOPT_0xC8
00241b df20      	RCALL _put_fat
00241c 2f1e      	MOV  R17,R30
00241d 3010      	CPI  R17,0
00241e f479      	BRNE _0x2020044
00241f 85e9      	LDD  R30,Y+9
002420 85fa      	LDD  R31,Y+9+1
002421 940e 3c63 	CALL SUBOPT_0xC9
002423 f029      	BREQ _0x2020049
002424 940e 3c68 	CALL SUBOPT_0xCA
002426 9615      	ADIW R26,5
002427 e0e1      	LDI  R30,LOW(1)
002428 93ec      	ST   X,R30
                 _0x2020049:
002429 940e 3c49 	CALL SUBOPT_0xC5
00242b 940e 3c73 	CALL SUBOPT_0xCB
00242d cfbd      	RJMP _0x2020042
                 _0x2020044:
                 _0x2020041:
00242e 2fe1      	MOV  R30,R17
00242f 8118      	LDD  R17,Y+0
002430 c278      	RJMP _0x2100018
                 ; .FEND
                 _create_chain_G101:
                 ; .FSTART _create_chain_G101
002431 940e 4271 	CALL __PUTPARD2
002433 9760      	SBIW R28,16
002434 89ac      	LDD  R26,Y+20
002435 89bd      	LDD  R27,Y+20+1
002436 965e      	ADIW R26,30
002437 940e 423f 	CALL __GETD1P
002439 940e 376d 	CALL SUBOPT_0x27
00243b 940e 3c78 	CALL SUBOPT_0xCC
00243d f4b1      	BRNE _0x202004A
00243e 89ac      	LDD  R26,Y+20
00243f 89bd      	LDD  R27,Y+20+1
002440 961a      	ADIW R26,10
002441 940e 3ba9 	CALL SUBOPT_0xB2
002443 940e 3c7c 	CALL SUBOPT_0xCD
002445 940e 42d4 	CALL __CPD02
002447 f039      	BREQ _0x202004C
002448 940e 3c81 	CALL SUBOPT_0xCE
00244a 940e 3c7c 	CALL SUBOPT_0xCD
00244c 940e 42df 	CALL __CPD21
00244e f020      	BRLO _0x202004B
                 _0x202004C:
00244f 940e 3768 	CALL SUBOPT_0x26
002451 940e 37d8 	CALL SUBOPT_0x37
                 _0x202004B:
002453 c01d      	RJMP _0x202004E
                 _0x202004A:
002454 940e 3c84 	CALL SUBOPT_0xCF
002456 940e 3c89 	CALL SUBOPT_0xD0
002458 de68      	RCALL _get_fat
002459 940e 37bf 	CALL SUBOPT_0x33
00245b 940e 37eb 	CALL SUBOPT_0x3A
00245d 940e 3ba1 	CALL SUBOPT_0xB1
00245f f418      	BRSH _0x202004F
002460 940e 3768 	CALL SUBOPT_0x26
002462 c085      	RJMP _0x210001A
                 _0x202004F:
002463 940e 3c81 	CALL SUBOPT_0xCE
002465 940e 37eb 	CALL SUBOPT_0x3A
002467 940e 42df 	CALL __CPD21
002469 f418      	BRSH _0x2020050
00246a 940e 382b 	CALL SUBOPT_0x42
00246c c07b      	RJMP _0x210001A
                 _0x2020050:
00246d 940e 37af 	CALL SUBOPT_0x30
00246f 940e 37d8 	CALL SUBOPT_0x37
                 _0x202004E:
002471 940e 37f5 	CALL SUBOPT_0x3C
002473 940e 37d3 	CALL SUBOPT_0x36
                 _0x2020052:
002475 940e 37f0 	CALL SUBOPT_0x3B
002477 940e 377d 	CALL SUBOPT_0x29
002479 940e 37d3 	CALL SUBOPT_0x36
00247b 940e 3c81 	CALL SUBOPT_0xCE
00247d 940e 3826 	CALL SUBOPT_0x41
00247f 940e 42df 	CALL __CPD21
002481 f060      	BRLO _0x2020054
                +
002482 e0e2     +LDI R30 , LOW ( 0x2 )
002483 e0f0     +LDI R31 , HIGH ( 0x2 )
002484 e060     +LDI R22 , BYTE3 ( 0x2 )
002485 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
002486 940e 37d3 	CALL SUBOPT_0x36
002488 940e 3c8e 	CALL SUBOPT_0xD1
00248a f418      	BRSH _0x2020055
00248b 940e 371b 	CALL SUBOPT_0x1C
00248d c05a      	RJMP _0x210001A
                 _0x2020055:
                 _0x2020054:
00248e 940e 3c84 	CALL SUBOPT_0xCF
002490 940e 3c20 	CALL SUBOPT_0xBF
002492 de2e      	RCALL _get_fat
002493 940e 3c93 	CALL SUBOPT_0xD2
002495 f0a1      	BREQ _0x2020053
002496 940e 37eb 	CALL SUBOPT_0x3A
002498 940e 3c56 	CALL SUBOPT_0xC7
00249a f029      	BREQ _0x2020058
00249b 940e 37eb 	CALL SUBOPT_0x3A
00249d 940e 3c4e 	CALL SUBOPT_0xC6
00249f f419      	BRNE _0x2020057
                 _0x2020058:
0024a0 940e 382b 	CALL SUBOPT_0x42
0024a2 c045      	RJMP _0x210001A
                 _0x2020057:
0024a3 940e 3c8e 	CALL SUBOPT_0xD1
0024a5 f419      	BRNE _0x202005A
0024a6 940e 371b 	CALL SUBOPT_0x1C
0024a8 c03f      	RJMP _0x210001A
                 _0x202005A:
0024a9 cfcb      	RJMP _0x2020052
                 _0x2020053:
0024aa 940e 3c84 	CALL SUBOPT_0xCF
0024ac 940e 3c98 	CALL SUBOPT_0xD3
0024ae 940e 426c 	CALL __PUTPARD1
                +
0024b0 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
0024b1 efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
0024b2 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
0024b3 e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
0024b4 de87      	RCALL _put_fat
0024b5 30e0      	CPI  R30,0
0024b6 f019      	BREQ _0x202005B
0024b7 940e 3bf8 	CALL SUBOPT_0xBB
0024b9 c02e      	RJMP _0x210001A
                 _0x202005B:
0024ba 940e 3c78 	CALL SUBOPT_0xCC
0024bc f071      	BREQ _0x202005C
0024bd 940e 3c84 	CALL SUBOPT_0xCF
0024bf 940e 3c9d 	CALL SUBOPT_0xD4
0024c1 940e 426c 	CALL __PUTPARD1
0024c3 940e 3bfd 	CALL SUBOPT_0xBC
0024c5 de76      	RCALL _put_fat
0024c6 30e0      	CPI  R30,0
0024c7 f019      	BREQ _0x202005D
0024c8 940e 3bf8 	CALL SUBOPT_0xBB
0024ca c01d      	RJMP _0x210001A
                 _0x202005D:
                 _0x202005C:
0024cb 940e 37f0 	CALL SUBOPT_0x3B
                +
0024cd 89ac     +LDD R26 , Y + 20
0024ce 89bd     +LDD R27 , Y + 20 + 1
0024cf 961a     +ADIW R26 , 10
0024d0 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 20,10
0024d2 89ec      	LDD  R30,Y+20
0024d3 89fd      	LDD  R31,Y+20+1
0024d4 940e 3c63 	CALL SUBOPT_0xC9
0024d6 f079      	BREQ _0x202005E
0024d7 89ac      	LDD  R26,Y+20
0024d8 89bd      	LDD  R27,Y+20+1
0024d9 961e      	ADIW R26,14
0024da 940e 4245 	CALL __GETD1P_INC
0024dc 9731      	SBIW R30,1
0024dd 4060      	SBCI R22,0
0024de 4070      	SBCI R23,0
0024df 940e 424f 	CALL __PUTDP1_DEC
0024e1 89ac      	LDD  R26,Y+20
0024e2 89bd      	LDD  R27,Y+20+1
0024e3 9615      	ADIW R26,5
0024e4 e0e1      	LDI  R30,LOW(1)
0024e5 93ec      	ST   X,R30
                 _0x202005E:
0024e6 940e 37f0 	CALL SUBOPT_0x3B
                 _0x210001A:
0024e8 9666      	ADIW R28,22
0024e9 9508      	RET
                 ; .FEND
                 _clust2sect:
                 ; .FSTART _clust2sect
0024ea 940e 4271 	CALL __PUTPARD2
0024ec 940e 3c81 	CALL SUBOPT_0xCE
                +
0024ee 50e2     +SUBI R30 , LOW ( 2 )
0024ef 40f0     +SBCI R31 , HIGH ( 2 )
0024f0 4060     +SBCI R22 , BYTE3 ( 2 )
0024f1 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
0024f2 940e 376d 	CALL SUBOPT_0x27
0024f4 81ec      	LDD  R30,Y+4
0024f5 81fd      	LDD  R31,Y+4+1
                +
0024f6 8da6     +LDD R26 , Z + 30
0024f7 8db7     +LDD R27 , Z + 30 + 1
0024f8 a180     +LDD R24 , Z + 30 + 2
0024f9 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
                +
0024fa e0e2     +LDI R30 , LOW ( 0x2 )
0024fb e0f0     +LDI R31 , HIGH ( 0x2 )
0024fc e060     +LDI R22 , BYTE3 ( 0x2 )
0024fd e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
0024fe 940e 3ca2 	CALL SUBOPT_0xD5
002500 940e 3ca7 	CALL SUBOPT_0xD6
002502 940e 42df 	CALL __CPD21
002504 f018      	BRLO _0x202005F
002505 940e 371b 	CALL SUBOPT_0x1C
002507 c375      	RJMP _0x2100014
                 _0x202005F:
002508 81ec      	LDD  R30,Y+4
002509 81fd      	LDD  R31,Y+4+1
00250a 81e2      	LDD  R30,Z+2
00250b e0f0      	LDI  R31,0
00250c 940e 3ca7 	CALL SUBOPT_0xD6
00250e 940e 415d 	CALL __CWD1
002510 940e 4171 	CALL __MULD12U
002512 937f      	PUSH R23
002513 936f      	PUSH R22
002514 93ff      	PUSH R31
002515 93ef      	PUSH R30
002516 81ac      	LDD  R26,Y+4
002517 81bd      	LDD  R27,Y+4+1
002518 969a      	ADIW R26,42
002519 940e 423f 	CALL __GETD1P
00251b 91af      	POP  R26
00251c 91bf      	POP  R27
00251d 918f      	POP  R24
00251e 919f      	POP  R25
00251f 940e 40d2 	CALL __ADDD12
002521 c35b      	RJMP _0x2100014
                 ; .FEND
                 _dir_seek_G101:
                 ; .FSTART _dir_seek_G101
002522 93ba      	ST   -Y,R27
002523 93aa      	ST   -Y,R26
002524 9724      	SBIW R28,4
002525 931a      	ST   -Y,R17
002526 930a      	ST   -Y,R16
002527 81ee      	LDD  R30,Y+6
002528 81ff      	LDD  R31,Y+6+1
                +
002529 85a8     +LDD R26 , Y + 8
00252a 85b9     +LDD R27 , Y + 8 + 1
00252b 9614     +ADIW R26 , 4
00252c 93ed     +ST X + , R30
00252d 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00252e 85a8      	LDD  R26,Y+8
00252f 85b9      	LDD  R27,Y+8+1
002530 9616      	ADIW R26,6
002531 940e 3caa 	CALL SUBOPT_0xD7
002533 940e 3cb1 	CALL SUBOPT_0xD8
002535 940e 3c4e 	CALL SUBOPT_0xC6
002537 f029      	BREQ _0x2020061
002538 940e 3cb6 	CALL SUBOPT_0xD9
00253a 940e 3cbb 	CALL SUBOPT_0xDA
00253c f010      	BRLO _0x2020060
                 _0x2020061:
00253d e0e2      	LDI  R30,LOW(2)
00253e c076      	RJMP _0x2100019
                 _0x2020060:
00253f 940e 3cc3 	CALL SUBOPT_0xDB
002541 f429      	BRNE _0x2020064
002542 940e 3cb6 	CALL SUBOPT_0xD9
002544 81a0      	LD   R26,Z
002545 30a3      	CPI  R26,LOW(0x3)
002546 f009      	BREQ _0x2020065
                 _0x2020064:
002547 c006      	RJMP _0x2020063
                 _0x2020065:
002548 940e 3cb6 	CALL SUBOPT_0xD9
00254a 96b6      	ADIW R30,38
00254b 01df      	MOVW R26,R30
00254c 940e 3caa 	CALL SUBOPT_0xD7
                 _0x2020063:
00254e 940e 3cc3 	CALL SUBOPT_0xDB
002550 f4a1      	BRNE _0x2020066
002551 940e 3cca 	CALL SUBOPT_0xDC
002553 9638      	ADIW R30,8
002554 01df      	MOVW R26,R30
002555 940e 423b 	CALL __GETW1P
002557 81ae      	LDD  R26,Y+6
002558 81bf      	LDD  R27,Y+6+1
002559 17ae      	CP   R26,R30
00255a 07bf      	CPC  R27,R31
00255b f010      	BRLO _0x2020067
00255c e0e2      	LDI  R30,LOW(2)
00255d c057      	RJMP _0x2100019
                 _0x2020067:
00255e 940e 3cb6 	CALL SUBOPT_0xD9
002560 96b6      	ADIW R30,38
002561 01df      	MOVW R26,R30
002562 940e 423f 	CALL __GETD1P
002564 c035      	RJMP _0x202027B
                 _0x2020066:
002565 940e 3cb6 	CALL SUBOPT_0xD9
002567 81e2      	LDD  R30,Z+2
002568 e1a0      	LDI  R26,LOW(16)
002569 9fea      	MUL  R30,R26
00256a 0180      	MOVW R16,R0
                 _0x2020069:
00256b 81ae      	LDD  R26,Y+6
00256c 81bf      	LDD  R27,Y+6+1
00256d 17a0      	CP   R26,R16
00256e 07b1      	CPC  R27,R17
00256f f118      	BRLO _0x202006B
002570 940e 3cb6 	CALL SUBOPT_0xD9
002572 93fa      	ST   -Y,R31
002573 93ea      	ST   -Y,R30
002574 940e 3c7c 	CALL SUBOPT_0xCD
002576 dd4a      	RCALL _get_fat
002577 940e 3cd4 	CALL SUBOPT_0xDD
002579 940e 3cb1 	CALL SUBOPT_0xD8
00257b 940e 3c56 	CALL SUBOPT_0xC7
00257d f411      	BRNE _0x202006C
00257e e0e1      	LDI  R30,LOW(1)
00257f c035      	RJMP _0x2100019
                 _0x202006C:
002580 940e 3cb1 	CALL SUBOPT_0xD8
002582 940e 3ba1 	CALL SUBOPT_0xB1
002584 f028      	BRLO _0x202006E
002585 940e 3cb6 	CALL SUBOPT_0xD9
002587 940e 3cbb 	CALL SUBOPT_0xDA
002589 f010      	BRLO _0x202006D
                 _0x202006E:
00258a e0e2      	LDI  R30,LOW(2)
00258b c029      	RJMP _0x2100019
                 _0x202006D:
00258c 81ee      	LDD  R30,Y+6
00258d 81ff      	LDD  R31,Y+6+1
00258e 1be0      	SUB  R30,R16
00258f 0bf1      	SBC  R31,R17
002590 83ee      	STD  Y+6,R30
002591 83ff      	STD  Y+6+1,R31
002592 cfd8      	RJMP _0x2020069
                 _0x202006B:
002593 940e 3cca 	CALL SUBOPT_0xDC
002595 93fa      	ST   -Y,R31
002596 93ea      	ST   -Y,R30
002597 940e 3c7c 	CALL SUBOPT_0xCD
002599 df50      	RCALL _clust2sect
                 _0x202027B:
00259a 01df      	MOVW R26,R30
00259b 01cb      	MOVW R24,R22
00259c 81ee      	LDD  R30,Y+6
00259d 81ff      	LDD  R31,Y+6+1
00259e 940e 4133 	CALL __LSRW4
0025a0 940e 3cd9 	CALL SUBOPT_0xDE
                +
0025a2 85a8     +LDD R26 , Y + 8
0025a3 85b9     +LDD R27 , Y + 8 + 1
0025a4 961e     +ADIW R26 , 14
0025a5 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 8,14
0025a7 940e 3cb6 	CALL SUBOPT_0xD9
0025a9 96f2      	ADIW R30,50
0025aa 01df      	MOVW R26,R30
0025ab 81ee      	LDD  R30,Y+6
0025ac 81ff      	LDD  R31,Y+6+1
0025ad 940e 3cde 	CALL SUBOPT_0xDF
                +
0025af 85a8     +LDD R26 , Y + 8
0025b0 85b9     +LDD R27 , Y + 8 + 1
0025b1 9652     +ADIW R26 , 18
0025b2 93ed     +ST X + , R30
0025b3 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
0025b4 e0e0      	LDI  R30,LOW(0)
                 _0x2100019:
0025b5 8119      	LDD  R17,Y+1
0025b6 8108      	LDD  R16,Y+0
0025b7 962a      	ADIW R28,10
0025b8 9508      	RET
                 ; .FEND
                 _dir_next_G101:
                 ; .FSTART _dir_next_G101
0025b9 93aa      	ST   -Y,R26
0025ba 9724      	SBIW R28,4
0025bb 940e 42e6 	CALL __SAVELOCR4
0025bd 85a9      	LDD  R26,Y+9
0025be 85ba      	LDD  R27,Y+9+1
0025bf 9614      	ADIW R26,4
0025c0 940e 423b 	CALL __GETW1P
0025c2 9631      	ADIW R30,1
0025c3 018f      	MOVW R16,R30
0025c4 2e00      	MOV  R0,R16
0025c5 2a01      	OR   R0,R17
0025c6 f031      	BREQ _0x2020071
0025c7 85a9      	LDD  R26,Y+9
0025c8 85ba      	LDD  R27,Y+9+1
0025c9 961e      	ADIW R26,14
0025ca 940e 3ce6 	CALL SUBOPT_0xE0
0025cc f411      	BRNE _0x2020070
                 _0x2020071:
0025cd e0e4      	LDI  R30,LOW(4)
0025ce c0d8      	RJMP _0x2100017
                 _0x2020070:
0025cf 01f8      	MOVW R30,R16
0025d0 70ef      	ANDI R30,LOW(0xF)
0025d1 f009      	BREQ PC+2
0025d2 c0c1      	RJMP _0x2020073
0025d3 940e 3c68 	CALL SUBOPT_0xCA
0025d5 961a      	ADIW R26,10
0025d6 940e 3ce6 	CALL SUBOPT_0xE0
0025d8 f461      	BRNE _0x2020074
0025d9 940e 3ceb 	CALL SUBOPT_0xE1
0025db 9638      	ADIW R30,8
0025dc 01df      	MOVW R26,R30
0025dd 940e 423b 	CALL __GETW1P
0025df 170e      	CP   R16,R30
0025e0 071f      	CPC  R17,R31
0025e1 f010      	BRLO _0x2020075
0025e2 e0e4      	LDI  R30,LOW(4)
0025e3 c0c3      	RJMP _0x2100017
                 _0x2020075:
0025e4 c0af      	RJMP _0x2020076
                 _0x2020074:
0025e5 01f8      	MOVW R30,R16
0025e6 940e 4133 	CALL __LSRW4
0025e8 010f      	MOVW R0,R30
0025e9 940e 3ceb 	CALL SUBOPT_0xE1
0025eb 81e2      	LDD  R30,Z+2
0025ec e0f0      	LDI  R31,0
0025ed 9731      	SBIW R30,1
0025ee 21e0      	AND  R30,R0
0025ef 21f1      	AND  R31,R1
0025f0 9730      	SBIW R30,0
0025f1 f009      	BREQ PC+2
0025f2 c0a1      	RJMP _0x2020077
0025f3 940e 3ceb 	CALL SUBOPT_0xE1
0025f5 940e 3cf0 	CALL SUBOPT_0xE2
0025f7 dcc9      	RCALL _get_fat
0025f8 940e 37d8 	CALL SUBOPT_0x37
0025fa 940e 3c7c 	CALL SUBOPT_0xCD
0025fc 940e 3ba1 	CALL SUBOPT_0xB1
0025fe f410      	BRSH _0x2020078
0025ff e0e2      	LDI  R30,LOW(2)
002600 c0a6      	RJMP _0x2100017
                 _0x2020078:
002601 940e 3c7c 	CALL SUBOPT_0xCD
002603 940e 3c56 	CALL SUBOPT_0xC7
002605 f411      	BRNE _0x2020079
002606 e0e1      	LDI  R30,LOW(1)
002607 c09f      	RJMP _0x2100017
                 _0x2020079:
002608 940e 3ceb 	CALL SUBOPT_0xE1
00260a 967e      	ADIW R30,30
00260b 01df      	MOVW R26,R30
00260c 940e 423f 	CALL __GETD1P
00260e 940e 3c7c 	CALL SUBOPT_0xCD
002610 940e 42df 	CALL __CPD21
002612 f408      	BRSH PC+2
002613 c070      	RJMP _0x202007A
002614 85e8      	LDD  R30,Y+8
002615 30e0      	CPI  R30,0
002616 f411      	BRNE _0x202007B
002617 e0e4      	LDI  R30,LOW(4)
002618 c08e      	RJMP _0x2100017
                 _0x202007B:
002619 940e 3ceb 	CALL SUBOPT_0xE1
00261b 940e 3cf0 	CALL SUBOPT_0xE2
00261d de13      	RCALL _create_chain_G101
00261e 940e 3cf9 	CALL SUBOPT_0xE3
002620 940e 42d0 	CALL __CPD10
002622 f411      	BRNE _0x202007C
002623 e0e7      	LDI  R30,LOW(7)
002624 c082      	RJMP _0x2100017
                 _0x202007C:
002625 940e 3c7c 	CALL SUBOPT_0xCD
002627 940e 3c4e 	CALL SUBOPT_0xC6
002629 f411      	BRNE _0x202007D
00262a e0e2      	LDI  R30,LOW(2)
00262b c07b      	RJMP _0x2100017
                 _0x202007D:
00262c 940e 3c7c 	CALL SUBOPT_0xCD
00262e 940e 3c56 	CALL SUBOPT_0xC7
002630 f411      	BRNE _0x202007E
002631 e0e1      	LDI  R30,LOW(1)
002632 c074      	RJMP _0x2100017
                 _0x202007E:
002633 940e 3ceb 	CALL SUBOPT_0xE1
002635 940e 3b7f 	CALL SUBOPT_0xAC
002637 30e0      	CPI  R30,0
002638 f011      	BREQ _0x202007F
002639 e0e1      	LDI  R30,LOW(1)
00263a c06c      	RJMP _0x2100017
                 _0x202007F:
00263b 940e 3ceb 	CALL SUBOPT_0xE1
00263d 96f2      	ADIW R30,50
00263e 940e 393d 	CALL SUBOPT_0x65
002640 e0a0      	LDI  R26,LOW(512)
002641 e0b2      	LDI  R27,HIGH(512)
002642 940e 3377 	CALL _memset
002644 940e 3ceb 	CALL SUBOPT_0xE1
002646 01df      	MOVW R26,R30
002647 96be      	ADIW R30,46
002648 93ff      	PUSH R31
002649 93ef      	PUSH R30
00264a 01fd      	MOVW R30,R26
00264b 940e 3cfb 	CALL SUBOPT_0xE4
00264d 91af      	POP  R26
00264e 91bf      	POP  R27
00264f 940e 424a 	CALL __PUTDP1
002651 e030      	LDI  R19,LOW(0)
                 _0x2020081:
002652 940e 3ceb 	CALL SUBOPT_0xE1
002654 81e2      	LDD  R30,Z+2
002655 173e      	CP   R19,R30
002656 f4c8      	BRSH _0x2020082
002657 940e 3ceb 	CALL SUBOPT_0xE1
002659 9634      	ADIW R30,4
00265a e0a1      	LDI  R26,LOW(1)
00265b 83a0      	STD  Z+0,R26
00265c 940e 3ceb 	CALL SUBOPT_0xE1
00265e 940e 3b7f 	CALL SUBOPT_0xAC
002660 30e0      	CPI  R30,0
002661 f011      	BREQ _0x2020083
002662 e0e1      	LDI  R30,LOW(1)
002663 c043      	RJMP _0x2100017
                 _0x2020083:
002664 940e 3ceb 	CALL SUBOPT_0xE1
002666 96be      	ADIW R30,46
002667 01df      	MOVW R26,R30
002668 940e 4245 	CALL __GETD1P_INC
00266a 940e 377d 	CALL SUBOPT_0x29
00266c 940e 424f 	CALL __PUTDP1_DEC
00266e 5f3f      	SUBI R19,-1
00266f cfe2      	RJMP _0x2020081
                 _0x2020082:
002670 940e 3ceb 	CALL SUBOPT_0xE1
002672 96be      	ADIW R30,46
002673 93ff      	PUSH R31
002674 93ef      	PUSH R30
002675 01df      	MOVW R26,R30
002676 940e 423f 	CALL __GETD1P
002678 01df      	MOVW R26,R30
002679 01cb      	MOVW R24,R22
00267a 2fe3      	MOV  R30,R19
00267b e0f0      	LDI  R31,0
00267c 940e 415d 	CALL __CWD1
00267e 940e 3ca2 	CALL SUBOPT_0xD5
002680 91af      	POP  R26
002681 91bf      	POP  R27
002682 940e 424a 	CALL __PUTDP1
                 _0x202007A:
002684 940e 37f5 	CALL SUBOPT_0x3C
                +
002686 85a9     +LDD R26 , Y + 9
002687 85ba     +LDD R27 , Y + 9 + 1
002688 961a     +ADIW R26 , 10
002689 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00268b 940e 3ceb 	CALL SUBOPT_0xE1
00268d 940e 3cfb 	CALL SUBOPT_0xE4
                +
00268f 85a9     +LDD R26 , Y + 9
002690 85ba     +LDD R27 , Y + 9 + 1
002691 961e     +ADIW R26 , 14
002692 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2020077:
                 _0x2020076:
                 _0x2020073:
002694 01f8      	MOVW R30,R16
                +
002695 85a9     +LDD R26 , Y + 9
002696 85ba     +LDD R27 , Y + 9 + 1
002697 9614     +ADIW R26 , 4
002698 93ed     +ST X + , R30
002699 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00269a 940e 3ceb 	CALL SUBOPT_0xE1
00269c 96f2      	ADIW R30,50
00269d 01df      	MOVW R26,R30
00269e 01f8      	MOVW R30,R16
00269f 940e 3cde 	CALL SUBOPT_0xDF
                +
0026a1 85a9     +LDD R26 , Y + 9
0026a2 85ba     +LDD R27 , Y + 9 + 1
0026a3 9652     +ADIW R26 , 18
0026a4 93ed     +ST X + , R30
0026a5 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
0026a6 e0e0      	LDI  R30,LOW(0)
                 _0x2100017:
0026a7 940e 42ed 	CALL __LOADLOCR4
                 _0x2100018:
0026a9 962b      	ADIW R28,11
0026aa 9508      	RET
                 ; .FEND
                 _dir_find_G101:
                 ; .FSTART _dir_find_G101
0026ab 940e 3d03 	CALL SUBOPT_0xE5
0026ad f021      	BREQ _0x2020084
0026ae 2fe1      	MOV  R30,R17
0026af 940e 42ed 	CALL __LOADLOCR4
0026b1 c1cb      	RJMP _0x2100014
                 _0x2020084:
                 _0x2020086:
0026b2 940e 3d12 	CALL SUBOPT_0xE6
0026b4 f501      	BRNE _0x2020087
0026b5 81ac      	LDD  R26,Y+4
0026b6 81bd      	LDD  R27,Y+4+1
0026b7 9652      	ADIW R26,18
0026b8 912d      	LD   R18,X+
0026b9 913c      	LD   R19,X
0026ba 01d9      	MOVW R26,R18
0026bb 910c      	LD   R16,X
0026bc 3000      	CPI  R16,0
0026bd f411      	BRNE _0x2020089
0026be e014      	LDI  R17,LOW(4)
0026bf c015      	RJMP _0x2020087
                 _0x2020089:
0026c0 01f9      	MOVW R30,R18
0026c1 85e3      	LDD  R30,Z+11
0026c2 70e8      	ANDI R30,LOW(0x8)
0026c3 f431      	BRNE _0x202008B
0026c4 940e 3d23 	CALL SUBOPT_0xE7
0026c6 940e 334c 	CALL _memcmp
0026c8 30e0      	CPI  R30,0
0026c9 f009      	BREQ _0x202008C
                 _0x202008B:
0026ca c001      	RJMP _0x202008A
                 _0x202008C:
0026cb c009      	RJMP _0x2020087
                 _0x202008A:
0026cc 81ec      	LDD  R30,Y+4
0026cd 81fd      	LDD  R31,Y+4+1
0026ce 93fa      	ST   -Y,R31
0026cf 93ea      	ST   -Y,R30
0026d0 e0a0      	LDI  R26,LOW(0)
0026d1 dee7      	RCALL _dir_next_G101
0026d2 2f1e      	MOV  R17,R30
0026d3 3010      	CPI  R17,0
0026d4 f2e9      	BREQ _0x2020086
                 _0x2020087:
0026d5 2fe1      	MOV  R30,R17
0026d6 940e 42ed 	CALL __LOADLOCR4
0026d8 c1a4      	RJMP _0x2100014
                 ; .FEND
                 _dir_register_G101:
                 ; .FSTART _dir_register_G101
0026d9 940e 3d03 	CALL SUBOPT_0xE5
0026db f4b1      	BRNE _0x2020099
                 _0x202009B:
0026dc 940e 3d12 	CALL SUBOPT_0xE6
0026de f499      	BRNE _0x202009C
0026df 81ec      	LDD  R30,Y+4
0026e0 81fd      	LDD  R31,Y+4+1
0026e1 89a2      	LDD  R26,Z+18
0026e2 89b3      	LDD  R27,Z+19
0026e3 910c      	LD   R16,X
0026e4 3e05      	CPI  R16,229
0026e5 f011      	BREQ _0x202009F
0026e6 3000      	CPI  R16,0
0026e7 f409      	BRNE _0x202009E
                 _0x202009F:
0026e8 c009      	RJMP _0x202009C
                 _0x202009E:
0026e9 81ec      	LDD  R30,Y+4
0026ea 81fd      	LDD  R31,Y+4+1
0026eb 93fa      	ST   -Y,R31
0026ec 93ea      	ST   -Y,R30
0026ed e0a1      	LDI  R26,LOW(1)
0026ee deca      	RCALL _dir_next_G101
0026ef 2f1e      	MOV  R17,R30
0026f0 3010      	CPI  R17,0
0026f1 f351      	BREQ _0x202009B
                 _0x202009C:
                 _0x2020099:
0026f2 3010      	CPI  R17,0
0026f3 f529      	BRNE _0x20200A1
0026f4 940e 3d12 	CALL SUBOPT_0xE6
0026f6 f511      	BRNE _0x20200A2
0026f7 81ac      	LDD  R26,Y+4
0026f8 81bd      	LDD  R27,Y+4+1
0026f9 9652      	ADIW R26,18
0026fa 912d      	LD   R18,X+
0026fb 913c      	LD   R19,X
0026fc 933a      	ST   -Y,R19
0026fd 932a      	ST   -Y,R18
0026fe e0e0      	LDI  R30,LOW(0)
0026ff 93ea      	ST   -Y,R30
002700 e2a0      	LDI  R26,LOW(32)
002701 e0b0      	LDI  R27,0
002702 940e 3377 	CALL _memset
002704 940e 3d23 	CALL SUBOPT_0xE7
002706 940e 3365 	CALL _memcpy
002708 81ac      	LDD  R26,Y+4
002709 81bd      	LDD  R27,Y+4+1
00270a 9654      	ADIW R26,20
00270b 940e 423b 	CALL __GETW1P
00270d 85e3      	LDD  R30,Z+11
00270e 71e8      	ANDI R30,LOW(0x18)
                +
00270f 01d9     +MOVW R26 , R18
002710 961c     +ADIW R26 , 12
002711 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
002712 81ac      	LDD  R26,Y+4
002713 81bd      	LDD  R27,Y+4+1
002714 940e 423b 	CALL __GETW1P
002716 9634      	ADIW R30,4
002717 e0a1      	LDI  R26,LOW(1)
002718 83a0      	STD  Z+0,R26
                 _0x20200A2:
                 _0x20200A1:
002719 2fe1      	MOV  R30,R17
00271a 940e 42ed 	CALL __LOADLOCR4
00271c c160      	RJMP _0x2100014
                 ; .FEND
                 _create_name_G101:
                 ; .FSTART _create_name_G101
00271d 93ba      	ST   -Y,R27
00271e 93aa      	ST   -Y,R26
00271f 9725      	SBIW R28,5
002720 940e 42e4 	CALL __SAVELOCR6
002722 85ad      	LDD  R26,Y+13
002723 85be      	LDD  R27,Y+13+1
002724 9654      	ADIW R26,20
002725 914d      	LD   R20,X+
002726 915c      	LD   R21,X
002727 935a      	ST   -Y,R21
002728 934a      	ST   -Y,R20
002729 e2e0      	LDI  R30,LOW(32)
00272a 93ea      	ST   -Y,R30
00272b e0ab      	LDI  R26,LOW(11)
00272c e0b0      	LDI  R27,0
00272d 940e 3377 	CALL _memset
00272f e0e0      	LDI  R30,LOW(0)
002730 87e8      	STD  Y+8,R30
002731 87e9      	STD  Y+8+1,R30
002732 2f1e      	MOV  R17,R30
002733 2f2e      	MOV  R18,R30
002734 e0e8      	LDI  R30,LOW(8)
002735 87ea      	STD  Y+10,R30
002736 85ab      	LDD  R26,Y+11
002737 85bc      	LDD  R27,Y+11+1
002738 940e 3d2e 	CALL SUBOPT_0xE8
00273a 940e 3d33 	CALL SUBOPT_0xE9
00273c 0fae      	ADD  R26,R30
00273d 1fbf      	ADC  R27,R31
00273e 91ac      	LD   R26,X
00273f 32ae      	CPI  R26,LOW(0x2E)
002740 f509      	BRNE _0x20200A5
                 _0x20200A7:
002741 940e 3d38 	CALL SUBOPT_0xEA
002743 320e      	CPI  R16,46
002744 f421      	BRNE _0x20200AA
002745 85a8      	LDD  R26,Y+8
002746 85b9      	LDD  R27,Y+8+1
002747 9713      	SBIW R26,3
002748 f00c      	BRLT _0x20200A9
                 _0x20200AA:
002749 c003      	RJMP _0x20200A8
                 _0x20200A9:
00274a 940e 3d44 	CALL SUBOPT_0xEB
00274c cff4      	RJMP _0x20200A7
                 _0x20200A8:
00274d 320f      	CPI  R16,47
00274e f021      	BREQ _0x20200AD
00274f 350c      	CPI  R16,92
002750 f011      	BREQ _0x20200AD
002751 3201      	CPI  R16,33
002752 f408      	BRSH _0x20200AE
                 _0x20200AD:
002753 c002      	RJMP _0x20200AC
                 _0x20200AE:
002754 e0e6      	LDI  R30,LOW(6)
002755 c06d      	RJMP _0x2100015
                 _0x20200AC:
002756 940e 3d33 	CALL SUBOPT_0xE9
002758 940e 3d4b 	CALL SUBOPT_0xEC
00275a f410      	BRSH _0x20200AF
00275b e2e4      	LDI  R30,LOW(36)
00275c c001      	RJMP _0x20200B0
                 _0x20200AF:
00275d e2e0      	LDI  R30,LOW(32)
                 _0x20200B0:
                +
00275e 01da     +MOVW R26 , R20
00275f 961b     +ADIW R26 , 11
002760 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
002761 c060      	RJMP _0x2100016
                 _0x20200A5:
                 _0x20200B3:
002762 940e 3d38 	CALL SUBOPT_0xEA
002764 3201      	CPI  R16,33
002765 f020      	BRLO _0x20200B6
002766 320f      	CPI  R16,47
002767 f011      	BREQ _0x20200B6
002768 350c      	CPI  R16,92
002769 f409      	BRNE _0x20200B5
                 _0x20200B6:
00276a c032      	RJMP _0x20200B4
                 _0x20200B5:
00276b 320e      	CPI  R16,46
00276c f019      	BREQ _0x20200B9
00276d 85ea      	LDD  R30,Y+10
00276e 172e      	CP   R18,R30
00276f f068      	BRLO _0x20200B8
                 _0x20200B9:
002770 85aa      	LDD  R26,Y+10
002771 30a8      	CPI  R26,LOW(0x8)
002772 f411      	BRNE _0x20200BC
002773 320e      	CPI  R16,46
002774 f011      	BREQ _0x20200BB
                 _0x20200BC:
002775 e0e6      	LDI  R30,LOW(6)
002776 c04c      	RJMP _0x2100015
                 _0x20200BB:
002777 e028      	LDI  R18,LOW(8)
002778 e0eb      	LDI  R30,LOW(11)
002779 87ea      	STD  Y+10,R30
00277a 0f11      	LSL  R17
00277b 0f11      	LSL  R17
00277c c01f      	RJMP _0x20200B2
                 _0x20200B8:
00277d 3800      	CPI  R16,128
00277e f018      	BRLO _0x20200BE
00277f 6013      	ORI  R17,LOW(3)
002780 e0e6      	LDI  R30,LOW(6)
002781 c041      	RJMP _0x2100015
                 _0x20200BE:
002782 e0ea      	LDI  R30,LOW(_k1*2)
002783 e0f2      	LDI  R31,HIGH(_k1*2)
002784 93fa      	ST   -Y,R31
002785 93ea      	ST   -Y,R30
002786 2fa0      	MOV  R26,R16
002787 da4e      	RCALL _chk_chrf_G101
002788 9730      	SBIW R30,0
002789 f011      	BREQ _0x20200C4
00278a e0e6      	LDI  R30,LOW(6)
00278b c037      	RJMP _0x2100015
                 _0x20200C4:
00278c 3401      	CPI  R16,65
00278d f010      	BRLO _0x20200C6
00278e 350b      	CPI  R16,91
00278f f008      	BRLO _0x20200C7
                 _0x20200C6:
002790 c002      	RJMP _0x20200C5
                 _0x20200C7:
002791 6012      	ORI  R17,LOW(2)
002792 c007      	RJMP _0x20200C8
                 _0x20200C5:
002793 3601      	CPI  R16,97
002794 f010      	BRLO _0x20200CA
002795 370b      	CPI  R16,123
002796 f008      	BRLO _0x20200CB
                 _0x20200CA:
002797 c002      	RJMP _0x20200C9
                 _0x20200CB:
002798 6011      	ORI  R17,LOW(1)
002799 5200      	SUBI R16,LOW(32)
                 _0x20200C9:
                 _0x20200C8:
00279a 940e 3d44 	CALL SUBOPT_0xEB
                 _0x20200B2:
00279c cfc5      	RJMP _0x20200B3
                 _0x20200B4:
00279d 940e 3d33 	CALL SUBOPT_0xE9
00279f 940e 3d4b 	CALL SUBOPT_0xEC
0027a1 f410      	BRSH _0x20200CC
0027a2 e0e4      	LDI  R30,LOW(4)
0027a3 c001      	RJMP _0x20200CD
                 _0x20200CC:
0027a4 e0e0      	LDI  R30,LOW(0)
                 _0x20200CD:
0027a5 2f0e      	MOV  R16,R30
0027a6 3020      	CPI  R18,0
0027a7 f411      	BRNE _0x20200CF
0027a8 e0e6      	LDI  R30,LOW(6)
0027a9 c019      	RJMP _0x2100015
                 _0x20200CF:
0027aa 01da      	MOVW R26,R20
0027ab 91ac      	LD   R26,X
0027ac 3ea5      	CPI  R26,LOW(0xE5)
0027ad f419      	BRNE _0x20200D0
0027ae 01da      	MOVW R26,R20
0027af e0e5      	LDI  R30,LOW(5)
0027b0 93ec      	ST   X,R30
                 _0x20200D0:
0027b1 85aa      	LDD  R26,Y+10
0027b2 30a8      	CPI  R26,LOW(0x8)
0027b3 f411      	BRNE _0x20200D1
0027b4 0f11      	LSL  R17
0027b5 0f11      	LSL  R17
                 _0x20200D1:
0027b6 2fe1      	MOV  R30,R17
0027b7 70e3      	ANDI R30,LOW(0x3)
0027b8 30e1      	CPI  R30,LOW(0x1)
0027b9 f409      	BRNE _0x20200D2
0027ba 6100      	ORI  R16,LOW(16)
                 _0x20200D2:
0027bb 2fe1      	MOV  R30,R17
0027bc 70ec      	ANDI R30,LOW(0xC)
0027bd 30e4      	CPI  R30,LOW(0x4)
0027be f409      	BRNE _0x20200D3
0027bf 6008      	ORI  R16,LOW(8)
                 _0x20200D3:
0027c0 01fa      	MOVW R30,R20
                +
0027c1 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x2100016:
0027c2 e0e0      	LDI  R30,LOW(0)
                 _0x2100015:
0027c3 940e 42eb 	CALL __LOADLOCR6
0027c5 962f      	ADIW R28,15
0027c6 9508      	RET
                 ; .FEND
                 _follow_path_G101:
                 ; .FSTART _follow_path_G101
0027c7 93ba      	ST   -Y,R27
0027c8 93aa      	ST   -Y,R26
0027c9 940e 42e6 	CALL __SAVELOCR4
                 _0x20200E9:
0027cb e0e1      	LDI  R30,LOW(1)
0027cc 30e0      	CPI  R30,0
0027cd f029      	BREQ _0x20200EC
0027ce 81ac      	LDD  R26,Y+4
0027cf 81bd      	LDD  R27,Y+4+1
0027d0 91ac      	LD   R26,X
0027d1 32a0      	CPI  R26,LOW(0x20)
0027d2 f009      	BREQ _0x20200ED
                 _0x20200EC:
0027d3 c006      	RJMP _0x20200EB
                 _0x20200ED:
0027d4 81ec      	LDD  R30,Y+4
0027d5 81fd      	LDD  R31,Y+4+1
0027d6 9631      	ADIW R30,1
0027d7 83ec      	STD  Y+4,R30
0027d8 83fd      	STD  Y+4+1,R31
0027d9 cff1      	RJMP _0x20200E9
                 _0x20200EB:
0027da 81ac      	LDD  R26,Y+4
0027db 81bd      	LDD  R27,Y+4+1
0027dc 91ac      	LD   R26,X
0027dd 32af      	CPI  R26,LOW(0x2F)
0027de f029      	BREQ _0x20200EF
0027df 81ac      	LDD  R26,Y+4
0027e0 81bd      	LDD  R27,Y+4+1
0027e1 91ac      	LD   R26,X
0027e2 35ac      	CPI  R26,LOW(0x5C)
0027e3 f459      	BRNE _0x20200EE
                 _0x20200EF:
0027e4 81ec      	LDD  R30,Y+4
0027e5 81fd      	LDD  R31,Y+4+1
0027e6 9631      	ADIW R30,1
0027e7 83ec      	STD  Y+4,R30
0027e8 83fd      	STD  Y+4+1,R31
0027e9 81ae      	LDD  R26,Y+6
0027ea 81bf      	LDD  R27,Y+6+1
0027eb 9616      	ADIW R26,6
0027ec 940e 3b87 	CALL SUBOPT_0xAD
0027ee c00a      	RJMP _0x20200F1
                 _0x20200EE:
0027ef 81ae      	LDD  R26,Y+6
0027f0 81bf      	LDD  R27,Y+6+1
0027f1 940e 423b 	CALL __GETW1P
0027f3 9676      	ADIW R30,22
0027f4 01df      	MOVW R26,R30
0027f5 940e 423f 	CALL __GETD1P
0027f7 940e 3d53 	CALL SUBOPT_0xED
                 _0x20200F1:
0027f9 81ac      	LDD  R26,Y+4
0027fa 81bd      	LDD  R27,Y+4+1
0027fb 91ac      	LD   R26,X
0027fc 27bb      	CLR  R27
0027fd 9790      	SBIW R26,32
0027fe f460      	BRSH _0x20200F2
0027ff 940e 3d59 	CALL SUBOPT_0xEE
002801 e0a0      	LDI  R26,LOW(0)
002802 e0b0      	LDI  R27,0
002803 dd1e      	RCALL _dir_seek_G101
002804 2f1e      	MOV  R17,R30
002805 81ae      	LDD  R26,Y+6
002806 81bf      	LDD  R27,Y+6+1
002807 9652      	ADIW R26,18
002808 940e 3d5e 	CALL SUBOPT_0xEF
00280a c03d      	RJMP _0x20200F3
                 _0x20200F2:
                 _0x20200F5:
00280b 940e 3d59 	CALL SUBOPT_0xEE
00280d 01de      	MOVW R26,R28
00280e 9616      	ADIW R26,6
00280f df0d      	RCALL _create_name_G101
002810 2f1e      	MOV  R17,R30
002811 3010      	CPI  R17,0
002812 f5a9      	BRNE _0x20200F6
002813 81ae      	LDD  R26,Y+6
002814 81bf      	LDD  R27,Y+6+1
002815 de95      	RCALL _dir_find_G101
002816 2f1e      	MOV  R17,R30
002817 81ae      	LDD  R26,Y+6
002818 81bf      	LDD  R27,Y+6+1
002819 9654      	ADIW R26,20
00281a 940e 423b 	CALL __GETW1P
00281c 85e3      	LDD  R30,Z+11
00281d 70e4      	ANDI R30,LOW(0x4)
00281e 2f0e      	MOV  R16,R30
00281f 3010      	CPI  R17,0
002820 f039      	BREQ _0x20200F8
002821 3014      	CPI  R17,4
002822 f411      	BRNE _0x20200FA
002823 3000      	CPI  R16,0
002824 f009      	BREQ _0x20200FB
                 _0x20200FA:
002825 c001      	RJMP _0x20200F9
                 _0x20200FB:
002826 e015      	LDI  R17,LOW(5)
                 _0x20200F9:
002827 c020      	RJMP _0x20200F6
                 _0x20200F8:
002828 3000      	CPI  R16,0
002829 f4f1      	BRNE _0x20200F6
00282a 81ae      	LDD  R26,Y+6
00282b 81bf      	LDD  R27,Y+6+1
00282c 9652      	ADIW R26,18
00282d 912d      	LD   R18,X+
00282e 913c      	LD   R19,X
00282f 01f9      	MOVW R30,R18
002830 85e3      	LDD  R30,Z+11
002831 71e0      	ANDI R30,LOW(0x10)
002832 f411      	BRNE _0x20200FD
002833 e015      	LDI  R17,LOW(5)
002834 c013      	RJMP _0x20200F6
                 _0x20200FD:
002835 940e 3d63 	CALL SUBOPT_0xF0
002837 940e 4152 	CALL __LSLD16
002839 937f      	PUSH R23
00283a 936f      	PUSH R22
00283b 93ff      	PUSH R31
00283c 93ef      	PUSH R30
00283d 940e 3d66 	CALL SUBOPT_0xF1
00283f 91af      	POP  R26
002840 91bf      	POP  R27
002841 918f      	POP  R24
002842 919f      	POP  R25
002843 940e 3d6b 	CALL SUBOPT_0xF2
002845 940e 3d53 	CALL SUBOPT_0xED
002847 cfc3      	RJMP _0x20200F5
                 _0x20200F6:
                 _0x20200F3:
002848 2fe1      	MOV  R30,R17
002849 940e 42ed 	CALL __LOADLOCR4
00284b 9628      	ADIW R28,8
00284c 9508      	RET
                 ; .FEND
                 _check_fs_G101:
                 ; .FSTART _check_fs_G101
00284d 940e 4271 	CALL __PUTPARD2
00284f 81ec      	LDD  R30,Y+4
002850 81fd      	LDD  R31,Y+4+1
002851 81a1      	LDD  R26,Z+1
002852 93aa      	ST   -Y,R26
002853 81ed      	LDD  R30,Y+5
002854 81fe      	LDD  R31,Y+5+1
002855 96f2      	ADIW R30,50
002856 93fa      	ST   -Y,R31
002857 93ea      	ST   -Y,R30
                +
002858 81eb     +LDD R30 , Y + 3
002859 81fc     +LDD R31 , Y + 3 + 1
00285a 816d     +LDD R22 , Y + 3 + 2
00285b 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00285c 940e 3d70 	CALL SUBOPT_0xF3
00285e f011      	BREQ _0x20200FE
00285f e0e3      	LDI  R30,LOW(3)
002860 c01c      	RJMP _0x2100014
                 _0x20200FE:
002861 81ec      	LDD  R30,Y+4
002862 81fd      	LDD  R31,Y+4+1
002863 940e 3d77 	CALL SUBOPT_0xF4
002865 f011      	BREQ _0x20200FF
002866 e0e2      	LDI  R30,LOW(2)
002867 c015      	RJMP _0x2100014
                 _0x20200FF:
002868 81ac      	LDD  R26,Y+4
002869 81bd      	LDD  R27,Y+4+1
00286a 59a8      	SUBI R26,LOW(-104)
00286b 4fbf      	SBCI R27,HIGH(-104)
00286c 940e 3d81 	CALL SUBOPT_0xF5
00286e f411      	BRNE _0x2020100
00286f e0e0      	LDI  R30,LOW(0)
002870 c00c      	RJMP _0x2100014
                 _0x2020100:
002871 81ec      	LDD  R30,Y+4
002872 81fd      	LDD  R31,Y+4+1
002873 96f2      	ADIW R30,50
002874 5aee      	SUBI R30,LOW(-82)
002875 4fff      	SBCI R31,HIGH(-82)
002876 01df      	MOVW R26,R30
002877 940e 3d81 	CALL SUBOPT_0xF5
002879 f411      	BRNE _0x2020101
00287a e0e0      	LDI  R30,LOW(0)
00287b c001      	RJMP _0x2100014
                 _0x2020101:
00287c e0e1      	LDI  R30,LOW(1)
                 _0x2100014:
00287d 9626      	ADIW R28,6
00287e 9508      	RET
                 ; .FEND
                 _chk_mounted:
                 ; .FSTART _chk_mounted
00287f 93aa      	ST   -Y,R26
002880 9764      	SBIW R28,20
002881 940e 42e4 	CALL __SAVELOCR6
002883 8dad      	LDD  R26,Y+29
002884 8dbe      	LDD  R27,Y+29+1
002885 940e 423b 	CALL __GETW1P
002887 87e8      	STD  Y+8,R30
002888 87f9      	STD  Y+8+1,R31
002889 85a8      	LDD  R26,Y+8
00288a 85b9      	LDD  R27,Y+8+1
00288b 91ec      	LD   R30,X
00288c 53e0      	SUBI R30,LOW(48)
00288d 2f0e      	MOV  R16,R30
00288e 300a      	CPI  R16,10
00288f f420      	BRSH _0x2020103
002890 9611      	ADIW R26,1
002891 91ac      	LD   R26,X
002892 33aa      	CPI  R26,LOW(0x3A)
002893 f009      	BREQ _0x2020104
                 _0x2020103:
002894 c00a      	RJMP _0x2020102
                 _0x2020104:
002895 85e8      	LDD  R30,Y+8
002896 85f9      	LDD  R31,Y+8+1
002897 9632      	ADIW R30,2
002898 87e8      	STD  Y+8,R30
002899 87f9      	STD  Y+8+1,R31
00289a 8dad      	LDD  R26,Y+29
00289b 8dbe      	LDD  R27,Y+29+1
00289c 93ed      	ST   X+,R30
00289d 93fc      	ST   X,R31
00289e c002      	RJMP _0x2020105
                 _0x2020102:
00289f 9100 36c5 	LDS  R16,_Drive_G101
                 _0x2020105:
0028a1 3001      	CPI  R16,1
0028a2 f010      	BRLO _0x2020106
0028a3 e0eb      	LDI  R30,LOW(11)
0028a4 c1ca      	RJMP _0x2100012
                 _0x2020106:
0028a5 2fe0      	MOV  R30,R16
0028a6 940e 3d8f 	CALL SUBOPT_0xF6
0028a8 940e 3d2e 	CALL SUBOPT_0xE8
0028aa 8dab      	LDD  R26,Y+27
0028ab 8dbc      	LDD  R27,Y+27+1
0028ac 93ed      	ST   X+,R30
0028ad 93fc      	ST   X,R31
0028ae 81ee      	LDD  R30,Y+6
0028af 81ff      	LDD  R31,Y+6+1
0028b0 9730      	SBIW R30,0
0028b1 f411      	BRNE _0x2020107
0028b2 e0ec      	LDI  R30,LOW(12)
0028b3 c1bb      	RJMP _0x2100012
                 _0x2020107:
0028b4 81ae      	LDD  R26,Y+6
0028b5 81bf      	LDD  R27,Y+6+1
0028b6 91ec      	LD   R30,X
0028b7 30e0      	CPI  R30,0
0028b8 f089      	BREQ _0x2020108
0028b9 81ee      	LDD  R30,Y+6
0028ba 81ff      	LDD  R31,Y+6+1
0028bb 81a1      	LDD  R26,Z+1
0028bc 940e 1ec1 	CALL _disk_status
0028be 2f5e      	MOV  R21,R30
0028bf fd50      	SBRC R21,0
0028c0 c009      	RJMP _0x2020109
0028c1 8dea      	LDD  R30,Y+26
0028c2 30e0      	CPI  R30,0
0028c3 f011      	BREQ _0x202010B
0028c4 fd52      	SBRC R21,2
0028c5 c001      	RJMP _0x202010C
                 _0x202010B:
0028c6 c002      	RJMP _0x202010A
                 _0x202010C:
0028c7 e0ea      	LDI  R30,LOW(10)
0028c8 c1a6      	RJMP _0x2100012
                 _0x202010A:
0028c9 c1a4      	RJMP _0x2100013
                 _0x2020109:
                 _0x2020108:
0028ca 81ae      	LDD  R26,Y+6
0028cb 81bf      	LDD  R27,Y+6+1
0028cc e0e0      	LDI  R30,LOW(0)
0028cd 93ec      	ST   X,R30
0028ce 2fe0      	MOV  R30,R16
                +
0028cf 81ae     +LDD R26 , Y + 6
0028d0 81bf     +LDD R27 , Y + 6 + 1
0028d1 9611     +ADIW R26 , 1
0028d2 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
0028d3 81ee      	LDD  R30,Y+6
0028d4 81ff      	LDD  R31,Y+6+1
0028d5 81a1      	LDD  R26,Z+1
0028d6 940e 1deb 	CALL _disk_initialize
0028d8 2f5e      	MOV  R21,R30
0028d9 ff50      	SBRS R21,0
0028da c002      	RJMP _0x202010D
0028db e0e3      	LDI  R30,LOW(3)
0028dc c192      	RJMP _0x2100012
                 _0x202010D:
0028dd 8dea      	LDD  R30,Y+26
0028de 30e0      	CPI  R30,0
0028df f011      	BREQ _0x202010F
0028e0 fd52      	SBRC R21,2
0028e1 c001      	RJMP _0x2020110
                 _0x202010F:
0028e2 c002      	RJMP _0x202010E
                 _0x2020110:
0028e3 e0ea      	LDI  R30,LOW(10)
0028e4 c18a      	RJMP _0x2100012
                 _0x202010E:
0028e5 940e 3d59 	CALL SUBOPT_0xEE
0028e7 940e 371b 	CALL SUBOPT_0x1C
                +
0028e9 8fe8     +STD Y + 24 , R30
0028ea 8ff9     +STD Y + 24 + 1 , R31
0028eb 8f6a     +STD Y + 24 + 2 , R22
0028ec 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
0028ed 01df      	MOVW R26,R30
0028ee 01cb      	MOVW R24,R22
0028ef df5d      	RCALL _check_fs_G101
0028f0 2f1e      	MOV  R17,R30
0028f1 3011      	CPI  R17,1
0028f2 f4c9      	BRNE _0x2020111
0028f3 81ee      	LDD  R30,Y+6
0028f4 81ff      	LDD  R31,Y+6+1
0028f5 96f2      	ADIW R30,50
0028f6 54e2      	SUBI R30,LOW(-446)
0028f7 4ffe      	SBCI R31,HIGH(-446)
0028f8 019f      	MOVW R18,R30
0028f9 81e4      	LDD  R30,Z+4
0028fa 30e0      	CPI  R30,0
0028fb f081      	BREQ _0x2020112
0028fc 01d9      	MOVW R26,R18
0028fd 9618      	ADIW R26,8
0028fe 940e 423f 	CALL __GETD1P
                +
002900 8bee     +STD Y + 22 , R30
002901 8bff     +STD Y + 22 + 1 , R31
002902 8f68     +STD Y + 22 + 2 , R22
002903 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
002904 940e 3d59 	CALL SUBOPT_0xEE
                +
002906 8da8     +LDD R26 , Y + 24
002907 8db9     +LDD R27 , Y + 24 + 1
002908 8d8a     +LDD R24 , Y + 24 + 2
002909 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00290a df42      	RCALL _check_fs_G101
00290b 2f1e      	MOV  R17,R30
                 _0x2020112:
                 _0x2020111:
00290c 3013      	CPI  R17,3
00290d f411      	BRNE _0x2020113
00290e e0e1      	LDI  R30,LOW(1)
00290f c15f      	RJMP _0x2100012
                 _0x2020113:
002910 3010      	CPI  R17,0
002911 f449      	BRNE _0x2020115
002912 81ae      	LDD  R26,Y+6
002913 81bf      	LDD  R27,Y+6+1
002914 96dd      	ADIW R26,61
002915 940e 423b 	CALL __GETW1P
002917 30e0      	CPI  R30,LOW(0x200)
002918 e0a2      	LDI  R26,HIGH(0x200)
002919 07fa      	CPC  R31,R26
00291a f011      	BREQ _0x2020114
                 _0x2020115:
00291b e0ed      	LDI  R30,LOW(13)
00291c c152      	RJMP _0x2100012
                 _0x2020114:
00291d 81ae      	LDD  R26,Y+6
00291e 81bf      	LDD  R27,Y+6+1
00291f 5ba8      	SUBI R26,LOW(-72)
002920 4fbf      	SBCI R27,HIGH(-72)
002921 940e 3bec 	CALL SUBOPT_0xB9
002923 940e 3d97 	CALL SUBOPT_0xF7
002925 940e 3c9d 	CALL SUBOPT_0xD4
002927 940e 42d0 	CALL __CPD10
002929 f441      	BRNE _0x2020117
00292a 81ae      	LDD  R26,Y+6
00292b 81bf      	LDD  R27,Y+6+1
00292c 5aaa      	SUBI R26,LOW(-86)
00292d 4fbf      	SBCI R27,HIGH(-86)
00292e 940e 423f 	CALL __GETD1P
002930 940e 3d97 	CALL SUBOPT_0xF7
                 _0x2020117:
002932 940e 3c9d 	CALL SUBOPT_0xD4
                +
002934 81ae     +LDD R26 , Y + 6
002935 81bf     +LDD R27 , Y + 6 + 1
002936 965a     +ADIW R26 , 26
002937 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,26
002939 81ee      	LDD  R30,Y+6
00293a 81ff      	LDD  R31,Y+6+1
00293b 5bee      	SUBI R30,LOW(-66)
00293c 4fff      	SBCI R31,HIGH(-66)
00293d 81e0      	LD   R30,Z
                +
00293e 81ae     +LDD R26 , Y + 6
00293f 81bf     +LDD R27 , Y + 6 + 1
002940 9613     +ADIW R26 , 3
002941 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
002942 81ee      	LDD  R30,Y+6
002943 81ff      	LDD  R31,Y+6+1
002944 81e3      	LDD  R30,Z+3
002945 e0f0      	LDI  R31,0
002946 940e 3c89 	CALL SUBOPT_0xD0
002948 940e 415d 	CALL __CWD1
00294a 940e 4171 	CALL __MULD12U
00294c 940e 3d97 	CALL SUBOPT_0xF7
00294e 940e 3d9c 	CALL SUBOPT_0xF8
002950 940e 3da3 	CALL SUBOPT_0xF9
                +
002952 81ae     +LDD R26 , Y + 6
002953 81bf     +LDD R27 , Y + 6 + 1
002954 9692     +ADIW R26 , 34
002955 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,34
002957 81ee      	LDD  R30,Y+6
002958 81ff      	LDD  R31,Y+6+1
002959 ade7      	LDD  R30,Z+63
                +
00295a 81ae     +LDD R26 , Y + 6
00295b 81bf     +LDD R27 , Y + 6 + 1
00295c 9612     +ADIW R26 , 2
00295d 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00295e 81ae      	LDD  R26,Y+6
00295f 81bf      	LDD  R27,Y+6+1
002960 5bad      	SUBI R26,LOW(-67)
002961 4fbf      	SBCI R27,HIGH(-67)
002962 940e 423b 	CALL __GETW1P
                +
002964 81ae     +LDD R26 , Y + 6
002965 81bf     +LDD R27 , Y + 6 + 1
002966 9618     +ADIW R26 , 8
002967 93ed     +ST X + , R30
002968 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
002969 81ae      	LDD  R26,Y+6
00296a 81bf      	LDD  R27,Y+6+1
00296b 5bab      	SUBI R26,LOW(-69)
00296c 4fbf      	SBCI R27,HIGH(-69)
00296d 940e 3bec 	CALL SUBOPT_0xB9
                +
00296f 87ee     +STD Y + 14 , R30
002970 87ff     +STD Y + 14 + 1 , R31
002971 8b68     +STD Y + 14 + 2 , R22
002972 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
002973 940e 42d0 	CALL __CPD10
002975 f451      	BRNE _0x2020118
002976 81ae      	LDD  R26,Y+6
002977 81bf      	LDD  R27,Y+6+1
002978 5aae      	SUBI R26,LOW(-82)
002979 4fbf      	SBCI R27,HIGH(-82)
00297a 940e 423f 	CALL __GETD1P
                +
00297c 87ee     +STD Y + 14 , R30
00297d 87ff     +STD Y + 14 + 1 , R31
00297e 8b68     +STD Y + 14 + 2 , R22
00297f 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
                 _0x2020118:
002980 940e 3d9c 	CALL SUBOPT_0xF8
002982 940e 3bfd 	CALL SUBOPT_0xBC
002984 2766      	CLR  R22
002985 2777      	CLR  R23
002986 940e 3ca2 	CALL SUBOPT_0xD5
002988 940e 3c89 	CALL SUBOPT_0xD0
00298a 940e 40dc 	CALL __SUBD12
00298c 937f      	PUSH R23
00298d 936f      	PUSH R22
00298e 93ff      	PUSH R31
00298f 93ef      	PUSH R30
002990 940e 3da8 	CALL SUBOPT_0xFA
002992 91af      	POP  R26
002993 91bf      	POP  R27
002994 918f      	POP  R24
002995 919f      	POP  R25
002996 2766      	CLR  R22
002997 2777      	CLR  R23
002998 940e 40e1 	CALL __SUBD21
00299a 81ee      	LDD  R30,Y+6
00299b 81ff      	LDD  R31,Y+6+1
00299c 81e2      	LDD  R30,Z+2
00299d e0f0      	LDI  R31,0
00299e 940e 415d 	CALL __CWD1
0029a0 940e 41c2 	CALL __DIVD21U
                +
0029a2 5fee     +SUBI R30 , LOW ( - 2 )
0029a3 4fff     +SBCI R31 , HIGH ( - 2 )
0029a4 4f6f     +SBCI R22 , BYTE3 ( - 2 )
0029a5 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
0029a6 940e 3db0 	CALL SUBOPT_0xFB
                +
0029a8 81ae     +LDD R26 , Y + 6
0029a9 81bf     +LDD R27 , Y + 6 + 1
0029aa 965e     +ADIW R26 , 30
0029ab 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,30
0029ad e011      	LDI  R17,LOW(1)
0029ae 940e 3c20 	CALL SUBOPT_0xBF
                +
0029b0 3fa7     +CPI R26 , LOW ( 0xFF7 )
0029b1 e0ef     +LDI R30 , HIGH ( 0xFF7 )
0029b2 07be     +CPC R27 , R30
0029b3 e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
0029b4 078e     +CPC R24 , R30
0029b5 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
0029b6 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
0029b7 f008      	BRLO _0x2020119
0029b8 e012      	LDI  R17,LOW(2)
                 _0x2020119:
0029b9 940e 3c20 	CALL SUBOPT_0xBF
                +
0029bb 3fa7     +CPI R26 , LOW ( 0xFFF7 )
0029bc efef     +LDI R30 , HIGH ( 0xFFF7 )
0029bd 07be     +CPC R27 , R30
0029be e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
0029bf 078e     +CPC R24 , R30
0029c0 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
0029c1 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
0029c2 f008      	BRLO _0x202011A
0029c3 e013      	LDI  R17,LOW(3)
                 _0x202011A:
0029c4 3013      	CPI  R17,3
0029c5 f439      	BRNE _0x202011B
0029c6 81ae      	LDD  R26,Y+6
0029c7 81bf      	LDD  R27,Y+6+1
0029c8 5aa2      	SUBI R26,LOW(-94)
0029c9 4fbf      	SBCI R27,HIGH(-94)
0029ca 940e 423f 	CALL __GETD1P
0029cc c002      	RJMP _0x202027C
                 _0x202011B:
0029cd 940e 3db5 	CALL SUBOPT_0xFC
                 _0x202027C:
                +
0029cf 81ae     +LDD R26 , Y + 6
0029d0 81bf     +LDD R27 , Y + 6 + 1
0029d1 9696     +ADIW R26 , 38
0029d2 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,38
0029d4 940e 3db5 	CALL SUBOPT_0xFC
0029d6 937f      	PUSH R23
0029d7 936f      	PUSH R22
0029d8 93ff      	PUSH R31
0029d9 93ef      	PUSH R30
0029da 940e 3da8 	CALL SUBOPT_0xFA
0029dc 91af      	POP  R26
0029dd 91bf      	POP  R27
0029de 918f      	POP  R24
0029df 919f      	POP  R25
0029e0 940e 3cd9 	CALL SUBOPT_0xDE
                +
0029e2 81ae     +LDD R26 , Y + 6
0029e3 81bf     +LDD R27 , Y + 6 + 1
0029e4 969a     +ADIW R26 , 42
0029e5 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,42
0029e7 81ae      	LDD  R26,Y+6
0029e8 81bf      	LDD  R27,Y+6+1
0029e9 961e      	ADIW R26,14
0029ea 940e 3bf8 	CALL SUBOPT_0xBB
0029ec 940e 424a 	CALL __PUTDP1
0029ee 81ae      	LDD  R26,Y+6
0029ef 81bf      	LDD  R27,Y+6+1
0029f0 9614      	ADIW R26,4
0029f1 e0e0      	LDI  R30,LOW(0)
0029f2 93ec      	ST   X,R30
0029f3 3013      	CPI  R17,3
0029f4 f009      	BREQ PC+2
0029f5 c05f      	RJMP _0x202011D
0029f6 81ae      	LDD  R26,Y+6
0029f7 81bf      	LDD  R27,Y+6+1
0029f8 9615      	ADIW R26,5
0029f9 93ec      	ST   X,R30
0029fa 81ae      	LDD  R26,Y+6
0029fb 81bf      	LDD  R27,Y+6+1
0029fc 59ae      	SUBI R26,LOW(-98)
0029fd 4fbf      	SBCI R27,HIGH(-98)
0029fe 940e 423b 	CALL __GETW1P
002a00 940e 3da3 	CALL SUBOPT_0xF9
                +
002a02 81ae     +LDD R26 , Y + 6
002a03 81bf     +LDD R27 , Y + 6 + 1
002a04 9652     +ADIW R26 , 18
002a05 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,18
002a07 81ee      	LDD  R30,Y+6
002a08 81ff      	LDD  R31,Y+6+1
002a09 81a1      	LDD  R26,Z+1
002a0a 93aa      	ST   -Y,R26
002a0b 81ef      	LDD  R30,Y+7
002a0c 85f8      	LDD  R31,Y+7+1
002a0d 96f2      	ADIW R30,50
002a0e 93fa      	ST   -Y,R31
002a0f 93ea      	ST   -Y,R30
002a10 85e9      	LDD  R30,Y+9
002a11 85fa      	LDD  R31,Y+9+1
002a12 940e 3b99 	CALL SUBOPT_0xB0
002a14 940e 1ecb 	CALL _disk_read
002a16 30e0      	CPI  R30,0
002a17 f511      	BRNE _0x202011F
002a18 81ee      	LDD  R30,Y+6
002a19 81ff      	LDD  R31,Y+6+1
002a1a 940e 3d77 	CALL SUBOPT_0xF4
002a1c f4e9      	BRNE _0x202011F
002a1d 81ae      	LDD  R26,Y+6
002a1e 81bf      	LDD  R27,Y+6+1
002a1f 96d2      	ADIW R26,50
002a20 940e 423f 	CALL __GETD1P
                +
002a22 35e2     +CPI R30 , LOW ( 0x41615252 )
002a23 e5a2     +LDI R26 , HIGH ( 0x41615252 )
002a24 07fa     +CPC R31 , R26
002a25 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
002a26 076a     +CPC R22 , R26
002a27 e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
002a28 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
002a29 f481      	BRNE _0x202011F
002a2a 81ee      	LDD  R30,Y+6
002a2b 81ff      	LDD  R31,Y+6+1
002a2c 96f2      	ADIW R30,50
002a2d 51ec      	SUBI R30,LOW(-484)
002a2e 4ffe      	SBCI R31,HIGH(-484)
002a2f 01df      	MOVW R26,R30
002a30 940e 423f 	CALL __GETD1P
                +
002a32 37e2     +CPI R30 , LOW ( 0x61417272 )
002a33 e7a2     +LDI R26 , HIGH ( 0x61417272 )
002a34 07fa     +CPC R31 , R26
002a35 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
002a36 076a     +CPC R22 , R26
002a37 e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
002a38 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
002a39 f009      	BREQ _0x2020120
                 _0x202011F:
002a3a c01a      	RJMP _0x202011E
                 _0x2020120:
002a3b 81ee      	LDD  R30,Y+6
002a3c 81ff      	LDD  R31,Y+6+1
002a3d 96f2      	ADIW R30,50
002a3e 51e4      	SUBI R30,LOW(-492)
002a3f 4ffe      	SBCI R31,HIGH(-492)
002a40 01df      	MOVW R26,R30
002a41 940e 423f 	CALL __GETD1P
                +
002a43 81ae     +LDD R26 , Y + 6
002a44 81bf     +LDD R27 , Y + 6 + 1
002a45 961a     +ADIW R26 , 10
002a46 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,10
002a48 81ee      	LDD  R30,Y+6
002a49 81ff      	LDD  R31,Y+6+1
002a4a 96f2      	ADIW R30,50
002a4b 51e8      	SUBI R30,LOW(-488)
002a4c 4ffe      	SBCI R31,HIGH(-488)
002a4d 01df      	MOVW R26,R30
002a4e 940e 423f 	CALL __GETD1P
                +
002a50 81ae     +LDD R26 , Y + 6
002a51 81bf     +LDD R27 , Y + 6 + 1
002a52 961e     +ADIW R26 , 14
002a53 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x202011E:
                 _0x202011D:
002a55 81ae      	LDD  R26,Y+6
002a56 81bf      	LDD  R27,Y+6+1
002a57 931c      	ST   X,R17
002a58 969e      	ADIW R26,46
002a59 940e 3b87 	CALL SUBOPT_0xAD
002a5b 81ae      	LDD  R26,Y+6
002a5c 81bf      	LDD  R27,Y+6+1
002a5d 9656      	ADIW R26,22
002a5e 940e 3b87 	CALL SUBOPT_0xAD
002a60 91e0 36c3 	LDS  R30,_Fsid_G101
002a62 91f0 36c4 	LDS  R31,_Fsid_G101+1
002a64 9631      	ADIW R30,1
002a65 93e0 36c3 	STS  _Fsid_G101,R30
002a67 93f0 36c4 	STS  _Fsid_G101+1,R31
                +
002a69 81ae     +LDD R26 , Y + 6
002a6a 81bf     +LDD R27 , Y + 6 + 1
002a6b 9616     +ADIW R26 , 6
002a6c 93ed     +ST X + , R30
002a6d 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x2100013:
002a6e e0e0      	LDI  R30,LOW(0)
                 _0x2100012:
002a6f 940e 42eb 	CALL __LOADLOCR6
002a71 966f      	ADIW R28,31
002a72 9508      	RET
                 ; .FEND
                 _validate_G101:
                 ; .FSTART _validate_G101
002a73 93ba      	ST   -Y,R27
002a74 93aa      	ST   -Y,R26
002a75 81ea      	LDD  R30,Y+2
002a76 81fb      	LDD  R31,Y+2+1
002a77 9730      	SBIW R30,0
002a78 f071      	BREQ _0x2020122
002a79 81aa      	LDD  R26,Y+2
002a7a 81bb      	LDD  R27,Y+2+1
002a7b 91ec      	LD   R30,X
002a7c 30e0      	CPI  R30,0
002a7d f049      	BREQ _0x2020122
002a7e 81ea      	LDD  R30,Y+2
002a7f 81fb      	LDD  R31,Y+2+1
002a80 81a6      	LDD  R26,Z+6
002a81 81b7      	LDD  R27,Z+7
002a82 81e8      	LD   R30,Y
002a83 81f9      	LDD  R31,Y+1
002a84 17ea      	CP   R30,R26
002a85 07fb      	CPC  R31,R27
002a86 f011      	BREQ _0x2020121
                 _0x2020122:
002a87 e0e9      	LDI  R30,LOW(9)
002a88 c00a      	RJMP _0x2100011
                 _0x2020121:
002a89 81ea      	LDD  R30,Y+2
002a8a 81fb      	LDD  R31,Y+2+1
002a8b 81a1      	LDD  R26,Z+1
002a8c 940e 1ec1 	CALL _disk_status
002a8e 70e1      	ANDI R30,LOW(0x1)
002a8f f011      	BREQ _0x2020124
002a90 e0e3      	LDI  R30,LOW(3)
002a91 c001      	RJMP _0x2100011
                 _0x2020124:
002a92 e0e0      	LDI  R30,LOW(0)
                 _0x2100011:
002a93 9624      	ADIW R28,4
002a94 9508      	RET
                 ; .FEND
                 _f_mount:
                 ; .FSTART _f_mount
002a95 93ba      	ST   -Y,R27
002a96 93aa      	ST   -Y,R26
002a97 931a      	ST   -Y,R17
002a98 930a      	ST   -Y,R16
002a99 81ac      	LDD  R26,Y+4
002a9a 30a1      	CPI  R26,LOW(0x1)
002a9b f010      	BRLO _0x2020125
002a9c e0eb      	LDI  R30,LOW(11)
002a9d c01d      	RJMP _0x2100010
                 _0x2020125:
002a9e 81ec      	LDD  R30,Y+4
002a9f 940e 3d8f 	CALL SUBOPT_0xF6
002aa1 910d      	LD   R16,X+
002aa2 911c      	LD   R17,X
002aa3 2e00      	MOV  R0,R16
002aa4 2a01      	OR   R0,R17
002aa5 f019      	BREQ _0x2020126
002aa6 01d8      	MOVW R26,R16
002aa7 e0e0      	LDI  R30,LOW(0)
002aa8 93ec      	ST   X,R30
                 _0x2020126:
002aa9 81ea      	LDD  R30,Y+2
002aaa 81fb      	LDD  R31,Y+2+1
002aab 9730      	SBIW R30,0
002aac f021      	BREQ _0x2020127
002aad 81aa      	LDD  R26,Y+2
002aae 81bb      	LDD  R27,Y+2+1
002aaf e0e0      	LDI  R30,LOW(0)
002ab0 93ec      	ST   X,R30
                 _0x2020127:
002ab1 81ec      	LDD  R30,Y+4
002ab2 eca1      	LDI  R26,LOW(_FatFs_G101)
002ab3 e3b6      	LDI  R27,HIGH(_FatFs_G101)
002ab4 940e 392d 	CALL SUBOPT_0x63
002ab6 81aa      	LDD  R26,Y+2
002ab7 81bb      	LDD  R27,Y+2+1
002ab8 83a0      	STD  Z+0,R26
002ab9 83b1      	STD  Z+1,R27
002aba e0e0      	LDI  R30,LOW(0)
                 _0x2100010:
002abb 8119      	LDD  R17,Y+1
002abc 8108      	LDD  R16,Y+0
002abd 9625      	ADIW R28,5
002abe 9508      	RET
                 ; .FEND
                 _f_open:
                 ; .FSTART _f_open
002abf 93aa      	ST   -Y,R26
002ac0 97a2      	SBIW R28,34
002ac1 940e 42e6 	CALL __SAVELOCR4
002ac3 a5a9      	LDD  R26,Y+41
002ac4 a5ba      	LDD  R27,Y+41+1
002ac5 940e 3d5e 	CALL SUBOPT_0xEF
002ac7 a1ee      	LDD  R30,Y+38
002ac8 71ef      	ANDI R30,LOW(0x1F)
002ac9 a3ee      	STD  Y+38,R30
002aca 01fe      	MOVW R30,R28
002acb 96b7      	ADIW R30,39
002acc 93fa      	ST   -Y,R31
002acd 93ea      	ST   -Y,R30
002ace 01fe      	MOVW R30,R28
002acf 9672      	ADIW R30,18
002ad0 93fa      	ST   -Y,R31
002ad1 93ea      	ST   -Y,R30
002ad2 a5ea      	LDD  R30,Y+42
002ad3 71ee      	ANDI R30,LOW(0x1E)
002ad4 2fae      	MOV  R26,R30
002ad5 dda9      	RCALL _chk_mounted
002ad6 2f1e      	MOV  R17,R30
002ad7 3010      	CPI  R17,0
002ad8 f009      	BREQ _0x2020128
002ad9 c113      	RJMP _0x210000F
                 _0x2020128:
002ada 01fe      	MOVW R30,R28
002adb 9634      	ADIW R30,4
002adc a3ec      	STD  Y+36,R30
002add a3fd      	STD  Y+36+1,R31
002ade 01fe      	MOVW R30,R28
002adf 9670      	ADIW R30,16
002ae0 93fa      	ST   -Y,R31
002ae1 93ea      	ST   -Y,R30
002ae2 a5a9      	LDD  R26,Y+41
002ae3 a5ba      	LDD  R27,Y+41+1
002ae4 dce2      	RCALL _follow_path_G101
002ae5 2f1e      	MOV  R17,R30
002ae6 a1ee      	LDD  R30,Y+38
002ae7 71ec      	ANDI R30,LOW(0x1C)
002ae8 f409      	BRNE PC+2
002ae9 c096      	RJMP _0x2020129
002aea 9728      	SBIW R28,8
002aeb 3010      	CPI  R17,0
002aec f089      	BREQ _0x202012A
002aed 3014      	CPI  R17,4
002aee f421      	BRNE _0x202012B
002aef 01de      	MOVW R26,R28
002af0 9658      	ADIW R26,24
002af1 dbe7      	RCALL _dir_register_G101
002af2 2f1e      	MOV  R17,R30
                 _0x202012B:
002af3 3010      	CPI  R17,0
002af4 f019      	BREQ _0x202012C
002af5 2fe1      	MOV  R30,R17
002af6 9628      	ADIW R28,8
002af7 c0f5      	RJMP _0x210000F
                 _0x202012C:
002af8 a5ee      	LDD  R30,Y+46
002af9 60e8      	ORI  R30,8
002afa a7ee      	STD  Y+46,R30
                +
002afb a52a     +LDD R18 , Y + 42
002afc a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
002afd c069      	RJMP _0x202012D
                 _0x202012A:
002afe a5ee      	LDD  R30,Y+46
002aff 70e4      	ANDI R30,LOW(0x4)
002b00 f019      	BREQ _0x202012E
002b01 e0e8      	LDI  R30,LOW(8)
002b02 9628      	ADIW R28,8
002b03 c0e9      	RJMP _0x210000F
                 _0x202012E:
                +
002b04 a52a     +LDD R18 , Y + 42
002b05 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
002b06 2e02      	MOV  R0,R18
002b07 2a03      	OR   R0,R19
002b08 f021      	BREQ _0x2020130
002b09 01f9      	MOVW R30,R18
002b0a 85e3      	LDD  R30,Z+11
002b0b 71e1      	ANDI R30,LOW(0x11)
002b0c f019      	BREQ _0x202012F
                 _0x2020130:
002b0d e0e7      	LDI  R30,LOW(7)
002b0e 9628      	ADIW R28,8
002b0f c0dd      	RJMP _0x210000F
                 _0x202012F:
002b10 a5ee      	LDD  R30,Y+46
002b11 70e8      	ANDI R30,LOW(0x8)
002b12 f409      	BRNE PC+2
002b13 c053      	RJMP _0x2020132
002b14 940e 3d63 	CALL SUBOPT_0xF0
002b16 940e 4152 	CALL __LSLD16
002b18 937f      	PUSH R23
002b19 936f      	PUSH R22
002b1a 93ff      	PUSH R31
002b1b 93ef      	PUSH R30
002b1c 940e 3d66 	CALL SUBOPT_0xF1
002b1e 91af      	POP  R26
002b1f 91bf      	POP  R27
002b20 918f      	POP  R24
002b21 919f      	POP  R25
002b22 940e 3d6b 	CALL SUBOPT_0xF2
002b24 940e 376d 	CALL SUBOPT_0x27
002b26 01f9      	MOVW R30,R18
002b27 9674      	ADIW R30,20
002b28 e0a0      	LDI  R26,LOW(0)
002b29 e0b0      	LDI  R27,HIGH(0)
002b2a 83a0      	STD  Z+0,R26
002b2b 83b1      	STD  Z+1,R27
002b2c 01f9      	MOVW R30,R18
002b2d 967a      	ADIW R30,26
002b2e 83a0      	STD  Z+0,R26
002b2f 83b1      	STD  Z+1,R27
002b30 01f9      	MOVW R30,R18
002b31 967c      	ADIW R30,28
002b32 940e 3c5e 	CALL SUBOPT_0xC8
002b34 940e 4267 	CALL __PUTDZ20
002b36 8da8      	LDD  R26,Y+24
002b37 8db9      	LDD  R27,Y+24+1
002b38 9614      	ADIW R26,4
002b39 e0e1      	LDI  R30,LOW(1)
002b3a 93ec      	ST   X,R30
002b3b 8da8      	LDD  R26,Y+24
002b3c 8db9      	LDD  R27,Y+24+1
002b3d 969e      	ADIW R26,46
002b3e 940e 3ba9 	CALL SUBOPT_0xB2
002b40 940e 379d 	CALL SUBOPT_0x2E
002b42 f0a9      	BREQ _0x2020133
002b43 8de8      	LDD  R30,Y+24
002b44 8df9      	LDD  R31,Y+24+1
002b45 93fa      	ST   -Y,R31
002b46 93ea      	ST   -Y,R30
002b47 940e 3cb1 	CALL SUBOPT_0xD8
002b49 d892      	RCALL _remove_chain_G101
002b4a 2f1e      	MOV  R17,R30
002b4b 3010      	CPI  R17,0
002b4c f011      	BREQ _0x2020134
002b4d 9628      	ADIW R28,8
002b4e c09e      	RJMP _0x210000F
                 _0x2020134:
002b4f 940e 3c81 	CALL SUBOPT_0xCE
002b51 940e 3830 	CALL SUBOPT_0x43
                +
002b53 8da8     +LDD R26 , Y + 24
002b54 8db9     +LDD R27 , Y + 24 + 1
002b55 961a     +ADIW R26 , 10
002b56 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2020133:
002b58 8de8      	LDD  R30,Y+24
002b59 8df9      	LDD  R31,Y+24+1
002b5a 93fa      	ST   -Y,R31
002b5b 93ea      	ST   -Y,R30
                +
002b5c 81ae     +LDD R26 , Y + 6
002b5d 81bf     +LDD R27 , Y + 6 + 1
002b5e 8588     +LDD R24 , Y + 6 + 2
002b5f 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
002b60 940e 21ed 	CALL _move_window_G101
002b62 2f1e      	MOV  R17,R30
002b63 3010      	CPI  R17,0
002b64 f011      	BREQ _0x2020135
002b65 9628      	ADIW R28,8
002b66 c086      	RJMP _0x210000F
                 _0x2020135:
                 _0x2020132:
                 _0x202012D:
002b67 a5ee      	LDD  R30,Y+46
002b68 70e8      	ANDI R30,LOW(0x8)
002b69 f0a1      	BREQ _0x2020136
002b6a 01f9      	MOVW R30,R18
002b6b 963b      	ADIW R30,11
002b6c e0a0      	LDI  R26,LOW(0)
002b6d 83a0      	STD  Z+0,R26
002b6e 940e 2155 	CALL _get_fattime
002b70 940e 3cf9 	CALL SUBOPT_0xE3
                +
002b72 01d9     +MOVW R26 , R18
002b73 961e     +ADIW R26 , 14
002b74 940e 424a+CALL __PUTDP1
                 	__PUTD1RNS 18,14
002b76 8da8      	LDD  R26,Y+24
002b77 8db9      	LDD  R27,Y+24+1
002b78 9614      	ADIW R26,4
002b79 e0e1      	LDI  R30,LOW(1)
002b7a 93ec      	ST   X,R30
002b7b a5ee      	LDD  R30,Y+46
002b7c 62e0      	ORI  R30,0x20
002b7d a7ee      	STD  Y+46,R30
                 _0x2020136:
002b7e 9628      	ADIW R28,8
002b7f c019      	RJMP _0x2020137
                 _0x2020129:
002b80 3010      	CPI  R17,0
002b81 f011      	BREQ _0x2020138
002b82 2fe1      	MOV  R30,R17
002b83 c069      	RJMP _0x210000F
                 _0x2020138:
                +
002b84 a12a     +LDD R18 , Y + 34
002b85 a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
002b86 2e02      	MOV  R0,R18
002b87 2a03      	OR   R0,R19
002b88 f021      	BREQ _0x202013A
002b89 01f9      	MOVW R30,R18
002b8a 85e3      	LDD  R30,Z+11
002b8b 71e0      	ANDI R30,LOW(0x10)
002b8c f011      	BREQ _0x2020139
                 _0x202013A:
002b8d e0e4      	LDI  R30,LOW(4)
002b8e c05e      	RJMP _0x210000F
                 _0x2020139:
002b8f a1ee      	LDD  R30,Y+38
002b90 70e2      	ANDI R30,LOW(0x2)
002b91 f021      	BREQ _0x202013D
002b92 01f9      	MOVW R30,R18
002b93 85e3      	LDD  R30,Z+11
002b94 70e1      	ANDI R30,LOW(0x1)
002b95 f409      	BRNE _0x202013E
                 _0x202013D:
002b96 c002      	RJMP _0x202013C
                 _0x202013E:
002b97 e0e7      	LDI  R30,LOW(7)
002b98 c054      	RJMP _0x210000F
                 _0x202013C:
                 _0x2020137:
002b99 89a8      	LDD  R26,Y+16
002b9a 89b9      	LDD  R27,Y+16+1
002b9b 969e      	ADIW R26,46
002b9c 940e 423f 	CALL __GETD1P
                +
002b9e a5a9     +LDD R26 , Y + 41
002b9f a5ba     +LDD R27 , Y + 41 + 1
002ba0 965a     +ADIW R26 , 26
002ba1 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 41,26
002ba3 a1ea      	LDD  R30,Y+34
002ba4 a1fb      	LDD  R31,Y+34+1
                +
002ba5 a5a9     +LDD R26 , Y + 41
002ba6 a5ba     +LDD R27 , Y + 41 + 1
002ba7 965e     +ADIW R26 , 30
002ba8 93ed     +ST X + , R30
002ba9 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
002baa a1ee      	LDD  R30,Y+38
                +
002bab a5a9     +LDD R26 , Y + 41
002bac a5ba     +LDD R27 , Y + 41 + 1
002bad 9614     +ADIW R26 , 4
002bae 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
002baf 940e 3d63 	CALL SUBOPT_0xF0
002bb1 940e 4152 	CALL __LSLD16
002bb3 937f      	PUSH R23
002bb4 936f      	PUSH R22
002bb5 93ff      	PUSH R31
002bb6 93ef      	PUSH R30
002bb7 940e 3d66 	CALL SUBOPT_0xF1
002bb9 91af      	POP  R26
002bba 91bf      	POP  R27
002bbb 918f      	POP  R24
002bbc 919f      	POP  R25
002bbd 940e 3d6b 	CALL SUBOPT_0xF2
                +
002bbf a5a9     +LDD R26 , Y + 41
002bc0 a5ba     +LDD R27 , Y + 41 + 1
002bc1 961e     +ADIW R26 , 14
002bc2 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 41,14
002bc4 01d9      	MOVW R26,R18
002bc5 965c      	ADIW R26,28
002bc6 940e 423f 	CALL __GETD1P
                +
002bc8 a5a9     +LDD R26 , Y + 41
002bc9 a5ba     +LDD R27 , Y + 41 + 1
002bca 961a     +ADIW R26 , 10
002bcb 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 41,10
002bcd a5a9      	LDD  R26,Y+41
002bce a5ba      	LDD  R27,Y+41+1
002bcf 9616      	ADIW R26,6
002bd0 940e 3b87 	CALL SUBOPT_0xAD
002bd2 a5a9      	LDD  R26,Y+41
002bd3 a5ba      	LDD  R27,Y+41+1
002bd4 9615      	ADIW R26,5
002bd5 efef      	LDI  R30,LOW(255)
002bd6 93ec      	ST   X,R30
002bd7 a5a9      	LDD  R26,Y+41
002bd8 a5ba      	LDD  R27,Y+41+1
002bd9 9656      	ADIW R26,22
002bda 940e 3b87 	CALL SUBOPT_0xAD
002bdc 89e8      	LDD  R30,Y+16
002bdd 89f9      	LDD  R31,Y+16+1
002bde a5a9      	LDD  R26,Y+41
002bdf a5ba      	LDD  R27,Y+41+1
002be0 93ed      	ST   X+,R30
002be1 93fc      	ST   X,R31
002be2 89a8      	LDD  R26,Y+16
002be3 89b9      	LDD  R27,Y+16+1
002be4 9616      	ADIW R26,6
002be5 940e 423b 	CALL __GETW1P
                +
002be7 a5a9     +LDD R26 , Y + 41
002be8 a5ba     +LDD R27 , Y + 41 + 1
002be9 9612     +ADIW R26 , 2
002bea 93ed     +ST X + , R30
002beb 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
002bec e0e0      	LDI  R30,LOW(0)
                 _0x210000F:
002bed 940e 42ed 	CALL __LOADLOCR4
002bef 96ab      	ADIW R28,43
002bf0 9508      	RET
                 ; .FEND
                 _f_write:
                 ; .FSTART _f_write
002bf1 93ba      	ST   -Y,R27
002bf2 93aa      	ST   -Y,R26
002bf3 972a      	SBIW R28,10
002bf4 940e 42e4 	CALL __SAVELOCR6
002bf6 89ec      	LDD  R30,Y+20
002bf7 89fd      	LDD  R31,Y+20+1
002bf8 83ee      	STD  Y+6,R30
002bf9 83ff      	STD  Y+6+1,R31
002bfa 89a8      	LDD  R26,Y+16
002bfb 89b9      	LDD  R27,Y+16+1
002bfc 940e 3d5e 	CALL SUBOPT_0xEF
002bfe 940e 3dbc 	CALL SUBOPT_0xFD
002c00 940e 3dc1 	CALL SUBOPT_0xFE
002c02 940e 3dc6 	CALL SUBOPT_0xFF
002c04 f011      	BREQ _0x2020159
002c05 2fe1      	MOV  R30,R17
002c06 c1b2      	RJMP _0x210000E
                 _0x2020159:
002c07 89ee      	LDD  R30,Y+22
002c08 89ff      	LDD  R31,Y+22+1
002c09 81a4      	LDD  R26,Z+4
002c0a 78a0      	ANDI R26,LOW(0x80)
002c0b f011      	BREQ _0x202015A
002c0c e0e2      	LDI  R30,LOW(2)
002c0d c1ab      	RJMP _0x210000E
                 _0x202015A:
002c0e 89ee      	LDD  R30,Y+22
002c0f 89ff      	LDD  R31,Y+22+1
002c10 81a4      	LDD  R26,Z+4
002c11 70a2      	ANDI R26,LOW(0x2)
002c12 f411      	BRNE _0x202015B
002c13 e0e7      	LDI  R30,LOW(7)
002c14 c1a4      	RJMP _0x210000E
                 _0x202015B:
002c15 89ee      	LDD  R30,Y+22
002c16 89ff      	LDD  R31,Y+22+1
                +
002c17 85a2     +LDD R26 , Z + 10
002c18 85b3     +LDD R27 , Z + 10 + 1
002c19 8584     +LDD R24 , Z + 10 + 2
002c1a 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
002c1b 89ea      	LDD  R30,Y+18
002c1c 89fb      	LDD  R31,Y+18+1
002c1d 940e 3cd9 	CALL SUBOPT_0xDE
002c1f 937f      	PUSH R23
002c20 936f      	PUSH R22
002c21 93ff      	PUSH R31
002c22 93ef      	PUSH R30
002c23 940e 3dcd 	CALL SUBOPT_0x100
002c25 91af      	POP  R26
002c26 91bf      	POP  R27
002c27 918f      	POP  R24
002c28 919f      	POP  R25
002c29 940e 42df 	CALL __CPD21
002c2b f418      	BRSH _0x202015C
002c2c e0e0      	LDI  R30,LOW(0)
002c2d 8bea      	STD  Y+18,R30
002c2e 8beb      	STD  Y+18+1,R30
                 _0x202015C:
                 _0x202015E:
002c2f 89ea      	LDD  R30,Y+18
002c30 89fb      	LDD  R31,Y+18+1
002c31 9730      	SBIW R30,0
002c32 f409      	BRNE PC+2
002c33 c16b      	RJMP _0x202015F
002c34 940e 3dd3 	CALL SUBOPT_0x101
002c36 01fd      	MOVW R30,R26
002c37 01bc      	MOVW R22,R24
002c38 70f1      	ANDI R31,HIGH(0x1FF)
002c39 9730      	SBIW R30,0
002c3a f009      	BREQ PC+2
002c3b c11f      	RJMP _0x2020160
002c3c 89ee      	LDD  R30,Y+22
002c3d 89ff      	LDD  R31,Y+22+1
002c3e 8005      	LDD  R0,Z+5
002c3f 940e 3dbc 	CALL SUBOPT_0xFD
002c41 81e2      	LDD  R30,Z+2
002c42 160e      	CP   R0,R30
002c43 f408      	BRSH PC+2
002c44 c04a      	RJMP _0x2020161
002c45 89ae      	LDD  R26,Y+22
002c46 89bf      	LDD  R27,Y+22+1
002c47 9616      	ADIW R26,6
002c48 940e 3ce6 	CALL SUBOPT_0xE0
002c4a f4a1      	BRNE _0x2020162
002c4b 89ae      	LDD  R26,Y+22
002c4c 89bf      	LDD  R27,Y+22+1
002c4d 961e      	ADIW R26,14
002c4e 940e 423f 	CALL __GETD1P
002c50 940e 3c93 	CALL SUBOPT_0xD2
002c52 f459      	BRNE _0x2020163
002c53 940e 3dbc 	CALL SUBOPT_0xFD
002c55 940e 3dda 	CALL SUBOPT_0x102
002c57 940e 37bf 	CALL SUBOPT_0x33
                +
002c59 89ae     +LDD R26 , Y + 22
002c5a 89bf     +LDD R27 , Y + 22 + 1
002c5b 961e     +ADIW R26 , 14
002c5c 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2020163:
002c5e c00c      	RJMP _0x2020164
                 _0x2020162:
002c5f 940e 3dbc 	CALL SUBOPT_0xFD
002c61 940e 3dc1 	CALL SUBOPT_0xFE
                +
002c63 89a2     +LDD R26 , Z + 18
002c64 89b3     +LDD R27 , Z + 18 + 1
002c65 8984     +LDD R24 , Z + 18 + 2
002c66 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
002c67 940e 2431 	CALL _create_chain_G101
002c69 940e 37bf 	CALL SUBOPT_0x33
                 _0x2020164:
002c6b 940e 382b 	CALL SUBOPT_0x42
002c6d 940e 42d0 	CALL __CPD10
002c6f f409      	BRNE _0x2020165
002c70 c12e      	RJMP _0x202015F
                 _0x2020165:
002c71 940e 37eb 	CALL SUBOPT_0x3A
002c73 940e 3c4e 	CALL SUBOPT_0xC6
002c75 f421      	BRNE _0x2020166
002c76 940e 3ddf 	CALL SUBOPT_0x103
002c78 e0e2      	LDI  R30,LOW(2)
002c79 c13f      	RJMP _0x210000E
                 _0x2020166:
002c7a 940e 37eb 	CALL SUBOPT_0x3A
002c7c 940e 3c56 	CALL SUBOPT_0xC7
002c7e f421      	BRNE _0x2020167
002c7f 940e 3ddf 	CALL SUBOPT_0x103
002c81 e0e1      	LDI  R30,LOW(1)
002c82 c136      	RJMP _0x210000E
                 _0x2020167:
002c83 940e 382b 	CALL SUBOPT_0x42
                +
002c85 89ae     +LDD R26 , Y + 22
002c86 89bf     +LDD R27 , Y + 22 + 1
002c87 9652     +ADIW R26 , 18
002c88 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 22,18
002c8a 89ae      	LDD  R26,Y+22
002c8b 89bf      	LDD  R27,Y+22+1
002c8c 9615      	ADIW R26,5
002c8d e0e0      	LDI  R30,LOW(0)
002c8e 93ec      	ST   X,R30
                 _0x2020161:
002c8f 89ee      	LDD  R30,Y+22
002c90 89ff      	LDD  R31,Y+22+1
002c91 81a4      	LDD  R26,Z+4
002c92 74a0      	ANDI R26,LOW(0x40)
002c93 f089      	BREQ _0x2020168
002c94 940e 3dbc 	CALL SUBOPT_0xFD
002c96 940e 3de6 	CALL SUBOPT_0x104
002c98 8de9      	LDD  R30,Y+25
002c99 8dfa      	LDD  R31,Y+25+1
002c9a 940e 3dee 	CALL SUBOPT_0x105
002c9c 940e 3df3 	CALL SUBOPT_0x106
002c9e f021      	BREQ _0x2020169
002c9f 940e 3ddf 	CALL SUBOPT_0x103
002ca1 e0e1      	LDI  R30,LOW(1)
002ca2 c116      	RJMP _0x210000E
                 _0x2020169:
002ca3 940e 3dfa 	CALL SUBOPT_0x107
                 _0x2020168:
002ca5 940e 3dbc 	CALL SUBOPT_0xFD
002ca7 940e 3dc1 	CALL SUBOPT_0xFE
                +
002ca9 89a2     +LDD R26 , Z + 18
002caa 89b3     +LDD R27 , Z + 18 + 1
002cab 8984     +LDD R24 , Z + 18 + 2
002cac 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
002cad d83c      	RCALL _clust2sect
002cae 940e 37d3 	CALL SUBOPT_0x36
002cb0 940e 37f0 	CALL SUBOPT_0x3B
002cb2 940e 42d0 	CALL __CPD10
002cb4 f421      	BRNE _0x202016A
002cb5 940e 3ddf 	CALL SUBOPT_0x103
002cb7 e0e2      	LDI  R30,LOW(2)
002cb8 c100      	RJMP _0x210000E
                 _0x202016A:
002cb9 940e 3e01 	CALL SUBOPT_0x108
002cbb 940e 3826 	CALL SUBOPT_0x41
002cbd 940e 38d5 	CALL SUBOPT_0x59
002cbf 940e 37d3 	CALL SUBOPT_0x36
002cc1 89aa      	LDD  R26,Y+18
002cc2 89bb      	LDD  R27,Y+18+1
002cc3 e0e0      	LDI  R30,LOW(512)
002cc4 e0f2      	LDI  R31,HIGH(512)
002cc5 940e 41af 	CALL __DIVW21U
002cc7 01af      	MOVW R20,R30
002cc8 2e04      	MOV  R0,R20
002cc9 2a05      	OR   R0,R21
002cca f409      	BRNE PC+2
002ccb c064      	RJMP _0x202016B
002ccc 940e 3e01 	CALL SUBOPT_0x108
002cce 0fe4      	ADD  R30,R20
002ccf 1ff5      	ADC  R31,R21
002cd0 010f      	MOVW R0,R30
002cd1 940e 3dbc 	CALL SUBOPT_0xFD
002cd3 81e2      	LDD  R30,Z+2
002cd4 01d0      	MOVW R26,R0
002cd5 e0f0      	LDI  R31,0
002cd6 17ea      	CP   R30,R26
002cd7 07fb      	CPC  R31,R27
002cd8 f450      	BRSH _0x202016C
002cd9 940e 3dbc 	CALL SUBOPT_0xFD
002cdb 81e2      	LDD  R30,Z+2
002cdc e0f0      	LDI  R31,0
002cdd 01df      	MOVW R26,R30
002cde 940e 3e01 	CALL SUBOPT_0x108
002ce0 1bae      	SUB  R26,R30
002ce1 0bbf      	SBC  R27,R31
002ce2 01ad      	MOVW R20,R26
                 _0x202016C:
002ce3 940e 3dbc 	CALL SUBOPT_0xFD
002ce5 81e1      	LDD  R30,Z+1
002ce6 93ea      	ST   -Y,R30
002ce7 81ef      	LDD  R30,Y+7
002ce8 85f8      	LDD  R31,Y+7+1
002ce9 93fa      	ST   -Y,R31
002cea 93ea      	ST   -Y,R30
                +
002ceb 85eb     +LDD R30 , Y + 11
002cec 85fc     +LDD R31 , Y + 11 + 1
002ced 856d     +LDD R22 , Y + 11 + 2
002cee 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
002cef 940e 426c 	CALL __PUTPARD1
002cf1 2fa4      	MOV  R26,R20
002cf2 940e 1f2f 	CALL _disk_write
002cf4 30e0      	CPI  R30,0
002cf5 f021      	BREQ _0x202016D
002cf6 940e 3ddf 	CALL SUBOPT_0x103
002cf8 e0e1      	LDI  R30,LOW(1)
002cf9 c0bf      	RJMP _0x210000E
                 _0x202016D:
002cfa 940e 3e06 	CALL SUBOPT_0x109
002cfc 940e 40e1 	CALL __SUBD21
002cfe 01fa      	MOVW R30,R20
002cff 2766      	CLR  R22
002d00 2777      	CLR  R23
002d01 940e 42df 	CALL __CPD21
002d03 f4f8      	BRSH _0x202016E
002d04 89ee      	LDD  R30,Y+22
002d05 89ff      	LDD  R31,Y+22+1
002d06 96b0      	ADIW R30,32
002d07 940e 3dc1 	CALL SUBOPT_0xFE
002d09 940e 3dee 	CALL SUBOPT_0x105
002d0b 940e 3c98 	CALL SUBOPT_0xD3
002d0d 940e 40e1 	CALL __SUBD21
                +
002d0f e0e0     +LDI R30 , LOW ( 0x200 )
002d10 e0f2     +LDI R31 , HIGH ( 0x200 )
002d11 e060     +LDI R22 , BYTE3 ( 0x200 )
002d12 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
002d13 940e 4171 	CALL __MULD12U
002d15 85a8      	LDD  R26,Y+8
002d16 85b9      	LDD  R27,Y+8+1
002d17 2788      	CLR  R24
002d18 2799      	CLR  R25
002d19 0fea      	ADD  R30,R26
002d1a 1ffb      	ADC  R31,R27
002d1b 93fa      	ST   -Y,R31
002d1c 93ea      	ST   -Y,R30
002d1d e0a0      	LDI  R26,LOW(512)
002d1e e0b2      	LDI  R27,HIGH(512)
002d1f 940e 3365 	CALL _memcpy
002d21 940e 3dfa 	CALL SUBOPT_0x107
                 _0x202016E:
002d23 89ae      	LDD  R26,Y+22
002d24 89bf      	LDD  R27,Y+22+1
002d25 9615      	ADIW R26,5
002d26 91ec      	LD   R30,X
002d27 0fe4      	ADD  R30,R20
002d28 93ec      	ST   X,R30
002d29 01fa      	MOVW R30,R20
002d2a 0fee      	LSL  R30
002d2b 1fff      	ROL  R31
002d2c 2ffe      	MOV  R31,R30
002d2d e0e0      	LDI  R30,0
002d2e 019f      	MOVW R18,R30
002d2f c04d      	RJMP _0x202015D
                 _0x202016B:
002d30 940e 3e06 	CALL SUBOPT_0x109
002d32 940e 42da 	CALL __CPD12
002d34 f0c9      	BREQ _0x202016F
002d35 940e 3dd3 	CALL SUBOPT_0x101
002d37 010d      	MOVW R0,R26
002d38 940e 3dcd 	CALL SUBOPT_0x100
002d3a 01d0      	MOVW R26,R0
002d3b 940e 42df 	CALL __CPD21
002d3d f458      	BRSH _0x2020171
002d3e 940e 3dbc 	CALL SUBOPT_0xFD
002d40 940e 3de6 	CALL SUBOPT_0x104
                +
002d42 85eb     +LDD R30 , Y + 11
002d43 85fc     +LDD R31 , Y + 11 + 1
002d44 856d     +LDD R22 , Y + 11 + 2
002d45 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
002d46 940e 3d70 	CALL SUBOPT_0xF3
002d48 f409      	BRNE _0x2020172
                 _0x2020171:
002d49 c004      	RJMP _0x2020170
                 _0x2020172:
002d4a 940e 3ddf 	CALL SUBOPT_0x103
002d4c e0e1      	LDI  R30,LOW(1)
002d4d c06b      	RJMP _0x210000E
                 _0x2020170:
                 _0x202016F:
002d4e 940e 37f0 	CALL SUBOPT_0x3B
                +
002d50 89ae     +LDD R26 , Y + 22
002d51 89bf     +LDD R27 , Y + 22 + 1
002d52 9656     +ADIW R26 , 22
002d53 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 22,22
002d55 89ae      	LDD  R26,Y+22
002d56 89bf      	LDD  R27,Y+22+1
002d57 9615      	ADIW R26,5
002d58 91ec      	LD   R30,X
002d59 5fef      	SUBI R30,-LOW(1)
002d5a 93ec      	ST   X,R30
                 _0x2020160:
002d5b 940e 3e0a 	CALL SUBOPT_0x10A
002d5d e0a0      	LDI  R26,LOW(512)
002d5e e0b2      	LDI  R27,HIGH(512)
002d5f 1bae      	SUB  R26,R30
002d60 0bbf      	SBC  R27,R31
002d61 019d      	MOVW R18,R26
002d62 89ea      	LDD  R30,Y+18
002d63 89fb      	LDD  R31,Y+18+1
002d64 17e2      	CP   R30,R18
002d65 07f3      	CPC  R31,R19
002d66 f410      	BRSH _0x2020173
                +
002d67 892a     +LDD R18 , Y + 18
002d68 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2020173:
002d69 940e 3e0a 	CALL SUBOPT_0x10A
002d6b 89ae      	LDD  R26,Y+22
002d6c 89bf      	LDD  R27,Y+22+1
002d6d 9690      	ADIW R26,32
002d6e 0fea      	ADD  R30,R26
002d6f 1ffb      	ADC  R31,R27
002d70 93fa      	ST   -Y,R31
002d71 93ea      	ST   -Y,R30
002d72 940e 3e11 	CALL SUBOPT_0x10B
002d74 01d9      	MOVW R26,R18
002d75 940e 3365 	CALL _memcpy
002d77 89ae      	LDD  R26,Y+22
002d78 89bf      	LDD  R27,Y+22+1
002d79 9614      	ADIW R26,4
002d7a 91ec      	LD   R30,X
002d7b 64e0      	ORI  R30,0x40
002d7c 93ec      	ST   X,R30
                 _0x202015D:
002d7d 01f9      	MOVW R30,R18
002d7e 81ae      	LDD  R26,Y+6
002d7f 81bf      	LDD  R27,Y+6+1
002d80 0fea      	ADD  R30,R26
002d81 1ffb      	ADC  R31,R27
002d82 83ee      	STD  Y+6,R30
002d83 83ff      	STD  Y+6+1,R31
002d84 89ee      	LDD  R30,Y+22
002d85 89ff      	LDD  R31,Y+22+1
002d86 940e 3e16 	CALL SUBOPT_0x10C
002d88 01df      	MOVW R26,R30
002d89 01cb      	MOVW R24,R22
002d8a 01f9      	MOVW R30,R18
002d8b 940e 3cd9 	CALL SUBOPT_0xDE
002d8d 01d0      	MOVW R26,R0
002d8e 940e 424a 	CALL __PUTDP1
002d90 89a8      	LDD  R26,Y+16
002d91 89b9      	LDD  R27,Y+16+1
002d92 940e 423b 	CALL __GETW1P
002d94 0fe2      	ADD  R30,R18
002d95 1ff3      	ADC  R31,R19
002d96 93ed      	ST   X+,R30
002d97 93fc      	ST   X,R31
002d98 89ea      	LDD  R30,Y+18
002d99 89fb      	LDD  R31,Y+18+1
002d9a 1be2      	SUB  R30,R18
002d9b 0bf3      	SBC  R31,R19
002d9c 8bea      	STD  Y+18,R30
002d9d 8bfb      	STD  Y+18+1,R31
002d9e ce90      	RJMP _0x202015E
                 _0x202015F:
002d9f 940e 3dd3 	CALL SUBOPT_0x101
002da1 010d      	MOVW R0,R26
002da2 940e 3dcd 	CALL SUBOPT_0x100
002da4 01d0      	MOVW R26,R0
002da5 940e 42da 	CALL __CPD12
002da7 f450      	BRSH _0x2020174
002da8 89ae      	LDD  R26,Y+22
002da9 89bf      	LDD  R27,Y+22+1
002daa 9616      	ADIW R26,6
002dab 940e 423f 	CALL __GETD1P
                +
002dad 89ae     +LDD R26 , Y + 22
002dae 89bf     +LDD R27 , Y + 22 + 1
002daf 961a     +ADIW R26 , 10
002db0 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2020174:
002db2 89ae      	LDD  R26,Y+22
002db3 89bf      	LDD  R27,Y+22+1
002db4 9614      	ADIW R26,4
002db5 91ec      	LD   R30,X
002db6 62e0      	ORI  R30,0x20
002db7 93ec      	ST   X,R30
002db8 e0e0      	LDI  R30,LOW(0)
                 _0x210000E:
002db9 940e 42eb 	CALL __LOADLOCR6
002dbb 9668      	ADIW R28,24
002dbc 9508      	RET
                 ; .FEND
                 _f_sync:
                 ; .FSTART _f_sync
002dbd 93ba      	ST   -Y,R27
002dbe 93aa      	ST   -Y,R26
002dbf 9724      	SBIW R28,4
002dc0 940e 42e6 	CALL __SAVELOCR4
002dc2 940e 3cb6 	CALL SUBOPT_0xD9
002dc4 93fa      	ST   -Y,R31
002dc5 93ea      	ST   -Y,R30
002dc6 85ea      	LDD  R30,Y+10
002dc7 85fb      	LDD  R31,Y+10+1
002dc8 940e 3dc6 	CALL SUBOPT_0xFF
002dca f009      	BREQ PC+2
002dcb c074      	RJMP _0x2020175
002dcc 85e8      	LDD  R30,Y+8
002dcd 85f9      	LDD  R31,Y+8+1
002dce 81a4      	LDD  R26,Z+4
002dcf 72a0      	ANDI R26,LOW(0x20)
002dd0 f409      	BRNE PC+2
002dd1 c06e      	RJMP _0x2020176
002dd2 81a4      	LDD  R26,Z+4
002dd3 74a0      	ANDI R26,LOW(0x40)
002dd4 f0c1      	BREQ _0x2020177
002dd5 940e 3cb6 	CALL SUBOPT_0xD9
002dd7 81e1      	LDD  R30,Z+1
002dd8 93ea      	ST   -Y,R30
002dd9 85e9      	LDD  R30,Y+9
002dda 85fa      	LDD  R31,Y+9+1
002ddb 96b0      	ADIW R30,32
002ddc 93fa      	ST   -Y,R31
002ddd 93ea      	ST   -Y,R30
002dde 85eb      	LDD  R30,Y+11
002ddf 85fc      	LDD  R31,Y+11+1
002de0 940e 3dee 	CALL SUBOPT_0x105
002de2 940e 3df3 	CALL SUBOPT_0x106
002de4 f011      	BREQ _0x2020178
002de5 e0e1      	LDI  R30,LOW(1)
002de6 c05a      	RJMP _0x210000D
                 _0x2020178:
002de7 85a8      	LDD  R26,Y+8
002de8 85b9      	LDD  R27,Y+8+1
002de9 9614      	ADIW R26,4
002dea 91ec      	LD   R30,X
002deb 7bef      	ANDI R30,0xBF
002dec 93ec      	ST   X,R30
                 _0x2020177:
002ded 940e 3cb6 	CALL SUBOPT_0xD9
002def 93fa      	ST   -Y,R31
002df0 93ea      	ST   -Y,R30
002df1 85ea      	LDD  R30,Y+10
002df2 85fb      	LDD  R31,Y+10+1
                +
002df3 8da2     +LDD R26 , Z + 26
002df4 8db3     +LDD R27 , Z + 26 + 1
002df5 8d84     +LDD R24 , Z + 26 + 2
002df6 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
002df7 940e 21ed 	CALL _move_window_G101
002df9 2f1e      	MOV  R17,R30
002dfa 3010      	CPI  R17,0
002dfb f009      	BREQ PC+2
002dfc c043      	RJMP _0x2020179
002dfd 85a8      	LDD  R26,Y+8
002dfe 85b9      	LDD  R27,Y+8+1
002dff 965e      	ADIW R26,30
002e00 912d      	LD   R18,X+
002e01 913c      	LD   R19,X
002e02 01d9      	MOVW R26,R18
002e03 961b      	ADIW R26,11
002e04 91ec      	LD   R30,X
002e05 62e0      	ORI  R30,0x20
002e06 93ec      	ST   X,R30
002e07 85a8      	LDD  R26,Y+8
002e08 85b9      	LDD  R27,Y+8+1
002e09 961a      	ADIW R26,10
002e0a 940e 423f 	CALL __GETD1P
                +
002e0c 01d9     +MOVW R26 , R18
002e0d 965c     +ADIW R26 , 28
002e0e 940e 424a+CALL __PUTDP1
                 	__PUTD1RNS 18,28
002e10 85a8      	LDD  R26,Y+8
002e11 85b9      	LDD  R27,Y+8+1
002e12 961e      	ADIW R26,14
002e13 940e 423b 	CALL __GETW1P
                +
002e15 01d9     +MOVW R26 , R18
002e16 965a     +ADIW R26 , 26
002e17 93ed     +ST X + , R30
002e18 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
002e19 85e8      	LDD  R30,Y+8
002e1a 85f9      	LDD  R31,Y+8+1
                +
002e1b 85a6     +LDD R26 , Z + 14
002e1c 85b7     +LDD R27 , Z + 14 + 1
002e1d 8980     +LDD R24 , Z + 14 + 2
002e1e 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
002e1f 01fd      	MOVW R30,R26
002e20 01bc      	MOVW R22,R24
002e21 940e 414d 	CALL __LSRD16
                +
002e23 01d9     +MOVW R26 , R18
002e24 9654     +ADIW R26 , 20
002e25 93ed     +ST X + , R30
002e26 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
002e27 940e 2155 	CALL _get_fattime
002e29 940e 3cf9 	CALL SUBOPT_0xE3
                +
002e2b 01d9     +MOVW R26 , R18
002e2c 9656     +ADIW R26 , 22
002e2d 940e 424a+CALL __PUTDP1
                 	__PUTD1RNS 18,22
002e2f 85a8      	LDD  R26,Y+8
002e30 85b9      	LDD  R27,Y+8+1
002e31 9614      	ADIW R26,4
002e32 91ec      	LD   R30,X
002e33 7def      	ANDI R30,0xDF
002e34 93ec      	ST   X,R30
002e35 940e 3cb6 	CALL SUBOPT_0xD9
002e37 9634      	ADIW R30,4
002e38 e0a1      	LDI  R26,LOW(1)
002e39 83a0      	STD  Z+0,R26
002e3a 940e 3cb6 	CALL SUBOPT_0xD9
002e3c 01df      	MOVW R26,R30
002e3d 940e 2251 	CALL _sync_G101
002e3f 2f1e      	MOV  R17,R30
                 _0x2020179:
                 _0x2020176:
                 _0x2020175:
002e40 2fe1      	MOV  R30,R17
                 _0x210000D:
002e41 940e 42ed 	CALL __LOADLOCR4
002e43 962a      	ADIW R28,10
002e44 9508      	RET
                 ; .FEND
                 _f_close:
                 ; .FSTART _f_close
002e45 93ba      	ST   -Y,R27
002e46 93aa      	ST   -Y,R26
002e47 931a      	ST   -Y,R17
002e48 81a9      	LDD  R26,Y+1
002e49 81ba      	LDD  R27,Y+1+1
002e4a df72      	RCALL _f_sync
002e4b 2f1e      	MOV  R17,R30
002e4c 3010      	CPI  R17,0
002e4d f421      	BRNE _0x202017A
002e4e 81a9      	LDD  R26,Y+1
002e4f 81ba      	LDD  R27,Y+1+1
002e50 940e 3d5e 	CALL SUBOPT_0xEF
                 _0x202017A:
002e52 2fe1      	MOV  R30,R17
002e53 8118      	LDD  R17,Y+0
002e54 9623      	ADIW R28,3
002e55 9508      	RET
                 ; .FEND
                 _f_lseek:
                 ; .FSTART _f_lseek
002e56 940e 4271 	CALL __PUTPARD2
002e58 9760      	SBIW R28,16
002e59 931a      	ST   -Y,R17
002e5a 940e 3e1c 	CALL SUBOPT_0x10D
002e5c 93fa      	ST   -Y,R31
002e5d 93ea      	ST   -Y,R30
002e5e 89ef      	LDD  R30,Y+23
002e5f 8df8      	LDD  R31,Y+23+1
002e60 940e 3dc6 	CALL SUBOPT_0xFF
002e62 f009      	BREQ _0x2020183
002e63 c19a      	RJMP _0x210000C
                 _0x2020183:
002e64 89ed      	LDD  R30,Y+21
002e65 89fe      	LDD  R31,Y+21+1
002e66 81a4      	LDD  R26,Z+4
002e67 78a0      	ANDI R26,LOW(0x80)
002e68 f011      	BREQ _0x2020184
002e69 e0e2      	LDI  R30,LOW(2)
002e6a c194      	RJMP _0x210000B
                 _0x2020184:
002e6b 940e 3e21 	CALL SUBOPT_0x10E
002e6d 940e 3e27 	CALL SUBOPT_0x10F
002e6f 940e 42da 	CALL __CPD12
002e71 f428      	BRSH _0x2020186
002e72 89ed      	LDD  R30,Y+21
002e73 89fe      	LDD  R31,Y+21+1
002e74 81a4      	LDD  R26,Z+4
002e75 70a2      	ANDI R26,LOW(0x2)
002e76 f009      	BREQ _0x2020187
                 _0x2020186:
002e77 c004      	RJMP _0x2020185
                 _0x2020187:
002e78 940e 3e21 	CALL SUBOPT_0x10E
002e7a 940e 3e2c 	CALL SUBOPT_0x110
                 _0x2020185:
002e7c 89ad      	LDD  R26,Y+21
002e7d 89be      	LDD  R27,Y+21+1
002e7e 9616      	ADIW R26,6
002e7f 940e 3b50 	CALL SUBOPT_0xA6
002e81 940e 371b 	CALL SUBOPT_0x1C
002e83 940e 3c73 	CALL SUBOPT_0xCB
002e85 940e 3e31 	CALL SUBOPT_0x111
002e87 9615      	ADIW R26,5
002e88 efef      	LDI  R30,LOW(255)
002e89 93ec      	ST   X,R30
002e8a 940e 3e27 	CALL SUBOPT_0x10F
002e8c 940e 42d4 	CALL __CPD02
002e8e f008      	BRLO PC+2
002e8f c111      	RJMP _0x2020188
002e90 940e 3e1c 	CALL SUBOPT_0x10D
002e92 81e2      	LDD  R30,Z+2
002e93 e0f0      	LDI  R31,0
002e94 940e 415d 	CALL __CWD1
                +
002e96 e0a0     +LDI R26 , LOW ( 0x200 )
002e97 e0b2     +LDI R27 , HIGH ( 0x200 )
002e98 e080     +LDI R24 , BYTE3 ( 0x200 )
002e99 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
002e9a 940e 4171 	CALL __MULD12U
002e9c 940e 3e39 	CALL SUBOPT_0x112
002e9e 940e 3b5c 	CALL SUBOPT_0xA8
002ea0 940e 42d4 	CALL __CPD02
002ea2 f498      	BRSH _0x202018A
002ea3 940e 3e3e 	CALL SUBOPT_0x113
002ea5 940e 3e43 	CALL SUBOPT_0x114
002ea7 937f      	PUSH R23
002ea8 936f      	PUSH R22
002ea9 93ff      	PUSH R31
002eaa 93ef      	PUSH R30
002eab 940e 3c49 	CALL SUBOPT_0xC5
002ead 940e 3e43 	CALL SUBOPT_0x114
002eaf 91af      	POP  R26
002eb0 91bf      	POP  R27
002eb1 918f      	POP  R24
002eb2 919f      	POP  R25
002eb3 940e 42df 	CALL __CPD21
002eb5 f408      	BRSH _0x202018B
                 _0x202018A:
002eb6 c021      	RJMP _0x2020189
                 _0x202018B:
002eb7 940e 3c49 	CALL SUBOPT_0xC5
002eb9 940e 3830 	CALL SUBOPT_0x43
002ebb 01df      	MOVW R26,R30
002ebc 01cb      	MOVW R24,R22
002ebd 940e 3e4d 	CALL SUBOPT_0x115
002ebf 940e 3830 	CALL SUBOPT_0x43
002ec1 940e 4167 	CALL __COMD1
002ec3 940e 40e6 	CALL __ANDD12
002ec5 940e 3e31 	CALL SUBOPT_0x111
002ec7 9616      	ADIW R26,6
002ec8 940e 423f 	CALL __GETD1P
002eca 940e 3e27 	CALL SUBOPT_0x10F
002ecc 940e 40e1 	CALL __SUBD21
                +
002ece 8ba9     +STD Y + 17 , R26
002ecf 8bba     +STD Y + 17 + 1 , R27
002ed0 8b8b     +STD Y + 17 + 2 , R24
002ed1 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
002ed2 89ad      	LDD  R26,Y+21
002ed3 89be      	LDD  R27,Y+21+1
002ed4 9652      	ADIW R26,18
002ed5 940e 3e52 	CALL SUBOPT_0x116
002ed7 c02b      	RJMP _0x202018C
                 _0x2020189:
002ed8 89ad      	LDD  R26,Y+21
002ed9 89be      	LDD  R27,Y+21+1
002eda 961e      	ADIW R26,14
002edb 940e 3e52 	CALL SUBOPT_0x116
002edd 940e 3e59 	CALL SUBOPT_0x117
002edf 940e 42d0 	CALL __CPD10
002ee1 f4f9      	BRNE _0x202018D
002ee2 940e 3e1c 	CALL SUBOPT_0x10D
002ee4 940e 3dda 	CALL SUBOPT_0x102
002ee6 940e 3e5e 	CALL SUBOPT_0x118
002ee8 940e 3e63 	CALL SUBOPT_0x119
002eea 940e 3c4e 	CALL SUBOPT_0xC6
002eec f421      	BRNE _0x202018E
002eed 940e 3e68 	CALL SUBOPT_0x11A
002eef e0e2      	LDI  R30,LOW(2)
002ef0 c10e      	RJMP _0x210000B
                 _0x202018E:
002ef1 940e 3e63 	CALL SUBOPT_0x119
002ef3 940e 3c56 	CALL SUBOPT_0xC7
002ef5 f421      	BRNE _0x202018F
002ef6 940e 3e68 	CALL SUBOPT_0x11A
002ef8 e0e1      	LDI  R30,LOW(1)
002ef9 c105      	RJMP _0x210000B
                 _0x202018F:
002efa 940e 3e59 	CALL SUBOPT_0x117
                +
002efc 89ad     +LDD R26 , Y + 21
002efd 89be     +LDD R27 , Y + 21 + 1
002efe 961e     +ADIW R26 , 14
002eff 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x202018D:
002f01 940e 3e6f 	CALL SUBOPT_0x11B
                 _0x202018C:
002f03 940e 3e59 	CALL SUBOPT_0x117
002f05 940e 42d0 	CALL __CPD10
002f07 f409      	BRNE PC+2
002f08 c098      	RJMP _0x2020190
                 _0x2020191:
002f09 940e 3e4d 	CALL SUBOPT_0x115
002f0b 940e 3e27 	CALL SUBOPT_0x10F
002f0d 940e 42da 	CALL __CPD12
002f0f f008      	BRLO PC+2
002f10 c053      	RJMP _0x2020193
002f11 89ed      	LDD  R30,Y+21
002f12 89fe      	LDD  R31,Y+21+1
002f13 81a4      	LDD  R26,Z+4
002f14 70a2      	ANDI R26,LOW(0x2)
002f15 f099      	BREQ _0x2020194
002f16 940e 3e1c 	CALL SUBOPT_0x10D
002f18 940e 3e76 	CALL SUBOPT_0x11C
002f1a 940e 2431 	CALL _create_chain_G101
002f1c 940e 3e5e 	CALL SUBOPT_0x118
002f1e 940e 3e59 	CALL SUBOPT_0x117
002f20 940e 42d0 	CALL __CPD10
002f22 f429      	BRNE _0x2020195
002f23 940e 3e4d 	CALL SUBOPT_0x115
002f25 940e 3e2c 	CALL SUBOPT_0x110
002f27 c03c      	RJMP _0x2020193
                 _0x2020195:
002f28 c008      	RJMP _0x2020196
                 _0x2020194:
002f29 940e 3e1c 	CALL SUBOPT_0x10D
002f2b 940e 3e76 	CALL SUBOPT_0x11C
002f2d 940e 22c1 	CALL _get_fat
002f2f 940e 3e5e 	CALL SUBOPT_0x118
                 _0x2020196:
002f31 940e 3e63 	CALL SUBOPT_0x119
002f33 940e 3c56 	CALL SUBOPT_0xC7
002f35 f421      	BRNE _0x2020197
002f36 940e 3e68 	CALL SUBOPT_0x11A
002f38 e0e1      	LDI  R30,LOW(1)
002f39 c0c5      	RJMP _0x210000B
                 _0x2020197:
002f3a 940e 3e63 	CALL SUBOPT_0x119
002f3c 940e 3ba1 	CALL SUBOPT_0xB1
002f3e f058      	BRLO _0x2020199
002f3f 940e 3e1c 	CALL SUBOPT_0x10D
002f41 967e      	ADIW R30,30
002f42 01df      	MOVW R26,R30
002f43 940e 423f 	CALL __GETD1P
002f45 940e 3e63 	CALL SUBOPT_0x119
002f47 940e 42df 	CALL __CPD21
002f49 f020      	BRLO _0x2020198
                 _0x2020199:
002f4a 940e 3e68 	CALL SUBOPT_0x11A
002f4c e0e2      	LDI  R30,LOW(2)
002f4d c0b1      	RJMP _0x210000B
                 _0x2020198:
002f4e 940e 3e6f 	CALL SUBOPT_0x11B
002f50 89ed      	LDD  R30,Y+21
002f51 89fe      	LDD  R31,Y+21+1
002f52 940e 3e16 	CALL SUBOPT_0x10C
002f54 940e 3e7d 	CALL SUBOPT_0x11D
002f56 940e 40d2 	CALL __ADDD12
002f58 01d0      	MOVW R26,R0
002f59 940e 424a 	CALL __PUTDP1
002f5b 940e 3e7d 	CALL SUBOPT_0x11D
002f5d 940e 3e3e 	CALL SUBOPT_0x113
002f5f 940e 40dc 	CALL __SUBD12
002f61 940e 3e2c 	CALL SUBOPT_0x110
002f63 cfa5      	RJMP _0x2020191
                 _0x2020193:
002f64 89ed      	LDD  R30,Y+21
002f65 89fe      	LDD  R31,Y+21+1
002f66 940e 3e16 	CALL SUBOPT_0x10C
002f68 940e 3e27 	CALL SUBOPT_0x10F
002f6a 940e 40d2 	CALL __ADDD12
002f6c 01d0      	MOVW R26,R0
002f6d 940e 424a 	CALL __PUTDP1
002f6f 940e 3e27 	CALL SUBOPT_0x10F
                +
002f71 e0e0     +LDI R30 , LOW ( 0x200 )
002f72 e0f2     +LDI R31 , HIGH ( 0x200 )
002f73 e060     +LDI R22 , BYTE3 ( 0x200 )
002f74 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
002f75 940e 41c2 	CALL __DIVD21U
                +
002f77 89ad     +LDD R26 , Y + 21
002f78 89be     +LDD R27 , Y + 21 + 1
002f79 9615     +ADIW R26 , 5
002f7a 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
002f7b 940e 3e3e 	CALL SUBOPT_0x113
002f7d 70f1      	ANDI R31,HIGH(0x1FF)
002f7e 9730      	SBIW R30,0
002f7f f109      	BREQ _0x202019B
002f80 940e 3e1c 	CALL SUBOPT_0x10D
002f82 940e 3e76 	CALL SUBOPT_0x11C
002f84 940e 24ea 	CALL _clust2sect
002f86 940e 3c73 	CALL SUBOPT_0xCB
002f88 940e 3b57 	CALL SUBOPT_0xA7
002f8a 940e 42d0 	CALL __CPD10
002f8c f421      	BRNE _0x202019C
002f8d 940e 3e68 	CALL SUBOPT_0x11A
002f8f e0e2      	LDI  R30,LOW(2)
002f90 c06e      	RJMP _0x210000B
                 _0x202019C:
002f91 89ed      	LDD  R30,Y+21
002f92 89fe      	LDD  R31,Y+21+1
002f93 81e5      	LDD  R30,Z+5
002f94 e0f0      	LDI  R31,0
002f95 940e 3c3b 	CALL SUBOPT_0xC3
002f97 940e 38d5 	CALL SUBOPT_0x59
002f99 940e 3c73 	CALL SUBOPT_0xCB
002f9b 89ad      	LDD  R26,Y+21
002f9c 89be      	LDD  R27,Y+21+1
002f9d 9615      	ADIW R26,5
002f9e 91ec      	LD   R30,X
002f9f 5fef      	SUBI R30,-LOW(1)
002fa0 93ec      	ST   X,R30
                 _0x202019B:
                 _0x2020190:
                 _0x2020188:
002fa1 940e 3e82 	CALL SUBOPT_0x11E
002fa3 01fd      	MOVW R30,R26
002fa4 01bc      	MOVW R22,R24
002fa5 70f1      	ANDI R31,HIGH(0x1FF)
002fa6 9730      	SBIW R30,0
002fa7 f051      	BREQ _0x202019E
002fa8 89ad      	LDD  R26,Y+21
002fa9 89be      	LDD  R27,Y+21+1
002faa 9656      	ADIW R26,22
002fab 940e 423f 	CALL __GETD1P
002fad 940e 3c3b 	CALL SUBOPT_0xC3
002faf 940e 42da 	CALL __CPD12
002fb1 f409      	BRNE _0x202019F
                 _0x202019E:
002fb2 c032      	RJMP _0x202019D
                 _0x202019F:
002fb3 89ed      	LDD  R30,Y+21
002fb4 89fe      	LDD  R31,Y+21+1
002fb5 81a4      	LDD  R26,Z+4
002fb6 74a0      	ANDI R26,LOW(0x40)
002fb7 f0c1      	BREQ _0x20201A0
002fb8 940e 3e1c 	CALL SUBOPT_0x10D
002fba 81e1      	LDD  R30,Z+1
002fbb 93ea      	ST   -Y,R30
002fbc 89ee      	LDD  R30,Y+22
002fbd 89ff      	LDD  R31,Y+22+1
002fbe 96b0      	ADIW R30,32
002fbf 940e 3dc1 	CALL SUBOPT_0xFE
002fc1 940e 3dee 	CALL SUBOPT_0x105
002fc3 940e 3df3 	CALL SUBOPT_0x106
002fc5 f021      	BREQ _0x20201A1
002fc6 940e 3e68 	CALL SUBOPT_0x11A
002fc8 e0e1      	LDI  R30,LOW(1)
002fc9 c035      	RJMP _0x210000B
                 _0x20201A1:
002fca 89ad      	LDD  R26,Y+21
002fcb 89be      	LDD  R27,Y+21+1
002fcc 9614      	ADIW R26,4
002fcd 91ec      	LD   R30,X
002fce 7bef      	ANDI R30,0xBF
002fcf 93ec      	ST   X,R30
                 _0x20201A0:
002fd0 940e 3e1c 	CALL SUBOPT_0x10D
002fd2 81e1      	LDD  R30,Z+1
002fd3 93ea      	ST   -Y,R30
002fd4 89ee      	LDD  R30,Y+22
002fd5 89ff      	LDD  R31,Y+22+1
002fd6 96b0      	ADIW R30,32
002fd7 940e 3b75 	CALL SUBOPT_0xAB
002fd9 f021      	BREQ _0x20201A2
002fda 940e 3e68 	CALL SUBOPT_0x11A
002fdc e0e1      	LDI  R30,LOW(1)
002fdd c021      	RJMP _0x210000B
                 _0x20201A2:
002fde 940e 3b57 	CALL SUBOPT_0xA7
                +
002fe0 89ad     +LDD R26 , Y + 21
002fe1 89be     +LDD R27 , Y + 21 + 1
002fe2 9656     +ADIW R26 , 22
002fe3 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x202019D:
002fe5 940e 3e82 	CALL SUBOPT_0x11E
002fe7 010d      	MOVW R0,R26
002fe8 940e 3e21 	CALL SUBOPT_0x10E
002fea 01d0      	MOVW R26,R0
002feb 940e 42da 	CALL __CPD12
002fed f480      	BRSH _0x20201A3
002fee 89ad      	LDD  R26,Y+21
002fef 89be      	LDD  R27,Y+21+1
002ff0 9616      	ADIW R26,6
002ff1 940e 423f 	CALL __GETD1P
                +
002ff3 89ad     +LDD R26 , Y + 21
002ff4 89be     +LDD R27 , Y + 21 + 1
002ff5 961a     +ADIW R26 , 10
002ff6 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 21,10
002ff8 89ad      	LDD  R26,Y+21
002ff9 89be      	LDD  R27,Y+21+1
002ffa 9614      	ADIW R26,4
002ffb 91ec      	LD   R30,X
002ffc 62e0      	ORI  R30,0x20
002ffd 93ec      	ST   X,R30
                 _0x20201A3:
                 _0x210000C:
002ffe 2fe1      	MOV  R30,R17
                 _0x210000B:
002fff 8118      	LDD  R17,Y+0
003000 9667      	ADIW R28,23
003001 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
003002 93ba      	ST   -Y,R27
003003 93aa      	ST   -Y,R26
003004 931a      	ST   -Y,R17
003005 930a      	ST   -Y,R16
003006 81aa      	LDD  R26,Y+2
003007 81bb      	LDD  R27,Y+2+1
003008 9612      	ADIW R26,2
003009 940e 423b 	CALL __GETW1P
00300b 9730      	SBIW R30,0
00300c f129      	BREQ _0x2040027
00300d 81aa      	LDD  R26,Y+2
00300e 81bb      	LDD  R27,Y+2+1
00300f 9614      	ADIW R26,4
003010 940e 423b 	CALL __GETW1P
003012 018f      	MOVW R16,R30
003013 9730      	SBIW R30,0
003014 f061      	BREQ _0x2040029
                +
003015 3002     +CPI R16 , LOW ( 2 )
003016 e0e0     +LDI R30 , HIGH ( 2 )
003017 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
003018 f080      	BRLO _0x204002A
003019 01f8      	MOVW R30,R16
00301a 9731      	SBIW R30,1
00301b 018f      	MOVW R16,R30
                +
00301c 81aa     +LDD R26 , Y + 2
00301d 81bb     +LDD R27 , Y + 2 + 1
00301e 9614     +ADIW R26 , 4
00301f 93ed     +ST X + , R30
003020 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040029:
003021 81aa      	LDD  R26,Y+2
003022 81bb      	LDD  R27,Y+2+1
003023 9612      	ADIW R26,2
003024 940e 3e89 	CALL SUBOPT_0x11F
003026 9731      	SBIW R30,1
003027 81ac      	LDD  R26,Y+4
003028 83a0      	STD  Z+0,R26
                 _0x204002A:
003029 81aa      	LDD  R26,Y+2
00302a 81bb      	LDD  R27,Y+2+1
00302b 940e 423b 	CALL __GETW1P
00302d 23ff      	TST  R31
00302e f012      	BRMI _0x204002B
00302f 940e 3e89 	CALL SUBOPT_0x11F
                 _0x204002B:
003031 c006      	RJMP _0x204002C
                 _0x2040027:
003032 81aa      	LDD  R26,Y+2
003033 81bb      	LDD  R27,Y+2+1
003034 efef      	LDI  R30,LOW(65535)
003035 efff      	LDI  R31,HIGH(65535)
003036 93ed      	ST   X+,R30
003037 93fc      	ST   X,R31
                 _0x204002C:
003038 8119      	LDD  R17,Y+1
003039 8108      	LDD  R16,Y+0
00303a 940c 3482 	JMP  _0x2100006
                 ; .FEND
                 __ftoe_G102:
                 ; .FSTART __ftoe_G102
00303c 940e 3e8f 	CALL SUBOPT_0x120
00303e e8e0      	LDI  R30,LOW(128)
00303f 83ea      	STD  Y+2,R30
003040 e3ef      	LDI  R30,LOW(63)
003041 83eb      	STD  Y+3,R30
003042 940e 42e6 	CALL __SAVELOCR4
003044 85ee      	LDD  R30,Y+14
003045 85ff      	LDD  R31,Y+14+1
003046 3fef      	CPI  R30,LOW(0xFFFF)
003047 efaf      	LDI  R26,HIGH(0xFFFF)
003048 07fa      	CPC  R31,R26
003049 f439      	BRNE _0x2040034
00304a 940e 3e11 	CALL SUBOPT_0x10B
                +
00304c eea6     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
00304d e0b4     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
00304e 940e 3387 	CALL _strcpyf
003050 c0af      	RJMP _0x210000A
                 _0x2040034:
003051 3fef      	CPI  R30,LOW(0x7FFF)
003052 e7af      	LDI  R26,HIGH(0x7FFF)
003053 07fa      	CPC  R31,R26
003054 f439      	BRNE _0x2040033
003055 940e 3e11 	CALL SUBOPT_0x10B
                +
003057 eea7     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
003058 e0b4     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
003059 940e 3387 	CALL _strcpyf
00305b c0a4      	RJMP _0x210000A
                 _0x2040033:
00305c 85ab      	LDD  R26,Y+11
00305d 30a7      	CPI  R26,LOW(0x7)
00305e f010      	BRLO _0x2040036
00305f e0e6      	LDI  R30,LOW(6)
003060 87eb      	STD  Y+11,R30
                 _0x2040036:
003061 851b      	LDD  R17,Y+11
                 _0x2040037:
003062 2fe1      	MOV  R30,R17
003063 5011      	SUBI R17,1
003064 30e0      	CPI  R30,0
003065 f029      	BREQ _0x2040039
003066 940e 3e96 	CALL SUBOPT_0x121
003068 940e 37d8 	CALL SUBOPT_0x37
00306a cff7      	RJMP _0x2040037
                 _0x2040039:
00306b 940e 382b 	CALL SUBOPT_0x42
00306d 940e 42d0 	CALL __CPD10
00306f f431      	BRNE _0x204003A
003070 e030      	LDI  R19,LOW(0)
003071 940e 3e96 	CALL SUBOPT_0x121
003073 940e 37d8 	CALL SUBOPT_0x37
003075 c02b      	RJMP _0x204003B
                 _0x204003A:
003076 853b      	LDD  R19,Y+11
003077 940e 3e98 	CALL SUBOPT_0x122
003079 f009      	BREQ PC+2
00307a f408      	BRCC PC+2
00307b c00b      	RJMP _0x204003C
00307c 940e 3e96 	CALL SUBOPT_0x121
00307e 940e 37d8 	CALL SUBOPT_0x37
                 _0x204003D:
003080 940e 3e98 	CALL SUBOPT_0x122
003082 f018      	BRLO _0x204003F
003083 940e 3e9d 	CALL SUBOPT_0x123
003085 cffa      	RJMP _0x204003D
                 _0x204003F:
003086 c00f      	RJMP _0x2040040
                 _0x204003C:
                 _0x2040041:
003087 940e 3e98 	CALL SUBOPT_0x122
003089 f440      	BRSH _0x2040043
00308a 940e 37eb 	CALL SUBOPT_0x3A
00308c 940e 3b36 	CALL SUBOPT_0xA2
00308e 940e 37bf 	CALL SUBOPT_0x33
003090 5031      	SUBI R19,LOW(1)
003091 cff5      	RJMP _0x2040041
                 _0x2040043:
003092 940e 3e96 	CALL SUBOPT_0x121
003094 940e 37d8 	CALL SUBOPT_0x37
                 _0x2040040:
003096 940e 382b 	CALL SUBOPT_0x42
003098 940e 3ea7 	CALL SUBOPT_0x124
00309a 940e 37bf 	CALL SUBOPT_0x33
00309c 940e 3e98 	CALL SUBOPT_0x122
00309e f010      	BRLO _0x2040044
00309f 940e 3e9d 	CALL SUBOPT_0x123
                 _0x2040044:
                 _0x204003B:
0030a1 e010      	LDI  R17,LOW(0)
                 _0x2040045:
0030a2 85eb      	LDD  R30,Y+11
0030a3 17e1      	CP   R30,R17
0030a4 f178      	BRLO _0x2040047
0030a5 940e 3c7c 	CALL SUBOPT_0xCD
0030a7 940e 3eae 	CALL SUBOPT_0x125
0030a9 940e 3ea7 	CALL SUBOPT_0x124
0030ab 01df      	MOVW R26,R30
0030ac 01cb      	MOVW R24,R22
0030ad 940e 35cf 	CALL _floor
0030af 940e 3cf9 	CALL SUBOPT_0xE3
0030b1 940e 37eb 	CALL SUBOPT_0x3A
0030b3 940e 4069 	CALL __DIVF21
0030b5 940e 3f58 	CALL __CFD1U
0030b7 2f0e      	MOV  R16,R30
0030b8 940e 3eb5 	CALL SUBOPT_0x126
0030ba 940e 3ebc 	CALL SUBOPT_0x127
0030bc 27ff      	CLR  R31
0030bd 2766      	CLR  R22
0030be 2777      	CLR  R23
0030bf 940e 3f91 	CALL __CDF1
0030c1 940e 3c7c 	CALL SUBOPT_0xCD
0030c3 940e 401b 	CALL __MULF12
0030c5 940e 37eb 	CALL SUBOPT_0x3A
0030c7 940e 3ec1 	CALL SUBOPT_0x128
0030c9 940e 37bf 	CALL SUBOPT_0x33
0030cb 2fe1      	MOV  R30,R17
0030cc 5f1f      	SUBI R17,-1
0030cd 30e0      	CPI  R30,0
0030ce f699      	BRNE _0x2040045
0030cf 940e 3eb5 	CALL SUBOPT_0x126
0030d1 e2ee      	LDI  R30,LOW(46)
0030d2 93ec      	ST   X,R30
0030d3 cfce      	RJMP _0x2040045
                 _0x2040047:
0030d4 940e 3ec6 	CALL SUBOPT_0x129
0030d6 9731      	SBIW R30,1
0030d7 85aa      	LDD  R26,Y+10
0030d8 83a0      	STD  Z+0,R26
0030d9 3030      	CPI  R19,0
0030da f42c      	BRGE _0x2040049
0030db 9531      	NEG  R19
0030dc 85a8      	LDD  R26,Y+8
0030dd 85b9      	LDD  R27,Y+8+1
0030de e2ed      	LDI  R30,LOW(45)
0030df c003      	RJMP _0x2040136
                 _0x2040049:
0030e0 85a8      	LDD  R26,Y+8
0030e1 85b9      	LDD  R27,Y+8+1
0030e2 e2eb      	LDI  R30,LOW(43)
                 _0x2040136:
0030e3 93ec      	ST   X,R30
0030e4 940e 3ec6 	CALL SUBOPT_0x129
0030e6 940e 3ec6 	CALL SUBOPT_0x129
0030e8 9731      	SBIW R30,1
0030e9 01bf      	MOVW R22,R30
0030ea 2fa3      	MOV  R26,R19
0030eb e0ea      	LDI  R30,LOW(10)
0030ec 940e 41aa 	CALL __DIVB21
0030ee 5de0      	SUBI R30,-LOW(48)
0030ef 01db      	MOVW R26,R22
0030f0 93ec      	ST   X,R30
0030f1 940e 3ec6 	CALL SUBOPT_0x129
0030f3 9731      	SBIW R30,1
0030f4 01bf      	MOVW R22,R30
0030f5 2fa3      	MOV  R26,R19
0030f6 e0ea      	LDI  R30,LOW(10)
0030f7 940e 41ec 	CALL __MODB21
0030f9 5de0      	SUBI R30,-LOW(48)
0030fa 01db      	MOVW R26,R22
0030fb 93ec      	ST   X,R30
0030fc 85a8      	LDD  R26,Y+8
0030fd 85b9      	LDD  R27,Y+8+1
0030fe e0e0      	LDI  R30,LOW(0)
0030ff 93ec      	ST   X,R30
                 _0x210000A:
003100 940e 42ed 	CALL __LOADLOCR4
003102 9660      	ADIW R28,16
003103 9508      	RET
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
003104 93ba      	ST   -Y,R27
003105 93aa      	ST   -Y,R26
003106 97ef      	SBIW R28,63
003107 9761      	SBIW R28,17
003108 940e 42e4 	CALL __SAVELOCR6
00310a e010      	LDI  R17,0
                +
00310b 01fe     +MOVW R30 , R28
00310c 5ae8     +SUBI R30 , LOW ( - 88 )
00310d 4fff     +SBCI R31 , HIGH ( - 88 )
00310e 9001     +LD R0 , Z +
00310f 81f0     +LD R31 , Z
003110 2de0     +MOV R30 , R0
                 	__GETW1SX 88
003111 87e8      	STD  Y+8,R30
003112 87f9      	STD  Y+8+1,R31
                +
003113 01fe     +MOVW R30 , R28
003114 5aea     +SUBI R30 , LOW ( - 86 )
003115 4fff     +SBCI R31 , HIGH ( - 86 )
003116 9001     +LD R0 , Z +
003117 81f0     +LD R31 , Z
003118 2de0     +MOV R30 , R0
                 	__GETW1SX 86
003119 83ee      	STD  Y+6,R30
00311a 83ff      	STD  Y+6+1,R31
00311b 81ae      	LDD  R26,Y+6
00311c 81bf      	LDD  R27,Y+6+1
00311d 940e 3d5e 	CALL SUBOPT_0xEF
                 _0x204004B:
00311f 01de      	MOVW R26,R28
003120 5aa4      	SUBI R26,LOW(-(92))
003121 4fbf      	SBCI R27,HIGH(-(92))
003122 940e 3e89 	CALL SUBOPT_0x11F
003124 9731      	SBIW R30,1
003125 91e4      	LPM  R30,Z
003126 2f2e      	MOV  R18,R30
003127 30e0      	CPI  R30,0
003128 f409      	BRNE PC+2
003129 c1df      	RJMP _0x204004D
00312a 2fe1      	MOV  R30,R17
00312b 30e0      	CPI  R30,0
00312c f439      	BRNE _0x2040051
00312d 3225      	CPI  R18,37
00312e f411      	BRNE _0x2040052
00312f e011      	LDI  R17,LOW(1)
003130 c002      	RJMP _0x2040053
                 _0x2040052:
003131 940e 3ecc 	CALL SUBOPT_0x12A
                 _0x2040053:
003133 c1d4      	RJMP _0x2040050
                 _0x2040051:
003134 30e1      	CPI  R30,LOW(0x1)
003135 f4c1      	BRNE _0x2040054
003136 3225      	CPI  R18,37
003137 f419      	BRNE _0x2040055
003138 940e 3ecc 	CALL SUBOPT_0x12A
00313a c1cc      	RJMP _0x2040137
                 _0x2040055:
00313b e012      	LDI  R17,LOW(2)
00313c e0e0      	LDI  R30,LOW(0)
00313d 8bed      	STD  Y+21,R30
00313e e000      	LDI  R16,LOW(0)
00313f 322d      	CPI  R18,45
003140 f411      	BRNE _0x2040056
003141 e001      	LDI  R16,LOW(1)
003142 c1c5      	RJMP _0x2040050
                 _0x2040056:
003143 322b      	CPI  R18,43
003144 f419      	BRNE _0x2040057
003145 e2eb      	LDI  R30,LOW(43)
003146 8bed      	STD  Y+21,R30
003147 c1c0      	RJMP _0x2040050
                 _0x2040057:
003148 3220      	CPI  R18,32
003149 f419      	BRNE _0x2040058
00314a e2e0      	LDI  R30,LOW(32)
00314b 8bed      	STD  Y+21,R30
00314c c1bb      	RJMP _0x2040050
                 _0x2040058:
00314d c002      	RJMP _0x2040059
                 _0x2040054:
00314e 30e2      	CPI  R30,LOW(0x2)
00314f f439      	BRNE _0x204005A
                 _0x2040059:
003150 e050      	LDI  R21,LOW(0)
003151 e013      	LDI  R17,LOW(3)
003152 3320      	CPI  R18,48
003153 f411      	BRNE _0x204005B
003154 6800      	ORI  R16,LOW(128)
003155 c1b2      	RJMP _0x2040050
                 _0x204005B:
003156 c002      	RJMP _0x204005C
                 _0x204005A:
003157 30e3      	CPI  R30,LOW(0x3)
003158 f491      	BRNE _0x204005D
                 _0x204005C:
003159 3320      	CPI  R18,48
00315a f010      	BRLO _0x204005F
00315b 332a      	CPI  R18,58
00315c f008      	BRLO _0x2040060
                 _0x204005F:
00315d c007      	RJMP _0x204005E
                 _0x2040060:
00315e e0aa      	LDI  R26,LOW(10)
00315f 9f5a      	MUL  R21,R26
003160 2d50      	MOV  R21,R0
003161 2fe2      	MOV  R30,R18
003162 53e0      	SUBI R30,LOW(48)
003163 0f5e      	ADD  R21,R30
003164 c1a3      	RJMP _0x2040050
                 _0x204005E:
003165 e040      	LDI  R20,LOW(0)
003166 322e      	CPI  R18,46
003167 f411      	BRNE _0x2040061
003168 e014      	LDI  R17,LOW(4)
003169 c19e      	RJMP _0x2040050
                 _0x2040061:
00316a c00f      	RJMP _0x2040062
                 _0x204005D:
00316b 30e4      	CPI  R30,LOW(0x4)
00316c f499      	BRNE _0x2040064
00316d 3320      	CPI  R18,48
00316e f010      	BRLO _0x2040066
00316f 332a      	CPI  R18,58
003170 f008      	BRLO _0x2040067
                 _0x2040066:
003171 c008      	RJMP _0x2040065
                 _0x2040067:
003172 6200      	ORI  R16,LOW(32)
003173 e0aa      	LDI  R26,LOW(10)
003174 9f4a      	MUL  R20,R26
003175 2d40      	MOV  R20,R0
003176 2fe2      	MOV  R30,R18
003177 53e0      	SUBI R30,LOW(48)
003178 0f4e      	ADD  R20,R30
003179 c18e      	RJMP _0x2040050
                 _0x2040065:
                 _0x2040062:
00317a 362c      	CPI  R18,108
00317b f419      	BRNE _0x2040068
00317c 6002      	ORI  R16,LOW(2)
00317d e015      	LDI  R17,LOW(5)
00317e c189      	RJMP _0x2040050
                 _0x2040068:
00317f c003      	RJMP _0x2040069
                 _0x2040064:
003180 30e5      	CPI  R30,LOW(0x5)
003181 f009      	BREQ PC+2
003182 c185      	RJMP _0x2040050
                 _0x2040069:
003183 2fe2      	MOV  R30,R18
003184 36e3      	CPI  R30,LOW(0x63)
003185 f459      	BRNE _0x204006E
003186 940e 3ed3 	CALL SUBOPT_0x12B
003188 940e 3eda 	CALL SUBOPT_0x12C
00318a 940e 3ed3 	CALL SUBOPT_0x12B
00318c 81a4      	LDD  R26,Z+4
00318d 93aa      	ST   -Y,R26
00318e 940e 3ee1 	CALL SUBOPT_0x12D
003190 c176      	RJMP _0x204006F
                 _0x204006E:
003191 34e5      	CPI  R30,LOW(0x45)
003192 f011      	BREQ _0x2040072
003193 36e5      	CPI  R30,LOW(0x65)
003194 f409      	BRNE _0x2040073
                 _0x2040072:
003195 c003      	RJMP _0x2040074
                 _0x2040073:
003196 36e6      	CPI  R30,LOW(0x66)
003197 f009      	BREQ PC+2
003198 c048      	RJMP _0x2040075
                 _0x2040074:
003199 01fe      	MOVW R30,R28
00319a 9676      	ADIW R30,22
00319b 87ee      	STD  Y+14,R30
00319c 87ff      	STD  Y+14+1,R31
00319d 940e 3ee7 	CALL SUBOPT_0x12E
00319f 940e 423f 	CALL __GETD1P
0031a1 940e 3db0 	CALL SUBOPT_0xFB
0031a3 940e 3eee 	CALL SUBOPT_0x12F
0031a5 85ad      	LDD  R26,Y+13
0031a6 23aa      	TST  R26
0031a7 f032      	BRMI _0x2040076
0031a8 89ad      	LDD  R26,Y+21
0031a9 32ab      	CPI  R26,LOW(0x2B)
0031aa f059      	BREQ _0x2040078
0031ab 32a0      	CPI  R26,LOW(0x20)
0031ac f081      	BREQ _0x204007A
0031ad c017      	RJMP _0x204007B
                 _0x2040076:
0031ae 940e 3c98 	CALL SUBOPT_0xD3
0031b0 940e 3f25 	CALL __ANEGF1
0031b2 940e 3db0 	CALL SUBOPT_0xFB
0031b4 e2ed      	LDI  R30,LOW(45)
0031b5 8bed      	STD  Y+21,R30
                 _0x2040078:
0031b6 ff07      	SBRS R16,7
0031b7 c005      	RJMP _0x204007C
0031b8 89ed      	LDD  R30,Y+21
0031b9 93ea      	ST   -Y,R30
0031ba 940e 3ee1 	CALL SUBOPT_0x12D
0031bc c008      	RJMP _0x204007D
                 _0x204007C:
                 _0x204007A:
0031bd 85ee      	LDD  R30,Y+14
0031be 85ff      	LDD  R31,Y+14+1
0031bf 9631      	ADIW R30,1
0031c0 87ee      	STD  Y+14,R30
0031c1 87ff      	STD  Y+14+1,R31
0031c2 9731      	SBIW R30,1
0031c3 89ad      	LDD  R26,Y+21
0031c4 83a0      	STD  Z+0,R26
                 _0x204007D:
                 _0x204007B:
0031c5 ff05      	SBRS R16,5
0031c6 e046      	LDI  R20,LOW(6)
0031c7 3626      	CPI  R18,102
0031c8 f451      	BRNE _0x204007F
0031c9 940e 3c98 	CALL SUBOPT_0xD3
0031cb 940e 426c 	CALL __PUTPARD1
0031cd 934a      	ST   -Y,R20
0031ce 89ab      	LDD  R26,Y+19
0031cf 89bc      	LDD  R27,Y+19+1
0031d0 940e 33ad 	CALL _ftoa
0031d2 c009      	RJMP _0x2040080
                 _0x204007F:
0031d3 940e 3c98 	CALL SUBOPT_0xD3
0031d5 940e 426c 	CALL __PUTPARD1
0031d7 934a      	ST   -Y,R20
0031d8 932a      	ST   -Y,R18
0031d9 89ac      	LDD  R26,Y+20
0031da 89bd      	LDD  R27,Y+20+1
0031db de60      	RCALL __ftoe_G102
                 _0x2040080:
0031dc 01fe      	MOVW R30,R28
0031dd 9676      	ADIW R30,22
0031de 940e 3ef0 	CALL SUBOPT_0x130
0031e0 c01e      	RJMP _0x2040081
                 _0x2040075:
0031e1 37e3      	CPI  R30,LOW(0x73)
0031e2 f439      	BRNE _0x2040083
0031e3 940e 3eee 	CALL SUBOPT_0x12F
0031e5 940e 3ef8 	CALL SUBOPT_0x131
0031e7 940e 3ef0 	CALL SUBOPT_0x130
0031e9 c00e      	RJMP _0x2040084
                 _0x2040083:
0031ea 37e0      	CPI  R30,LOW(0x70)
0031eb f4c1      	BRNE _0x2040086
0031ec 940e 3eee 	CALL SUBOPT_0x12F
0031ee 940e 3ef8 	CALL SUBOPT_0x131
0031f0 87ee      	STD  Y+14,R30
0031f1 87ff      	STD  Y+14+1,R31
0031f2 85ae      	LDD  R26,Y+14
0031f3 85bf      	LDD  R27,Y+14+1
0031f4 940e 33a0 	CALL _strlenf
0031f6 2f1e      	MOV  R17,R30
0031f7 6008      	ORI  R16,LOW(8)
                 _0x2040084:
0031f8 770f      	ANDI R16,LOW(127)
0031f9 3040      	CPI  R20,0
0031fa f011      	BREQ _0x2040088
0031fb 1741      	CP   R20,R17
0031fc f008      	BRLO _0x2040089
                 _0x2040088:
0031fd c001      	RJMP _0x2040087
                 _0x2040089:
0031fe 2f14      	MOV  R17,R20
                 _0x2040087:
                 _0x2040081:
0031ff e040      	LDI  R20,LOW(0)
003200 e0e0      	LDI  R30,LOW(0)
003201 8bec      	STD  Y+20,R30
003202 e030      	LDI  R19,LOW(0)
003203 c06c      	RJMP _0x204008A
                 _0x2040086:
003204 36e4      	CPI  R30,LOW(0x64)
003205 f011      	BREQ _0x204008D
003206 36e9      	CPI  R30,LOW(0x69)
003207 f411      	BRNE _0x204008E
                 _0x204008D:
003208 6004      	ORI  R16,LOW(4)
003209 c002      	RJMP _0x204008F
                 _0x204008E:
00320a 37e5      	CPI  R30,LOW(0x75)
00320b f491      	BRNE _0x2040090
                 _0x204008F:
00320c e0ea      	LDI  R30,LOW(10)
00320d 8bec      	STD  Y+20,R30
00320e ff01      	SBRS R16,1
00320f c008      	RJMP _0x2040091
                +
003210 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
003211 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
003212 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
003213 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
003214 940e 37b4 	CALL SUBOPT_0x31
003216 e01a      	LDI  R17,LOW(10)
003217 c020      	RJMP _0x2040092
                 _0x2040091:
003218 940e 390b 	CALL SUBOPT_0x5E
00321a 940e 37b4 	CALL SUBOPT_0x31
00321c e015      	LDI  R17,LOW(5)
00321d c01a      	RJMP _0x2040092
                 _0x2040090:
00321e 35e8      	CPI  R30,LOW(0x58)
00321f f411      	BRNE _0x2040094
003220 6008      	ORI  R16,LOW(8)
003221 c003      	RJMP _0x2040095
                 _0x2040094:
003222 37e8      	CPI  R30,LOW(0x78)
003223 f009      	BREQ PC+2
003224 c0e2      	RJMP _0x20400D3
                 _0x2040095:
003225 e1e0      	LDI  R30,LOW(16)
003226 8bec      	STD  Y+20,R30
003227 ff01      	SBRS R16,1
003228 c008      	RJMP _0x2040097
                +
003229 e0e0     +LDI R30 , LOW ( 0x10000000 )
00322a e0f0     +LDI R31 , HIGH ( 0x10000000 )
00322b e060     +LDI R22 , BYTE3 ( 0x10000000 )
00322c e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00322d 940e 37b4 	CALL SUBOPT_0x31
00322f e018      	LDI  R17,LOW(8)
003230 c007      	RJMP _0x2040092
                 _0x2040097:
                +
003231 e0e0     +LDI R30 , LOW ( 0x1000 )
003232 e1f0     +LDI R31 , HIGH ( 0x1000 )
003233 e060     +LDI R22 , BYTE3 ( 0x1000 )
003234 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
003235 940e 37b4 	CALL SUBOPT_0x31
003237 e014      	LDI  R17,LOW(4)
                 _0x2040092:
003238 3040      	CPI  R20,0
003239 f011      	BREQ _0x2040098
00323a 770f      	ANDI R16,LOW(127)
00323b c001      	RJMP _0x2040099
                 _0x2040098:
00323c e041      	LDI  R20,LOW(1)
                 _0x2040099:
00323d ff01      	SBRS R16,1
00323e c008      	RJMP _0x204009A
00323f 940e 3eee 	CALL SUBOPT_0x12F
003241 940e 3ee7 	CALL SUBOPT_0x12E
003243 9614      	ADIW R26,4
003244 940e 423f 	CALL __GETD1P
003246 c010      	RJMP _0x2040138
                 _0x204009A:
003247 ff02      	SBRS R16,2
003248 c007      	RJMP _0x204009C
003249 940e 3eee 	CALL SUBOPT_0x12F
00324b 940e 3ef8 	CALL SUBOPT_0x131
00324d 940e 415d 	CALL __CWD1
00324f c007      	RJMP _0x2040138
                 _0x204009C:
003250 940e 3eee 	CALL SUBOPT_0x12F
003252 940e 3ee7 	CALL SUBOPT_0x12E
003254 9614      	ADIW R26,4
003255 940e 3bec 	CALL SUBOPT_0xB9
                 _0x2040138:
                +
003257 87ea     +STD Y + 10 , R30
003258 87fb     +STD Y + 10 + 1 , R31
003259 876c     +STD Y + 10 + 2 , R22
00325a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00325b ff02      	SBRS R16,2
00325c c012      	RJMP _0x204009E
00325d 85ad      	LDD  R26,Y+13
00325e 23aa      	TST  R26
00325f f442      	BRPL _0x204009F
003260 940e 3c98 	CALL SUBOPT_0xD3
003262 940e 40f0 	CALL __ANEGD1
003264 940e 3db0 	CALL SUBOPT_0xFB
003266 e2ed      	LDI  R30,LOW(45)
003267 8bed      	STD  Y+21,R30
                 _0x204009F:
003268 89ed      	LDD  R30,Y+21
003269 30e0      	CPI  R30,0
00326a f019      	BREQ _0x20400A0
00326b 5f1f      	SUBI R17,-LOW(1)
00326c 5f4f      	SUBI R20,-LOW(1)
00326d c001      	RJMP _0x20400A1
                 _0x20400A0:
00326e 7f0b      	ANDI R16,LOW(251)
                 _0x20400A1:
                 _0x204009E:
00326f 2f34      	MOV  R19,R20
                 _0x204008A:
003270 fd00      	SBRC R16,0
003271 c014      	RJMP _0x20400A2
                 _0x20400A3:
003272 1715      	CP   R17,R21
003273 f410      	BRSH _0x20400A6
003274 1735      	CP   R19,R21
003275 f008      	BRLO _0x20400A7
                 _0x20400A6:
003276 c00f      	RJMP _0x20400A5
                 _0x20400A7:
003277 ff07      	SBRS R16,7
003278 c008      	RJMP _0x20400A8
003279 ff02      	SBRS R16,2
00327a c004      	RJMP _0x20400A9
00327b 7f0b      	ANDI R16,LOW(251)
00327c 892d      	LDD  R18,Y+21
00327d 5011      	SUBI R17,LOW(1)
00327e c001      	RJMP _0x20400AA
                 _0x20400A9:
00327f e320      	LDI  R18,LOW(48)
                 _0x20400AA:
003280 c001      	RJMP _0x20400AB
                 _0x20400A8:
003281 e220      	LDI  R18,LOW(32)
                 _0x20400AB:
003282 940e 3ecc 	CALL SUBOPT_0x12A
003284 5051      	SUBI R21,LOW(1)
003285 cfec      	RJMP _0x20400A3
                 _0x20400A5:
                 _0x20400A2:
                 _0x20400AC:
003286 1714      	CP   R17,R20
003287 f490      	BRSH _0x20400AE
003288 6100      	ORI  R16,LOW(16)
003289 ff02      	SBRS R16,2
00328a c006      	RJMP _0x20400AF
00328b 940e 3efd 	CALL SUBOPT_0x132
00328d f009      	BREQ _0x20400B0
00328e 5051      	SUBI R21,LOW(1)
                 _0x20400B0:
00328f 5011      	SUBI R17,LOW(1)
003290 5041      	SUBI R20,LOW(1)
                 _0x20400AF:
003291 e3e0      	LDI  R30,LOW(48)
003292 93ea      	ST   -Y,R30
003293 940e 3ee1 	CALL SUBOPT_0x12D
003295 3050      	CPI  R21,0
003296 f009      	BREQ _0x20400B1
003297 5051      	SUBI R21,LOW(1)
                 _0x20400B1:
003298 5041      	SUBI R20,LOW(1)
003299 cfec      	RJMP _0x20400AC
                 _0x20400AE:
00329a 2f31      	MOV  R19,R17
00329b 89ec      	LDD  R30,Y+20
00329c 30e0      	CPI  R30,0
00329d f4b9      	BRNE _0x20400B2
                 _0x20400B3:
00329e 3030      	CPI  R19,0
00329f f0a1      	BREQ _0x20400B5
0032a0 ff03      	SBRS R16,3
0032a1 c006      	RJMP _0x20400B6
0032a2 85ee      	LDD  R30,Y+14
0032a3 85ff      	LDD  R31,Y+14+1
0032a4 9125      	LPM  R18,Z+
0032a5 87ee      	STD  Y+14,R30
0032a6 87ff      	STD  Y+14+1,R31
0032a7 c005      	RJMP _0x20400B7
                 _0x20400B6:
0032a8 85ae      	LDD  R26,Y+14
0032a9 85bf      	LDD  R27,Y+14+1
0032aa 912d      	LD   R18,X+
0032ab 87ae      	STD  Y+14,R26
0032ac 87bf      	STD  Y+14+1,R27
                 _0x20400B7:
0032ad 940e 3ecc 	CALL SUBOPT_0x12A
0032af 3050      	CPI  R21,0
0032b0 f009      	BREQ _0x20400B8
0032b1 5051      	SUBI R21,LOW(1)
                 _0x20400B8:
0032b2 5031      	SUBI R19,LOW(1)
0032b3 cfea      	RJMP _0x20400B3
                 _0x20400B5:
0032b4 c048      	RJMP _0x20400B9
                 _0x20400B2:
                 _0x20400BB:
0032b5 940e 37af 	CALL SUBOPT_0x30
0032b7 940e 3c20 	CALL SUBOPT_0xBF
0032b9 940e 41c2 	CALL __DIVD21U
0032bb 2f2e      	MOV  R18,R30
0032bc 302a      	CPI  R18,10
0032bd f030      	BRLO _0x20400BD
0032be ff03      	SBRS R16,3
0032bf c002      	RJMP _0x20400BE
0032c0 5c29      	SUBI R18,-LOW(55)
0032c1 c001      	RJMP _0x20400BF
                 _0x20400BE:
0032c2 5a29      	SUBI R18,-LOW(87)
                 _0x20400BF:
0032c3 c001      	RJMP _0x20400C0
                 _0x20400BD:
0032c4 5d20      	SUBI R18,-LOW(48)
                 _0x20400C0:
0032c5 fd04      	SBRC R16,4
0032c6 c01a      	RJMP _0x20400C2
0032c7 3321      	CPI  R18,49
0032c8 f428      	BRSH _0x20400C4
0032c9 940e 383c 	CALL SUBOPT_0x45
0032cb 940e 3c4e 	CALL SUBOPT_0xC6
0032cd f409      	BRNE _0x20400C3
                 _0x20400C4:
0032ce c00b      	RJMP _0x20400C6
                 _0x20400C3:
0032cf 1743      	CP   R20,R19
0032d0 f440      	BRSH _0x2040139
0032d1 1753      	CP   R21,R19
0032d2 f010      	BRLO _0x20400C9
0032d3 ff00      	SBRS R16,0
0032d4 c001      	RJMP _0x20400CA
                 _0x20400C9:
0032d5 c010      	RJMP _0x20400C8
                 _0x20400CA:
0032d6 e220      	LDI  R18,LOW(32)
0032d7 ff07      	SBRS R16,7
0032d8 c008      	RJMP _0x20400CB
                 _0x2040139:
0032d9 e320      	LDI  R18,LOW(48)
                 _0x20400C6:
0032da 6100      	ORI  R16,LOW(16)
0032db ff02      	SBRS R16,2
0032dc c004      	RJMP _0x20400CC
0032dd 940e 3efd 	CALL SUBOPT_0x132
0032df f009      	BREQ _0x20400CD
0032e0 5051      	SUBI R21,LOW(1)
                 _0x20400CD:
                 _0x20400CC:
                 _0x20400CB:
                 _0x20400C2:
0032e1 940e 3ecc 	CALL SUBOPT_0x12A
0032e3 3050      	CPI  R21,0
0032e4 f009      	BREQ _0x20400CE
0032e5 5051      	SUBI R21,LOW(1)
                 _0x20400CE:
                 _0x20400C8:
0032e6 5031      	SUBI R19,LOW(1)
0032e7 940e 37af 	CALL SUBOPT_0x30
0032e9 940e 3c20 	CALL SUBOPT_0xBF
0032eb 940e 41f8 	CALL __MODD21U
0032ed 940e 3db0 	CALL SUBOPT_0xFB
0032ef 89ec      	LDD  R30,Y+20
0032f0 940e 383c 	CALL SUBOPT_0x45
0032f2 27ff      	CLR  R31
0032f3 2766      	CLR  R22
0032f4 2777      	CLR  R23
0032f5 940e 41c2 	CALL __DIVD21U
0032f7 940e 37b4 	CALL SUBOPT_0x31
0032f9 940e 3c78 	CALL SUBOPT_0xCC
0032fb f009      	BREQ _0x20400BC
0032fc cfb8      	RJMP _0x20400BB
                 _0x20400BC:
                 _0x20400B9:
0032fd ff00      	SBRS R16,0
0032fe c008      	RJMP _0x20400CF
                 _0x20400D0:
0032ff 3050      	CPI  R21,0
003300 f031      	BREQ _0x20400D2
003301 5051      	SUBI R21,LOW(1)
003302 e2e0      	LDI  R30,LOW(32)
003303 93ea      	ST   -Y,R30
003304 940e 3ee1 	CALL SUBOPT_0x12D
003306 cff8      	RJMP _0x20400D0
                 _0x20400D2:
                 _0x20400CF:
                 _0x20400D3:
                 _0x204006F:
                 _0x2040137:
003307 e010      	LDI  R17,LOW(0)
                 _0x2040050:
003308 ce16      	RJMP _0x204004B
                 _0x204004D:
003309 81ae      	LDD  R26,Y+6
00330a 81bf      	LDD  R27,Y+6+1
00330b 940e 423b 	CALL __GETW1P
00330d 940e 42eb 	CALL __LOADLOCR6
00330f 96ef      	ADIW R28,63
003310 966f      	ADIW R28,31
003311 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
003312 92ff      	PUSH R15
003313 2ef8      	MOV  R15,R24
003314 9726      	SBIW R28,6
003315 940e 42e6 	CALL __SAVELOCR4
003317 01de      	MOVW R26,R28
003318 961c      	ADIW R26,12
003319 940e 40ce 	CALL __ADDW2R15
00331b 940e 423b 	CALL __GETW1P
00331d 9730      	SBIW R30,0
00331e f419      	BRNE _0x20400D4
00331f efef      	LDI  R30,LOW(65535)
003320 efff      	LDI  R31,HIGH(65535)
003321 c025      	RJMP _0x2100009
                 _0x20400D4:
003322 01de      	MOVW R26,R28
003323 9616      	ADIW R26,6
003324 940e 40ce 	CALL __ADDW2R15
003326 018d      	MOVW R16,R26
003327 01de      	MOVW R26,R28
003328 961c      	ADIW R26,12
003329 940e 40ce 	CALL __ADDW2R15
00332b 940e 3d2e 	CALL SUBOPT_0xE8
00332d e0e0      	LDI  R30,LOW(0)
00332e 87e8      	STD  Y+8,R30
00332f 87e9      	STD  Y+8+1,R30
003330 01de      	MOVW R26,R28
003331 961a      	ADIW R26,10
003332 940e 40ce 	CALL __ADDW2R15
003334 940e 423b 	CALL __GETW1P
003336 93fa      	ST   -Y,R31
003337 93ea      	ST   -Y,R30
003338 931a      	ST   -Y,R17
003339 930a      	ST   -Y,R16
00333a e0e2      	LDI  R30,LOW(_put_buff_G102)
00333b e3f0      	LDI  R31,HIGH(_put_buff_G102)
00333c 93fa      	ST   -Y,R31
00333d 93ea      	ST   -Y,R30
00333e 01de      	MOVW R26,R28
00333f 961a      	ADIW R26,10
003340 ddc3      	RCALL __print_G102
003341 019f      	MOVW R18,R30
003342 81ae      	LDD  R26,Y+6
003343 81bf      	LDD  R27,Y+6+1
003344 e0e0      	LDI  R30,LOW(0)
003345 93ec      	ST   X,R30
003346 01f9      	MOVW R30,R18
                 _0x2100009:
003347 940e 42ed 	CALL __LOADLOCR4
003349 962a      	ADIW R28,10
00334a 90ff      	POP  R15
00334b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memcmp:
                 ; .FSTART _memcmp
00334c 93ba      	ST   -Y,R27
00334d 93aa      	ST   -Y,R26
00334e 2766          clr  r22
00334f 2777          clr  r23
003350 9189          ld   r24,y+
003351 9199          ld   r25,y+
003352 91e9          ld   r30,y+
003353 91f9          ld   r31,y+
003354 91a9          ld   r26,y+
003355 91b9          ld   r27,y+
                 memcmp0:
003356 9600          adiw r24,0
003357 f029          breq memcmp1
003358 9701          sbiw r24,1
003359 916d          ld   r22,x+
00335a 9171          ld   r23,z+
00335b 1767          cp   r22,r23
00335c f3c9          breq memcmp0
                 memcmp1:
00335d 1b67          sub  r22,r23
00335e f410          brcc memcmp2
00335f efef          ldi  r30,-1
003360 9508          ret
                 memcmp2:
003361 e0e0          ldi  r30,0
003362 f009          breq memcmp3
003363 95e3          inc  r30
                 memcmp3:
003364 9508          ret
                 ; .FEND
                 _memcpy:
                 ; .FSTART _memcpy
003365 93ba      	ST   -Y,R27
003366 93aa      	ST   -Y,R26
003367 8199          ldd  r25,y+1
003368 8188          ld   r24,y
003369 9600          adiw r24,0
00336a f041          breq memcpy1
00336b 81bd          ldd  r27,y+5
00336c 81ac          ldd  r26,y+4
00336d 81fb          ldd  r31,y+3
00336e 81ea          ldd  r30,y+2
                 memcpy0:
00336f 9161          ld   r22,z+
003370 936d          st   x+,r22
003371 9701          sbiw r24,1
003372 f7e1          brne memcpy0
                 memcpy1:
003373 81fd          ldd  r31,y+5
003374 81ec          ldd  r30,y+4
003375 940c 34ad 	JMP  _0x2100005
                 ; .FEND
                 _memset:
                 ; .FSTART _memset
003377 93ba      	ST   -Y,R27
003378 93aa      	ST   -Y,R26
003379 81b9          ldd  r27,y+1
00337a 81a8          ld   r26,y
00337b 9610          adiw r26,0
00337c f031          breq memset1
00337d 81fc          ldd  r31,y+4
00337e 81eb          ldd  r30,y+3
00337f 816a          ldd  r22,y+2
                 memset0:
003380 9361          st   z+,r22
003381 9711          sbiw r26,1
003382 f7e9          brne memset0
                 memset1:
003383 81eb          ldd  r30,y+3
003384 81fc          ldd  r31,y+4
003385 940c 3482 	JMP  _0x2100006
                 ; .FEND
                 _strcpyf:
                 ; .FSTART _strcpyf
003387 93ba      	ST   -Y,R27
003388 93aa      	ST   -Y,R26
003389 91e9          ld   r30,y+
00338a 91f9          ld   r31,y+
00338b 91a9          ld   r26,y+
00338c 91b9          ld   r27,y+
00338d 01cd          movw r24,r26
                 strcpyf0:
00338e 9005      	lpm  r0,z+
00338f 920d          st   x+,r0
003390 2000          tst  r0
003391 f7e1          brne strcpyf0
003392 01fc          movw r30,r24
003393 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
003394 93ba      	ST   -Y,R27
003395 93aa      	ST   -Y,R26
003396 91a9          ld   r26,y+
003397 91b9          ld   r27,y+
003398 27ee          clr  r30
003399 27ff          clr  r31
                 strlen0:
00339a 916d          ld   r22,x+
00339b 2366          tst  r22
00339c f011          breq strlen1
00339d 9631          adiw r30,1
00339e cffb          rjmp strlen0
                 strlen1:
00339f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0033a0 93ba      	ST   -Y,R27
0033a1 93aa      	ST   -Y,R26
0033a2 27aa          clr  r26
0033a3 27bb          clr  r27
0033a4 91e9          ld   r30,y+
0033a5 91f9          ld   r31,y+
                 strlenf0:
0033a6 9005      	lpm  r0,z+
0033a7 2000          tst  r0
0033a8 f011          breq strlenf1
0033a9 9611          adiw r26,1
0033aa cffb          rjmp strlenf0
                 strlenf1:
0033ab 01fd          movw r30,r26
0033ac 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0033ad 940e 3e8f 	CALL SUBOPT_0x120
0033af e0e0      	LDI  R30,LOW(0)
0033b0 83ea      	STD  Y+2,R30
0033b1 e3ef      	LDI  R30,LOW(63)
0033b2 83eb      	STD  Y+3,R30
0033b3 931a      	ST   -Y,R17
0033b4 930a      	ST   -Y,R16
0033b5 85eb      	LDD  R30,Y+11
0033b6 85fc      	LDD  R31,Y+11+1
0033b7 3fef      	CPI  R30,LOW(0xFFFF)
0033b8 efaf      	LDI  R26,HIGH(0xFFFF)
0033b9 07fa      	CPC  R31,R26
0033ba f439      	BRNE _0x208000D
0033bb 940e 3d59 	CALL SUBOPT_0xEE
                +
0033bd eeae     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
0033be e0b4     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW2FN _0x2080000,0
0033bf 940e 3387 	CALL _strcpyf
0033c1 c0a9      	RJMP _0x2100008
                 _0x208000D:
0033c2 3fef      	CPI  R30,LOW(0x7FFF)
0033c3 e7af      	LDI  R26,HIGH(0x7FFF)
0033c4 07fa      	CPC  R31,R26
0033c5 f439      	BRNE _0x208000C
0033c6 940e 3d59 	CALL SUBOPT_0xEE
                +
0033c8 eeaf     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
0033c9 e0b4     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW2FN _0x2080000,1
0033ca 940e 3387 	CALL _strcpyf
0033cc c09e      	RJMP _0x2100008
                 _0x208000C:
0033cd 85ac      	LDD  R26,Y+12
0033ce 23aa      	TST  R26
0033cf f452      	BRPL _0x208000F
0033d0 940e 3e4d 	CALL SUBOPT_0x115
0033d2 940e 3f25 	CALL __ANEGF1
0033d4 940e 3e39 	CALL SUBOPT_0x112
0033d6 940e 3f0f 	CALL SUBOPT_0x133
0033d8 e2ed      	LDI  R30,LOW(45)
0033d9 93ec      	ST   X,R30
                 _0x208000F:
0033da 85a8      	LDD  R26,Y+8
0033db 30a7      	CPI  R26,LOW(0x7)
0033dc f010      	BRLO _0x2080010
0033dd e0e6      	LDI  R30,LOW(6)
0033de 87e8      	STD  Y+8,R30
                 _0x2080010:
0033df 8518      	LDD  R17,Y+8
                 _0x2080011:
0033e0 2fe1      	MOV  R30,R17
0033e1 5011      	SUBI R17,1
0033e2 30e0      	CPI  R30,0
0033e3 f039      	BREQ _0x2080013
0033e4 940e 3cb1 	CALL SUBOPT_0xD8
0033e6 940e 3eae 	CALL SUBOPT_0x125
0033e8 940e 3cd4 	CALL SUBOPT_0xDD
0033ea cff5      	RJMP _0x2080011
                 _0x2080013:
0033eb 940e 3f16 	CALL SUBOPT_0x134
0033ed 940e 3fcb 	CALL __ADDF12
0033ef 940e 3e39 	CALL SUBOPT_0x112
0033f1 e010      	LDI  R17,LOW(0)
                +
0033f2 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0033f3 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0033f4 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0033f5 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0033f6 940e 3cd4 	CALL SUBOPT_0xDD
                 _0x2080014:
0033f8 940e 3f16 	CALL SUBOPT_0x134
0033fa 940e 40ae 	CALL __CMPF12
0033fc f088      	BRLO _0x2080016
0033fd 940e 3cb1 	CALL SUBOPT_0xD8
0033ff 940e 3b36 	CALL SUBOPT_0xA2
003401 940e 3cd4 	CALL SUBOPT_0xDD
003403 5f1f      	SUBI R17,-LOW(1)
003404 3217      	CPI  R17,39
003405 f038      	BRLO _0x2080017
003406 940e 3d59 	CALL SUBOPT_0xEE
                +
003408 efa3     +LDI R26 , LOW ( 2 * _0x2080000 + ( 5 ) )
003409 e0b4     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW2FN _0x2080000,5
00340a 940e 3387 	CALL _strcpyf
00340c c05e      	RJMP _0x2100008
                 _0x2080017:
00340d cfea      	RJMP _0x2080014
                 _0x2080016:
00340e 3010      	CPI  R17,0
00340f f429      	BRNE _0x2080018
003410 940e 3f0f 	CALL SUBOPT_0x133
003412 e3e0      	LDI  R30,LOW(48)
003413 93ec      	ST   X,R30
003414 c02b      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
003415 2fe1      	MOV  R30,R17
003416 5011      	SUBI R17,1
003417 30e0      	CPI  R30,0
003418 f139      	BREQ _0x208001C
003419 940e 3cb1 	CALL SUBOPT_0xD8
00341b 940e 3eae 	CALL SUBOPT_0x125
00341d 940e 3ea7 	CALL SUBOPT_0x124
00341f 01df      	MOVW R26,R30
003420 01cb      	MOVW R24,R22
003421 940e 35cf 	CALL _floor
003423 940e 3cd4 	CALL SUBOPT_0xDD
003425 940e 3f16 	CALL SUBOPT_0x134
003427 940e 4069 	CALL __DIVF21
003429 940e 3f58 	CALL __CFD1U
00342b 2f0e      	MOV  R16,R30
00342c 940e 3f0f 	CALL SUBOPT_0x133
00342e 940e 3ebc 	CALL SUBOPT_0x127
003430 e0f0      	LDI  R31,0
003431 940e 3cb1 	CALL SUBOPT_0xD8
003433 940e 415d 	CALL __CWD1
003435 940e 3f91 	CALL __CDF1
003437 940e 401b 	CALL __MULF12
003439 940e 3e7d 	CALL SUBOPT_0x11D
00343b 940e 3ec1 	CALL SUBOPT_0x128
00343d 940e 3e39 	CALL SUBOPT_0x112
00343f cfd5      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
003440 85e8      	LDD  R30,Y+8
003441 30e0      	CPI  R30,0
003442 f121      	BREQ _0x2100007
003443 940e 3f0f 	CALL SUBOPT_0x133
003445 e2ee      	LDI  R30,LOW(46)
003446 93ec      	ST   X,R30
                 _0x208001E:
003447 85e8      	LDD  R30,Y+8
003448 50e1      	SUBI R30,LOW(1)
003449 87e8      	STD  Y+8,R30
00344a 5fef      	SUBI R30,-LOW(1)
00344b f0d9      	BREQ _0x2080020
00344c 940e 3e7d 	CALL SUBOPT_0x11D
00344e 940e 3b36 	CALL SUBOPT_0xA2
003450 940e 3e39 	CALL SUBOPT_0x112
003452 940e 3e4d 	CALL SUBOPT_0x115
003454 940e 3f58 	CALL __CFD1U
003456 2f0e      	MOV  R16,R30
003457 940e 3f0f 	CALL SUBOPT_0x133
003459 940e 3ebc 	CALL SUBOPT_0x127
00345b e0f0      	LDI  R31,0
00345c 940e 3e7d 	CALL SUBOPT_0x11D
00345e 940e 415d 	CALL __CWD1
003460 940e 3f91 	CALL __CDF1
003462 940e 3ec1 	CALL SUBOPT_0x128
003464 940e 3e39 	CALL SUBOPT_0x112
003466 cfe0      	RJMP _0x208001E
                 _0x2080020:
                 _0x2100007:
003467 81ae      	LDD  R26,Y+6
003468 81bf      	LDD  R27,Y+6+1
003469 e0e0      	LDI  R30,LOW(0)
00346a 93ec      	ST   X,R30
                 _0x2100008:
00346b 8119      	LDD  R17,Y+1
00346c 8108      	LDD  R16,Y+0
00346d 962d      	ADIW R28,13
00346e 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _twi_init:
                 ; .FSTART _twi_init
00346f 93aa      	ST   -Y,R26
003470 931a      	ST   -Y,R17
003471 81ab      	LDD  R26,Y+3
003472 81bc      	LDD  R27,Y+3+1
003473 91ec      	LD   R30,X
003474 7fec      	ANDI R30,LOW(0xFC)
003475 2f1e      	MOV  R17,R30
003476 81ea      	LDD  R30,Y+2
003477 30e0      	CPI  R30,0
003478 f009      	BREQ _0x20A0003
003479 6011      	ORI  R17,LOW(1)
                 _0x20A0003:
00347a 81e9      	LDD  R30,Y+1
00347b 30e0      	CPI  R30,0
00347c f009      	BREQ _0x20A0004
00347d 6012      	ORI  R17,LOW(2)
                 _0x20A0004:
00347e 81ab      	LDD  R26,Y+3
00347f 81bc      	LDD  R27,Y+3+1
003480 931c      	ST   X,R17
003481 8118      	LDD  R17,Y+0
                 _0x2100006:
003482 9625      	ADIW R28,5
003483 9508      	RET
                 ; .FEND
                 _twi_master_init:
                 ; .FSTART _twi_master_init
003484 93aa      	ST   -Y,R26
003485 81e9      	LDD  R30,Y+1
003486 63e8      	ORI  R30,LOW(0x38)
                +
003487 81aa     +LDD R26 , Y + 2
003488 81bb     +LDD R27 , Y + 2 + 1
003489 9611     +ADIW R26 , 1
00348a 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00348b 81ea      	LDD  R30,Y+2
00348c 81fb      	LDD  R31,Y+2+1
00348d 9632      	ADIW R30,2
00348e e0a0      	LDI  R26,LOW(0)
00348f 83a0      	STD  Z+0,R26
003490 81e8      	LD   R30,Y
                +
003491 81aa     +LDD R26 , Y + 2
003492 81bb     +LDD R27 , Y + 2 + 1
003493 9615     +ADIW R26 , 5
003494 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
003495 81ea      	LDD  R30,Y+2
003496 81fb      	LDD  R31,Y+2+1
003497 9634      	ADIW R30,4
003498 e0a1      	LDI  R26,LOW(1)
003499 83a0      	STD  Z+0,R26
00349a 81ea      	LDD  R30,Y+2
00349b 81fb      	LDD  R31,Y+2+1
00349c 81ac      	LDD  R26,Y+4
00349d 81bd      	LDD  R27,Y+4+1
00349e 93ed      	ST   X+,R30
00349f 93fc      	ST   X,R31
0034a0 81ac      	LDD  R26,Y+4
0034a1 81bd      	LDD  R27,Y+4+1
0034a2 9615      	ADIW R26,5
0034a3 e0e0      	LDI  R30,LOW(0)
0034a4 93ec      	ST   X,R30
0034a5 81ac      	LDD  R26,Y+4
0034a6 81bd      	LDD  R27,Y+4+1
0034a7 9619      	ADIW R26,9
0034a8 93ec      	ST   X,R30
0034a9 81ac      	LDD  R26,Y+4
0034aa 81bd      	LDD  R27,Y+4+1
0034ab 961b      	ADIW R26,11
0034ac 93ec      	ST   X,R30
                 _0x2100005:
0034ad 9626      	ADIW R28,6
0034ae 9508      	RET
                 ; .FEND
                 _twi_master_int_handler:
                 ; .FSTART _twi_master_int_handler
0034af 93ba      	ST   -Y,R27
0034b0 93aa      	ST   -Y,R26
0034b1 9722      	SBIW R28,2
0034b2 940e 42e4 	CALL __SAVELOCR6
0034b4 85a8      	LDD  R26,Y+8
0034b5 85b9      	LDD  R27,Y+8+1
0034b6 910d      	LD   R16,X+
0034b7 911c      	LD   R17,X
0034b8 01f8      	MOVW R30,R16
0034b9 8134      	LDD  R19,Z+4
0034ba 9633      	ADIW R30,3
0034bb 01af      	MOVW R20,R30
0034bc ff33      	SBRS R19,3
0034bd c002      	RJMP _0x20A0005
0034be e023      	LDI  R18,LOW(3)
0034bf c003      	RJMP _0x20A0006
                 _0x20A0005:
0034c0 ff32      	SBRS R19,2
0034c1 c004      	RJMP _0x20A0007
0034c2 e024      	LDI  R18,LOW(4)
                 _0x20A0006:
0034c3 01f8      	MOVW R30,R16
                +
0034c4 8334     +STD Z + 4 , R19
                 	__PUTBZR 19,4
0034c5 c009      	RJMP _0x20A0008
                 _0x20A0007:
0034c6 01f8      	MOVW R30,R16
0034c7 9637      	ADIW R30,7
0034c8 83ee      	STD  Y+6,R30
0034c9 83ff      	STD  Y+6+1,R31
0034ca ff36      	SBRS R19,6
0034cb c032      	RJMP _0x20A0009
0034cc ff34      	SBRS R19,4
0034cd c005      	RJMP _0x20A000A
0034ce e025      	LDI  R18,LOW(5)
                 _0x20A0008:
0034cf 01da      	MOVW R26,R20
0034d0 e0e3      	LDI  R30,LOW(3)
0034d1 93ec      	ST   X,R30
0034d2 c05b      	RJMP _0x20A000B
                 _0x20A000A:
0034d3 85e8      	LDD  R30,Y+8
0034d4 85f9      	LDD  R31,Y+8+1
0034d5 8126      	LDD  R18,Z+6
0034d6 81e5      	LDD  R30,Z+5
0034d7 172e      	CP   R18,R30
0034d8 f498      	BRSH _0x20A000C
0034d9 85e8      	LDD  R30,Y+8
0034da 85f9      	LDD  R31,Y+8+1
0034db 81a3      	LDD  R26,Z+3
0034dc 81b4      	LDD  R27,Z+4
0034dd 2fe2      	MOV  R30,R18
0034de 5f2f      	SUBI R18,-1
0034df e0f0      	LDI  R31,0
0034e0 0fae      	ADD  R26,R30
0034e1 1fbf      	ADC  R27,R31
0034e2 91ec      	LD   R30,X
0034e3 81ae      	LDD  R26,Y+6
0034e4 81bf      	LDD  R27,Y+6+1
0034e5 93ec      	ST   X,R30
0034e6 2fe2      	MOV  R30,R18
                +
0034e7 85a8     +LDD R26 , Y + 8
0034e8 85b9     +LDD R27 , Y + 8 + 1
0034e9 9616     +ADIW R26 , 6
0034ea 93ec     +ST X , R30
                 	__PUTB1SNS 8,6
0034eb c047      	RJMP _0x2100004
                 _0x20A000C:
0034ec 85e8      	LDD  R30,Y+8
0034ed 85f9      	LDD  R31,Y+8+1
0034ee 85a2      	LDD  R26,Z+10
0034ef 85e1      	LDD  R30,Z+9
0034f0 17ae      	CP   R26,R30
0034f1 f448      	BRSH _0x20A000D
0034f2 85e8      	LDD  R30,Y+8
0034f3 85f9      	LDD  R31,Y+8+1
0034f4 81a2      	LDD  R26,Z+2
0034f5 e0e1      	LDI  R30,LOW(1)
0034f6 2bea      	OR   R30,R26
                +
0034f7 01d8     +MOVW R26 , R16
0034f8 9616     +ADIW R26 , 6
0034f9 93ec     +ST X , R30
                 	__PUTB1RNS 16,6
0034fa c038      	RJMP _0x2100004
                 _0x20A000D:
0034fb 01da      	MOVW R26,R20
0034fc e0e3      	LDI  R30,LOW(3)
0034fd c02c      	RJMP _0x20A0033
                 _0x20A0009:
0034fe ff37      	SBRS R19,7
0034ff c02d      	RJMP _0x20A000F
003500 85e8      	LDD  R30,Y+8
003501 85f9      	LDD  R31,Y+8+1
003502 8522      	LDD  R18,Z+10
003503 85e1      	LDD  R30,Z+9
003504 172e      	CP   R18,R30
003505 f028      	BRLO _0x20A0010
003506 01da      	MOVW R26,R20
003507 e0e3      	LDI  R30,LOW(3)
003508 93ec      	ST   X,R30
003509 e022      	LDI  R18,LOW(2)
00350a c023      	RJMP _0x20A000B
                 _0x20A0010:
00350b 85e8      	LDD  R30,Y+8
00350c 85f9      	LDD  R31,Y+8+1
00350d 81a7      	LDD  R26,Z+7
00350e 85b0      	LDD  R27,Z+8
00350f 2fe2      	MOV  R30,R18
003510 5f2f      	SUBI R18,-1
003511 e0f0      	LDI  R31,0
003512 0fea      	ADD  R30,R26
003513 1ffb      	ADC  R31,R27
003514 010f      	MOVW R0,R30
003515 81ae      	LDD  R26,Y+6
003516 81bf      	LDD  R27,Y+6+1
003517 91ec      	LD   R30,X
003518 01d0      	MOVW R26,R0
003519 93ec      	ST   X,R30
00351a 2fe2      	MOV  R30,R18
                +
00351b 85a8     +LDD R26 , Y + 8
00351c 85b9     +LDD R27 , Y + 8 + 1
00351d 961a     +ADIW R26 , 10
00351e 93ec     +ST X , R30
                 	__PUTB1SNS 8,10
00351f 85e8      	LDD  R30,Y+8
003520 85f9      	LDD  R31,Y+8+1
003521 85e1      	LDD  R30,Z+9
003522 172e      	CP   R18,R30
003523 f420      	BRSH _0x20A0011
003524 01da      	MOVW R26,R20
003525 e0e2      	LDI  R30,LOW(2)
003526 93ec      	ST   X,R30
003527 c00b      	RJMP _0x2100004
                 _0x20A0011:
003528 01da      	MOVW R26,R20
003529 e0e7      	LDI  R30,LOW(7)
                 _0x20A0033:
00352a 93ec      	ST   X,R30
00352b e021      	LDI  R18,LOW(1)
00352c c001      	RJMP _0x20A000B
                 _0x20A000F:
00352d e026      	LDI  R18,LOW(6)
                 _0x20A000B:
00352e 2fe2      	MOV  R30,R18
                +
00352f 85a8     +LDD R26 , Y + 8
003530 85b9     +LDD R27 , Y + 8 + 1
003531 961b     +ADIW R26 , 11
003532 93ec     +ST X , R30
                 	__PUTB1SNS 8,11
                 _0x2100004:
003533 940e 42eb 	CALL __LOADLOCR6
003535 962a      	ADIW R28,10
003536 9508      	RET
                 ; .FEND
                 _twi_master_trans:
                 ; .FSTART _twi_master_trans
003537 93aa      	ST   -Y,R26
003538 931a      	ST   -Y,R17
003539 930a      	ST   -Y,R16
00353a 85e9      	LDD  R30,Y+9
00353b 85fa      	LDD  R31,Y+9+1
00353c 85a3      	LDD  R26,Z+11
00353d 78a0      	ANDI R26,LOW(0x80)
00353e f009      	BREQ PC+2
00353f c059      	RJMP _0x20A0012
003540 85a9      	LDD  R26,Y+9
003541 85ba      	LDD  R27,Y+9+1
003542 961b      	ADIW R26,11
003543 e8e0      	LDI  R30,LOW(128)
003544 93ec      	ST   X,R30
003545 85e8      	LDD  R30,Y+8
003546 0fee      	LSL  R30
003547 87e8      	STD  Y+8,R30
                +
003548 85a9     +LDD R26 , Y + 9
003549 85ba     +LDD R27 , Y + 9 + 1
00354a 9612     +ADIW R26 , 2
00354b 93ec     +ST X , R30
                 	__PUTB1SNS 9,2
00354c 81ee      	LDD  R30,Y+6
00354d 81ff      	LDD  R31,Y+6+1
                +
00354e 85a9     +LDD R26 , Y + 9
00354f 85ba     +LDD R27 , Y + 9 + 1
003550 9613     +ADIW R26 , 3
003551 93ed     +ST X + , R30
003552 93fc     +ST X , R31
                 	__PUTW1SNS 9,3
003553 81ed      	LDD  R30,Y+5
                +
003554 85a9     +LDD R26 , Y + 9
003555 85ba     +LDD R27 , Y + 9 + 1
003556 9615     +ADIW R26 , 5
003557 93ec     +ST X , R30
                 	__PUTB1SNS 9,5
003558 85a9      	LDD  R26,Y+9
003559 85ba      	LDD  R27,Y+9+1
00355a 9616      	ADIW R26,6
00355b e0e0      	LDI  R30,LOW(0)
00355c 93ec      	ST   X,R30
00355d 81eb      	LDD  R30,Y+3
00355e 81fc      	LDD  R31,Y+3+1
                +
00355f 85a9     +LDD R26 , Y + 9
003560 85ba     +LDD R27 , Y + 9 + 1
003561 9617     +ADIW R26 , 7
003562 93ed     +ST X + , R30
003563 93fc     +ST X , R31
                 	__PUTW1SNS 9,7
003564 81ea      	LDD  R30,Y+2
                +
003565 85a9     +LDD R26 , Y + 9
003566 85ba     +LDD R27 , Y + 9 + 1
003567 9619     +ADIW R26 , 9
003568 93ec     +ST X , R30
                 	__PUTB1SNS 9,9
003569 85a9      	LDD  R26,Y+9
00356a 85ba      	LDD  R27,Y+9+1
00356b 961a      	ADIW R26,10
00356c e0e0      	LDI  R30,LOW(0)
00356d 93ec      	ST   X,R30
00356e 940e 3ceb 	CALL SUBOPT_0xE1
003570 9636      	ADIW R30,6
003571 018f      	MOVW R16,R30
003572 81ed      	LDD  R30,Y+5
003573 30e0      	CPI  R30,0
003574 f079      	BREQ _0x20A0013
003575 81ee      	LDD  R30,Y+6
003576 81ff      	LDD  R31,Y+6+1
003577 9730      	SBIW R30,0
003578 f101      	BREQ _0x2100003
003579 81ea      	LDD  R30,Y+2
00357a 30e0      	CPI  R30,0
00357b f021      	BREQ _0x20A0016
00357c 81ab      	LDD  R26,Y+3
00357d 81bc      	LDD  R27,Y+3+1
00357e 9710      	SBIW R26,0
00357f f009      	BREQ _0x20A0017
                 _0x20A0016:
003580 c001      	RJMP _0x20A0015
                 _0x20A0017:
003581 c017      	RJMP _0x2100003
                 _0x20A0015:
003582 85e8      	LDD  R30,Y+8
003583 c009      	RJMP _0x20A0034
                 _0x20A0013:
003584 81ea      	LDD  R30,Y+2
003585 30e0      	CPI  R30,0
003586 f041      	BREQ _0x20A0019
003587 81eb      	LDD  R30,Y+3
003588 81fc      	LDD  R31,Y+3+1
003589 9730      	SBIW R30,0
00358a f071      	BREQ _0x2100003
00358b 85e8      	LDD  R30,Y+8
00358c 60e1      	ORI  R30,1
                 _0x20A0034:
00358d 01d8      	MOVW R26,R16
00358e 93ec      	ST   X,R30
                 _0x20A0019:
                 _0x20A001B:
00358f 85e9      	LDD  R30,Y+9
003590 85fa      	LDD  R31,Y+9+1
003591 85a3      	LDD  R26,Z+11
003592 78a0      	ANDI R26,LOW(0x80)
003593 f7d9      	BRNE _0x20A001B
003594 85a3      	LDD  R26,Z+11
003595 e0e1      	LDI  R30,LOW(1)
003596 940e 416c 	CALL __EQB12
003598 c001      	RJMP _0x2100002
                 _0x20A0012:
                 _0x2100003:
003599 e0e0      	LDI  R30,LOW(0)
                 _0x2100002:
00359a 8119      	LDD  R17,Y+1
00359b 8108      	LDD  R16,Y+0
00359c 962b      	ADIW R28,11
00359d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00359e 940e 4271 	CALL __PUTPARD2
0035a0 817b         ldd  r23,y+3
0035a1 816a         ldd  r22,y+2
0035a2 81f9         ldd  r31,y+1
0035a3 81e8         ld   r30,y
0035a4 fb77         bst  r23,7
0035a5 0f77         lsl  r23
0035a6 fd67         sbrc r22,7
0035a7 6071         sbr  r23,1
0035a8 2f97         mov  r25,r23
0035a9 579e         subi r25,0x7e
0035aa f081         breq __ftrunc0
0035ab f078         brcs __ftrunc0
0035ac 3198         cpi  r25,24
0035ad f490         brsh __ftrunc1
0035ae 27aa         clr  r26
0035af 27bb         clr  r27
0035b0 2788         clr  r24
                 __ftrunc2:
0035b1 9408         sec
0035b2 9587         ror  r24
0035b3 95b7         ror  r27
0035b4 95a7         ror  r26
0035b5 959a         dec  r25
0035b6 f7d1         brne __ftrunc2
0035b7 23ea         and  r30,r26
0035b8 23fb         and  r31,r27
0035b9 2368         and  r22,r24
0035ba c005         rjmp __ftrunc1
                 __ftrunc0:
0035bb 94e8         clt
0035bc 2777         clr  r23
0035bd 27ee         clr  r30
0035be 27ff         clr  r31
0035bf 2766         clr  r22
                 __ftrunc1:
0035c0 776f         cbr  r22,0x80
0035c1 9576         lsr  r23
0035c2 f408         brcc __ftrunc3
0035c3 6860         sbr  r22,0x80
                 __ftrunc3:
0035c4 f977         bld  r23,7
0035c5 91a9         ld   r26,y+
0035c6 91b9         ld   r27,y+
0035c7 9189         ld   r24,y+
0035c8 9199         ld   r25,y+
0035c9 17ea         cp   r30,r26
0035ca 07fb         cpc  r31,r27
0035cb 0768         cpc  r22,r24
0035cc 0779         cpc  r23,r25
0035cd fb97         bst  r25,7
0035ce 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0035cf 940e 4271 	CALL __PUTPARD2
0035d1 940e 3ca7 	CALL SUBOPT_0xD6
0035d3 940e 359e 	CALL _ftrunc
0035d5 d197      	RCALL SUBOPT_0x27
0035d6 f419          brne __floor1
                 __floor0:
0035d7 940e 3c81 	CALL SUBOPT_0xCE
0035d9 c009      	RJMP _0x2100001
                 __floor1:
0035da f7e6          brtc __floor0
0035db 940e 3c81 	CALL SUBOPT_0xCE
                +
0035dd e0a0     +LDI R26 , LOW ( 0x3F800000 )
0035de e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0035df e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0035e0 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0035e1 940e 3fc4 	CALL __SUBF12
                 _0x2100001:
0035e3 9624      	ADIW R28,4
0035e4 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _prtc_get_time:
003000           	.BYTE 0x2
                 _prtc_get_date:
003002           	.BYTE 0x2
                 _fNAME:
003004           	.BYTE 0xF
                 _potok1:
003013           	.BYTE 0x24
                 _rx_buffer_usartc0:
003037           	.BYTE 0x1E
                 _nn:
003055           	.BYTE 0x1
                 _adcb_store:
003056           	.BYTE 0x8
                 _adca_store:
00305e           	.BYTE 0x8
                 _adcb_SD:
003066           	.BYTE 0x8
                 _adca_SD:
00306e           	.BYTE 0x8
                 _B5upr:
003076           	.BYTE 0x1
                 _A0:
003077           	.BYTE 0x6
                 _AF:
00307d           	.BYTE 0x12
                 _AA:
00308f           	.BYTE 0x4
                 _A1:
003093           	.BYTE 0x1B
                 _AD:
0030ae           	.BYTE 0x6
                 _A7:
0030b4           	.BYTE 0x3
                 _p77:
0030b7           	.BYTE 0x4
                 _p76:
0030bb           	.BYTE 0x4
                 _ch:
0030bf           	.BYTE 0x1
                 _l:
0030c0           	.BYTE 0x1
                 _AB:
0030c1           	.BYTE 0xC
                 _A2:
0030cd           	.BYTE 0x4
                 _AE:
0030d1           	.BYTE 0xA
                 _p6A:
0030db           	.BYTE 0x6
                 _A4:
0030e1           	.BYTE 0x6
                 _p58:
0030e7           	.BYTE 0x6
                 _A6:
0030ed           	.BYTE 0x6
                 _check_sum:
0030f3           	.BYTE 0x1
                 _info:
0030f4           	.BYTE 0x1E
                 _status:
003112           	.BYTE 0x1
                 _data:
003113           	.BYTE 0x1
                 _S0:
003114           	.BYTE 0x17
                 _S1:
00312b           	.BYTE 0x1E
                 _send:
003149           	.BYTE 0x1
                 _Mx:
00314a           	.BYTE 0x1
                 _B5buf:
00314b           	.BYTE 0x4
                 _X:
00314f           	.BYTE 0x4
                 _date1:
003153           	.BYTE 0x4
                 _newdate:
003157           	.BYTE 0x1
                 _newtime:
003158           	.BYTE 0x1
                 _time1:
003159           	.BYTE 0x4
                 
                 	.ESEG
                 _Xsave:
000001           	.BYTE 0x4
                 
                 	.DSEG
                 _bufdt:
00315d           	.BYTE 0x5
                 _res:
003162           	.BYTE 0x1
                 _nbytes:
003163           	.BYTE 0x2
                 _fat:
003165           	.BYTE 0x232
                 _file:
003397           	.BYTE 0x220
                 _path:
0035b7           	.BYTE 0xC
                 _SD_IN:
0035c3           	.BYTE 0x1
                 _buffer:
0035c4           	.BYTE 0x24
                 _SD:
0035e8           	.BYTE 0xF
                 _SD1:
0035f7           	.BYTE 0xF
                 _twie_master:
003606           	.BYTE 0xC
                 _AC1:
003612           	.BYTE 0x2
                 _AC2:
003614           	.BYTE 0x2
                 _AC3:
003616           	.BYTE 0x2
                 _AC4:
003618           	.BYTE 0x2
                 _AC5:
00361a           	.BYTE 0x2
                 _AC6:
00361c           	.BYTE 0x2
                 _B1:
00361e           	.BYTE 0x2
                 _B2:
003620           	.BYTE 0x2
                 _MB:
003622           	.BYTE 0x2
                 _MC:
003624           	.BYTE 0x2
                 _MD:
003626           	.BYTE 0x2
                 _UT:
003628           	.BYTE 0x4
                 _oss:
00362c           	.BYTE 0x1
                 _UP:
00362d           	.BYTE 0x4
                 _X1:
003631           	.BYTE 0x4
                 _X2:
003635           	.BYTE 0x4
                 _B5:
003639           	.BYTE 0x4
                 _Temp:
00363d           	.BYTE 0x4
                 _B6:
003641           	.BYTE 0x4
                 _X3:
003645           	.BYTE 0x4
                 _B3:
003649           	.BYTE 0x4
                 _p:
00364d           	.BYTE 0x4
                 _B4:
003651           	.BYTE 0x4
                 _B7:
003655           	.BYTE 0x4
                 _Tempf:
003659           	.BYTE 0x4
                 _p1:
00365d           	.BYTE 0x4
                 _twi_bmp085_reg:
003661           	.BYTE 0x16
                 _twi_bmp085_data:
003677           	.BYTE 0x16
                 _read_temp_please:
00368d           	.BYTE 0x2
                 _read_temp_adr:
00368f           	.BYTE 0x2
                 _read_temp_data:
003691           	.BYTE 0x2
                 _read_pres_please:
003693           	.BYTE 0x2
                 _read_pres_adr:
003695           	.BYTE 0x3
                 _read_pres_data:
003698           	.BYTE 0x3
                 _U1in:
00369b           	.BYTE 0x2
                 _U1out:
00369d           	.BYTE 0x2
                 _U1io:
00369f           	.BYTE 0x2
                 _U1ne_invert:
0036a1           	.BYTE 0x2
                 _U2in:
0036a3           	.BYTE 0x2
                 _U2out:
0036a5           	.BYTE 0x2
                 _U2io:
0036a7           	.BYTE 0x2
                 _U2ne_invert:
0036a9           	.BYTE 0x2
                 _U3in:
0036ab           	.BYTE 0x2
                 _U3out:
0036ad           	.BYTE 0x2
                 _U3io:
0036af           	.BYTE 0x2
                 _U3ne_invert:
0036b1           	.BYTE 0x2
                 _chan:
0036b3           	.BYTE 0x1
                 _RESULT:
0036b4           	.BYTE 0x2
                 _RESULT_buf:
0036b6           	.BYTE 0x2
                 _RESULT_sr:
0036b8           	.BYTE 0x4
                 _RESULT_count:
0036bc           	.BYTE 0x1
                 _status_G100:
0036bd           	.BYTE 0x1
                 _timer1_G100:
0036be           	.BYTE 0x1
                 _timer2_G100:
0036bf           	.BYTE 0x1
                 _card_type_G100:
0036c0           	.BYTE 0x1
                 _FatFs_G101:
0036c1           	.BYTE 0x2
                 _Fsid_G101:
0036c3           	.BYTE 0x2
                 _Drive_G101:
0036c5           	.BYTE 0x1
                 __seed_G104:
0036c6           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
0035e5 940e 4127 	CALL __LSLW3
0035e7 0fea      	ADD  R30,R26
0035e8 1ffb      	ADC  R31,R27
0035e9 018f      	MOVW R16,R30
0035ea 01d8      	MOVW R26,R16
0035eb 91ec      	LD   R30,X
0035ec 68e0      	ORI  R30,0x80
0035ed 93ec      	ST   X,R30
0035ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:85 WORDS
                 SUBOPT_0x1:
0035ef e0e6      	LDI  R30,LOW(6)
0035f0 93e0 30c0 	STS  _l,R30
0035f2 e0e1      	LDI  R30,LOW(1)
0035f3 93e0 30bf 	STS  _ch,R30
0035f5 91e0 30c0 	LDS  R30,_l
0035f7 e0f0      	LDI  R31,0
0035f8 9731      	SBIW R30,1
0035f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 78 TIMES, CODE SIZE REDUCTION:151 WORDS
                 SUBOPT_0x2:
0035fa 91e0 30c0 	LDS  R30,_l
0035fc e0f0      	LDI  R31,0
0035fd 9731      	SBIW R30,1
0035fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x3:
0035ff 91a0 30bf 	LDS  R26,_ch
003601 e0b0      	LDI  R27,0
003602 17ae      	CP   R26,R30
003603 07bf      	CPC  R27,R31
003604 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4:
003605 58e9      	SUBI R30,LOW(-_A0)
003606 4cff      	SBCI R31,HIGH(-_A0)
003607 010f      	MOVW R0,R30
003608 81a0      	LD   R26,Z
003609 91e0 30bf 	LDS  R30,_ch
00360b e0f0      	LDI  R31,0
00360c 58e9      	SUBI R30,LOW(-_A0)
00360d 4cff      	SBCI R31,HIGH(-_A0)
00360e 81e0      	LD   R30,Z
00360f 0fea      	ADD  R30,R26
003610 01d0      	MOVW R26,R0
003611 93ec      	ST   X,R30
003612 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 58 TIMES, CODE SIZE REDUCTION:168 WORDS
                 SUBOPT_0x5:
003613 91e0 30bf 	LDS  R30,_ch
003615 5fef      	SUBI R30,-LOW(1)
003616 93e0 30bf 	STS  _ch,R30
003618 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
003619 e1e2      	LDI  R30,LOW(18)
00361a 93e0 30c0 	STS  _l,R30
00361c e0e1      	LDI  R30,LOW(1)
00361d 93e0 30bf 	STS  _ch,R30
00361f cfda      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x7:
003620 58e3      	SUBI R30,LOW(-_AF)
003621 4cff      	SBCI R31,HIGH(-_AF)
003622 010f      	MOVW R0,R30
003623 81a0      	LD   R26,Z
003624 91e0 30bf 	LDS  R30,_ch
003626 e0f0      	LDI  R31,0
003627 58e3      	SUBI R30,LOW(-_AF)
003628 4cff      	SBCI R31,HIGH(-_AF)
003629 81e0      	LD   R30,Z
00362a 0fea      	ADD  R30,R26
00362b 01d0      	MOVW R26,R0
00362c 93ec      	ST   X,R30
00362d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x8:
00362e e0e4      	LDI  R30,LOW(4)
00362f 93e0 30c0 	STS  _l,R30
003631 e0e1      	LDI  R30,LOW(1)
003632 93e0 30bf 	STS  _ch,R30
003634 cfc5      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
003635 57e1      	SUBI R30,LOW(-_AA)
003636 4cff      	SBCI R31,HIGH(-_AA)
003637 010f      	MOVW R0,R30
003638 81a0      	LD   R26,Z
003639 91e0 30bf 	LDS  R30,_ch
00363b e0f0      	LDI  R31,0
00363c 57e1      	SUBI R30,LOW(-_AA)
00363d 4cff      	SBCI R31,HIGH(-_AA)
00363e 81e0      	LD   R30,Z
00363f 0fea      	ADD  R30,R26
003640 01d0      	MOVW R26,R0
003641 93ec      	ST   X,R30
003642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xA:
003643 53e3      	SUBI R30,LOW(-_A2)
003644 4cff      	SBCI R31,HIGH(-_A2)
003645 010f      	MOVW R0,R30
003646 81a0      	LD   R26,Z
003647 91e0 30bf 	LDS  R30,_ch
003649 e0f0      	LDI  R31,0
00364a 53e3      	SUBI R30,LOW(-_A2)
00364b 4cff      	SBCI R31,HIGH(-_A2)
00364c 81e0      	LD   R30,Z
00364d 0fea      	ADD  R30,R26
00364e 01d0      	MOVW R26,R0
00364f 93ec      	ST   X,R30
003650 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xB:
003651 55e2      	SUBI R30,LOW(-_AD)
003652 4cff      	SBCI R31,HIGH(-_AD)
003653 010f      	MOVW R0,R30
003654 81a0      	LD   R26,Z
003655 91e0 30bf 	LDS  R30,_ch
003657 e0f0      	LDI  R31,0
003658 55e2      	SUBI R30,LOW(-_AD)
003659 4cff      	SBCI R31,HIGH(-_AD)
00365a 81e0      	LD   R30,Z
00365b 0fea      	ADD  R30,R26
00365c 01d0      	MOVW R26,R0
00365d 93ec      	ST   X,R30
00365e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xC:
00365f 51e3      	SUBI R30,LOW(-_A6)
003660 4cff      	SBCI R31,HIGH(-_A6)
003661 010f      	MOVW R0,R30
003662 81a0      	LD   R26,Z
003663 91e0 30bf 	LDS  R30,_ch
003665 e0f0      	LDI  R31,0
003666 51e3      	SUBI R30,LOW(-_A6)
003667 4cff      	SBCI R31,HIGH(-_A6)
003668 81e0      	LD   R30,Z
003669 0fea      	ADD  R30,R26
00366a 01d0      	MOVW R26,R0
00366b 93ec      	ST   X,R30
00366c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
00366d e1eb      	LDI  R30,LOW(27)
00366e 93e0 30c0 	STS  _l,R30
003670 e0e1      	LDI  R30,LOW(1)
003671 93e0 30bf 	STS  _ch,R30
003673 cf86      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xE:
003674 56ed      	SUBI R30,LOW(-_A1)
003675 4cff      	SBCI R31,HIGH(-_A1)
003676 010f      	MOVW R0,R30
003677 81a0      	LD   R26,Z
003678 91e0 30bf 	LDS  R30,_ch
00367a e0f0      	LDI  R31,0
00367b 56ed      	SUBI R30,LOW(-_A1)
00367c 4cff      	SBCI R31,HIGH(-_A1)
00367d 81e0      	LD   R30,Z
00367e 0fea      	ADD  R30,R26
00367f 01d0      	MOVW R26,R0
003680 93ec      	ST   X,R30
003681 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
003682 e0e3      	LDI  R30,LOW(3)
003683 93e0 30c0 	STS  _l,R30
003685 e0e1      	LDI  R30,LOW(1)
003686 93e0 30bf 	STS  _ch,R30
003688 cf71      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x10:
003689 54ec      	SUBI R30,LOW(-_A7)
00368a 4cff      	SBCI R31,HIGH(-_A7)
00368b 010f      	MOVW R0,R30
00368c 81a0      	LD   R26,Z
00368d 91e0 30bf 	LDS  R30,_ch
00368f e0f0      	LDI  R31,0
003690 54ec      	SUBI R30,LOW(-_A7)
003691 4cff      	SBCI R31,HIGH(-_A7)
003692 81e0      	LD   R30,Z
003693 0fea      	ADD  R30,R26
003694 01d0      	MOVW R26,R0
003695 93ec      	ST   X,R30
003696 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x11:
003697 54e9      	SUBI R30,LOW(-_p77)
003698 4cff      	SBCI R31,HIGH(-_p77)
003699 010f      	MOVW R0,R30
00369a 81a0      	LD   R26,Z
00369b 91e0 30bf 	LDS  R30,_ch
00369d e0f0      	LDI  R31,0
00369e 54e9      	SUBI R30,LOW(-_p77)
00369f 4cff      	SBCI R31,HIGH(-_p77)
0036a0 81e0      	LD   R30,Z
0036a1 0fea      	ADD  R30,R26
0036a2 01d0      	MOVW R26,R0
0036a3 93ec      	ST   X,R30
0036a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
0036a5 e0ec      	LDI  R30,LOW(12)
0036a6 93e0 30c0 	STS  _l,R30
0036a8 e0e1      	LDI  R30,LOW(1)
0036a9 93e0 30bf 	STS  _ch,R30
0036ab cf4e      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x13:
0036ac 53ef      	SUBI R30,LOW(-_AB)
0036ad 4cff      	SBCI R31,HIGH(-_AB)
0036ae 010f      	MOVW R0,R30
0036af 81a0      	LD   R26,Z
0036b0 91e0 30bf 	LDS  R30,_ch
0036b2 e0f0      	LDI  R31,0
0036b3 53ef      	SUBI R30,LOW(-_AB)
0036b4 4cff      	SBCI R31,HIGH(-_AB)
0036b5 81e0      	LD   R30,Z
0036b6 0fea      	ADD  R30,R26
0036b7 01d0      	MOVW R26,R0
0036b8 93ec      	ST   X,R30
0036b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
0036ba e0ea      	LDI  R30,LOW(10)
0036bb 93e0 30c0 	STS  _l,R30
0036bd e0e1      	LDI  R30,LOW(1)
0036be 93e0 30bf 	STS  _ch,R30
0036c0 cf39      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x15:
0036c1 52ef      	SUBI R30,LOW(-_AE)
0036c2 4cff      	SBCI R31,HIGH(-_AE)
0036c3 010f      	MOVW R0,R30
0036c4 81a0      	LD   R26,Z
0036c5 91e0 30bf 	LDS  R30,_ch
0036c7 e0f0      	LDI  R31,0
0036c8 52ef      	SUBI R30,LOW(-_AE)
0036c9 4cff      	SBCI R31,HIGH(-_AE)
0036ca 81e0      	LD   R30,Z
0036cb 0fea      	ADD  R30,R26
0036cc 01d0      	MOVW R26,R0
0036cd 93ec      	ST   X,R30
0036ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x16:
0036cf 51ef      	SUBI R30,LOW(-_A4)
0036d0 4cff      	SBCI R31,HIGH(-_A4)
0036d1 010f      	MOVW R0,R30
0036d2 81a0      	LD   R26,Z
0036d3 91e0 30bf 	LDS  R30,_ch
0036d5 e0f0      	LDI  R31,0
0036d6 51ef      	SUBI R30,LOW(-_A4)
0036d7 4cff      	SBCI R31,HIGH(-_A4)
0036d8 81e0      	LD   R30,Z
0036d9 0fea      	ADD  R30,R26
0036da 01d0      	MOVW R26,R0
0036db 93ec      	ST   X,R30
0036dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x17:
0036dd 51e9      	SUBI R30,LOW(-_p58)
0036de 4cff      	SBCI R31,HIGH(-_p58)
0036df 010f      	MOVW R0,R30
0036e0 81a0      	LD   R26,Z
0036e1 91e0 30bf 	LDS  R30,_ch
0036e3 e0f0      	LDI  R31,0
0036e4 51e9      	SUBI R30,LOW(-_p58)
0036e5 4cff      	SBCI R31,HIGH(-_p58)
0036e6 81e0      	LD   R30,Z
0036e7 0fea      	ADD  R30,R26
0036e8 01d0      	MOVW R26,R0
0036e9 93ec      	ST   X,R30
0036ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
0036eb 54e5      	SUBI R30,LOW(-_p76)
0036ec 4cff      	SBCI R31,HIGH(-_p76)
0036ed 010f      	MOVW R0,R30
0036ee 81a0      	LD   R26,Z
0036ef 91e0 30bf 	LDS  R30,_ch
0036f1 e0f0      	LDI  R31,0
0036f2 54e5      	SUBI R30,LOW(-_p76)
0036f3 4cff      	SBCI R31,HIGH(-_p76)
0036f4 81e0      	LD   R30,Z
0036f5 0fea      	ADD  R30,R26
0036f6 01d0      	MOVW R26,R0
0036f7 93ec      	ST   X,R30
0036f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x19:
0036f9 52e5      	SUBI R30,LOW(-_p6A)
0036fa 4cff      	SBCI R31,HIGH(-_p6A)
0036fb 010f      	MOVW R0,R30
0036fc 81a0      	LD   R26,Z
0036fd 91e0 30bf 	LDS  R30,_ch
0036ff e0f0      	LDI  R31,0
003700 52e5      	SUBI R30,LOW(-_p6A)
003701 4cff      	SBCI R31,HIGH(-_p6A)
003702 81e0      	LD   R30,Z
003703 0fea      	ADD  R30,R26
003704 01d0      	MOVW R26,R0
003705 93ec      	ST   X,R30
003706 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
003707 e1e8      	LDI  R30,LOW(24)
003708 93e0 0644 	STS  1604,R30
00370a ebe9      	LDI  R30,LOW(185)
00370b 93e0 0640 	STS  1600,R30
00370d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1B:
                +
00370e efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00370f efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
003710 ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
003711 ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
003712 93e0 0428 	STS  1064,R30
003714 93f0 0429 	STS  1064+1,R31
003716 9360 042a 	STS  1064+2,R22
003718 9370 042b 	STS  1064+3,R23
00371a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1C:
                +
00371b e0e0     +LDI R30 , LOW ( 0x0 )
00371c e0f0     +LDI R31 , HIGH ( 0x0 )
00371d e060     +LDI R22 , BYTE3 ( 0x0 )
00371e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00371f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1D:
003720 91e0 314f 	LDS  R30,_X
003722 91f0 3150 	LDS  R31,_X+1
003724 9160 3151 	LDS  R22,_X+2
003726 9170 3152 	LDS  R23,_X+3
003728 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
003729 93e0 0424 	STS  1060,R30
00372b 93f0 0425 	STS  1060+1,R31
00372d 9360 0426 	STS  1060+2,R22
00372f 9370 0427 	STS  1060+3,R23
003731 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1F:
                +
003732 e1a0     +LDI R26 , LOW ( 0xE10 )
003733 e0be     +LDI R27 , HIGH ( 0xE10 )
003734 e080     +LDI R24 , BYTE3 ( 0xE10 )
003735 e090     +LDI R25 , BYTE4 ( 0xE10 )
                 	__GETD2N 0xE10
003736 940e 4197 	CALL __MULD12
003738 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x20:
                +
003739 01de     +MOVW R26 , R28
00373a 5aa4     +SUBI R26 , LOW ( - 92 )
00373b 4fbf     +SBCI R27 , HIGH ( - 92 )
00373c 900d     +LD R0 , X +
00373d 901d     +LD R1 , X +
00373e 918d     +LD R24 , X +
00373f 919c     +LD R25 , X
003740 01d0     +MOVW R26 , R0
                 	__GETD2SX 92
003741 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x21:
                +
003742 89ec     +LDD R30 , Y + 20
003743 89fd     +LDD R31 , Y + 20 + 1
003744 896e     +LDD R22 , Y + 20 + 2
003745 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
003746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x22:
                +
003747 e0a3     +LDI R26 , LOW ( 0x3 )
003748 e0b0     +LDI R27 , HIGH ( 0x3 )
003749 e080     +LDI R24 , BYTE3 ( 0x3 )
00374a e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00374b 940e 4210 	CALL __MANDD12
00374d 940e 42d0 	CALL __CPD10
00374f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
                +
003750 89ac     +LDD R26 , Y + 20
003751 89bd     +LDD R27 , Y + 20 + 1
003752 898e     +LDD R24 , Y + 20 + 2
003753 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
003754 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x24:
                +
003755 e6e4     +LDI R30 , LOW ( 0x64 )
003756 e0f0     +LDI R31 , HIGH ( 0x64 )
003757 e060     +LDI R22 , BYTE3 ( 0x64 )
003758 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
003759 940e 41fc 	CALL __MODD21
00375b 940e 42d0 	CALL __CPD10
00375d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x25:
00375e dff1      	RCALL SUBOPT_0x23
                +
00375f e9e0     +LDI R30 , LOW ( 0x190 )
003760 e0f1     +LDI R31 , HIGH ( 0x190 )
003761 e060     +LDI R22 , BYTE3 ( 0x190 )
003762 e070     +LDI R23 , BYTE4 ( 0x190 )
                 	__GETD1N 0x190
003763 940e 41fc 	CALL __MODD21
003765 940e 42d0 	CALL __CPD10
003767 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26:
                +
003768 e0e1     +LDI R30 , LOW ( 0x1 )
003769 e0f0     +LDI R31 , HIGH ( 0x1 )
00376a e060     +LDI R22 , BYTE3 ( 0x1 )
00376b e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00376c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x27:
00376d 940e 4262 	CALL __PUTD1S0
00376f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x28:
003770 940e 425d 	CALL __GETD2S0
                +
003772 59a3     +SUBI R26 , LOW ( - 365 )
003773 4fbe     +SBCI R27 , HIGH ( - 365 )
003774 4f8f     +SBCI R24 , BYTE3 ( - 365 )
003775 4f9f     +SBCI R25 , BYTE4 ( - 365 )
                 	__ADDD2N 365
                +
003776 e1e8     +LDI R30 , LOW ( 0x18 )
003777 e0f0     +LDI R31 , HIGH ( 0x18 )
003778 e060     +LDI R22 , BYTE3 ( 0x18 )
003779 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
00377a 940e 4197 	CALL __MULD12
00377c cfb5      	RJMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
                +
00377d 5fef     +SUBI R30 , LOW ( - 1 )
00377e 4fff     +SBCI R31 , HIGH ( - 1 )
00377f 4f6f     +SBCI R22 , BYTE3 ( - 1 )
003780 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
003781 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
003782 8bec     +STD Y + 20 , R30
003783 8bfd     +STD Y + 20 + 1 , R31
003784 8b6e     +STD Y + 20 + 2 , R22
003785 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
003786 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2B:
                +
003787 01fe     +MOVW R30 , R28
003788 5ae4     +SUBI R30 , LOW ( - 92 )
003789 4fff     +SBCI R31 , HIGH ( - 92 )
00378a 9001     +LD R0 , Z +
00378b 9011     +LD R1 , Z +
00378c 9161     +LD R22 , Z +
00378d 8170     +LD R23 , Z
00378e 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00378f 940e 40dc 	CALL __SUBD12
                +
003791 01de     +MOVW R26 , R28
003792 5aa4     +SUBI R26 , LOW ( - 92 )
003793 4fbf     +SBCI R27 , HIGH ( - 92 )
003794 93ed     +ST X + , R30
003795 93fd     +ST X + , R31
003796 936d     +ST X + , R22
003797 937c     +ST X , R23
                 	__PUTD1SX 92
003798 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
003799 dfa8      	RCALL SUBOPT_0x21
00379a cfac      	RJMP SUBOPT_0x22
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
00379b dfb4      	RCALL SUBOPT_0x23
00379c cfb8      	RJMP SUBOPT_0x24
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E:
00379d 940e 4258 	CALL __GETD1S0
00379f 940e 42d0 	CALL __CPD10
0037a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
0037a2 940e 4129 	CALL __LSLW2
0037a4 0fae      	ADD  R26,R30
0037a5 1fbf      	ADC  R27,R31
0037a6 940e 423f 	CALL __GETD1P
                +
0037a8 e1a8     +LDI R26 , LOW ( 0x18 )
0037a9 e0b0     +LDI R27 , HIGH ( 0x18 )
0037aa e080     +LDI R24 , BYTE3 ( 0x18 )
0037ab e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
0037ac 940e 4197 	CALL __MULD12
0037ae cf83      	RJMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x30:
                +
0037af 89e8     +LDD R30 , Y + 16
0037b0 89f9     +LDD R31 , Y + 16 + 1
0037b1 896a     +LDD R22 , Y + 16 + 2
0037b2 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0037b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x31:
                +
0037b4 8be8     +STD Y + 16 , R30
0037b5 8bf9     +STD Y + 16 + 1 , R31
0037b6 8b6a     +STD Y + 16 + 2 , R22
0037b7 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0037b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
0037b9 df7f      	RCALL SUBOPT_0x20
                +
0037ba e8e0     +LDI R30 , LOW ( 0x15180 )
0037bb e5f1     +LDI R31 , HIGH ( 0x15180 )
0037bc e061     +LDI R22 , BYTE3 ( 0x15180 )
0037bd e070     +LDI R23 , BYTE4 ( 0x15180 )
                 	__GETD1N 0x15180
0037be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x33:
                +
0037bf 87ec     +STD Y + 12 , R30
0037c0 87fd     +STD Y + 12 + 1 , R31
0037c1 876e     +STD Y + 12 + 2 , R22
0037c2 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0037c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x34:
0037c4 940e 41fc 	CALL __MODD21
                +
0037c6 01de     +MOVW R26 , R28
0037c7 5aa4     +SUBI R26 , LOW ( - 92 )
0037c8 4fbf     +SBCI R27 , HIGH ( - 92 )
0037c9 93ed     +ST X + , R30
0037ca 93fd     +ST X + , R31
0037cb 936d     +ST X + , R22
0037cc 937c     +ST X , R23
                 	__PUTD1SX 92
0037cd cf6b      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
                +
0037ce e1e0     +LDI R30 , LOW ( 0xE10 )
0037cf e0fe     +LDI R31 , HIGH ( 0xE10 )
0037d0 e060     +LDI R22 , BYTE3 ( 0xE10 )
0037d1 e070     +LDI R23 , BYTE4 ( 0xE10 )
                 	__GETD1N 0xE10
0037d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36:
                +
0037d3 87e8     +STD Y + 8 , R30
0037d4 87f9     +STD Y + 8 + 1 , R31
0037d5 876a     +STD Y + 8 + 2 , R22
0037d6 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0037d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x37:
                +
0037d8 83ec     +STD Y + 4 , R30
0037d9 83fd     +STD Y + 4 + 1 , R31
0037da 836e     +STD Y + 4 + 2 , R22
0037db 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0037dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
                +
0037dd e1a0     +LDI R26 , LOW ( 0x2710 )
0037de e2b7     +LDI R27 , HIGH ( 0x2710 )
0037df e080     +LDI R24 , BYTE3 ( 0x2710 )
0037e0 e090     +LDI R25 , BYTE4 ( 0x2710 )
                 	__GETD2N 0x2710
0037e1 940e 4197 	CALL __MULD12
0037e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
                +
0037e4 e6a4     +LDI R26 , LOW ( 0x64 )
0037e5 e0b0     +LDI R27 , HIGH ( 0x64 )
0037e6 e080     +LDI R24 , BYTE3 ( 0x64 )
0037e7 e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
0037e8 940e 4197 	CALL __MULD12
0037ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3A:
                +
0037eb 85ac     +LDD R26 , Y + 12
0037ec 85bd     +LDD R27 , Y + 12 + 1
0037ed 858e     +LDD R24 , Y + 12 + 2
0037ee 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0037ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3B:
                +
0037f0 85e8     +LDD R30 , Y + 8
0037f1 85f9     +LDD R31 , Y + 8 + 1
0037f2 856a     +LDD R22 , Y + 8 + 2
0037f3 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
0037f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3C:
                +
0037f5 81ec     +LDD R30 , Y + 4
0037f6 81fd     +LDD R31 , Y + 4 + 1
0037f7 816e     +LDD R22 , Y + 4 + 2
0037f8 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0037f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D:
                +
0037fa 01de     +MOVW R26 , R28
0037fb 5aaa     +SUBI R26 , LOW ( - 86 )
0037fc 4fbf     +SBCI R27 , HIGH ( - 86 )
0037fd 900d     +LD R0 , X +
0037fe 901d     +LD R1 , X +
0037ff 918d     +LD R24 , X +
003800 919c     +LD R25 , X
003801 01d0     +MOVW R26 , R0
                 	__GETD2SX 86
                +
003802 e1e0     +LDI R30 , LOW ( 0x2710 )
003803 e2f7     +LDI R31 , HIGH ( 0x2710 )
003804 e060     +LDI R22 , BYTE3 ( 0x2710 )
003805 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
003806 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E:
003807 940e 41f8 	CALL __MODD21U
003809 01df      	MOVW R26,R30
00380a 01cb      	MOVW R24,R22
                +
00380b e6e4     +LDI R30 , LOW ( 0x64 )
00380c e0f0     +LDI R31 , HIGH ( 0x64 )
00380d e060     +LDI R22 , BYTE3 ( 0x64 )
00380e e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
00380f 940e 41c2 	CALL __DIVD21U
003811 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3F:
                +
003812 e6e4     +LDI R30 , LOW ( 0x64 )
003813 e0f0     +LDI R31 , HIGH ( 0x64 )
003814 e060     +LDI R22 , BYTE3 ( 0x64 )
003815 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
003816 940e 41f8 	CALL __MODD21U
003818 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x40:
                +
003819 01de     +MOVW R26 , R28
00381a 5aae     +SUBI R26 , LOW ( - 82 )
00381b 4fbf     +SBCI R27 , HIGH ( - 82 )
00381c 900d     +LD R0 , X +
00381d 901d     +LD R1 , X +
00381e 918d     +LD R24 , X +
00381f 919c     +LD R25 , X
003820 01d0     +MOVW R26 , R0
                 	__GETD2SX 82
                +
003821 e1e0     +LDI R30 , LOW ( 0x2710 )
003822 e2f7     +LDI R31 , HIGH ( 0x2710 )
003823 e060     +LDI R22 , BYTE3 ( 0x2710 )
003824 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
003825 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x41:
                +
003826 85a8     +LDD R26 , Y + 8
003827 85b9     +LDD R27 , Y + 8 + 1
003828 858a     +LDD R24 , Y + 8 + 2
003829 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00382a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x42:
                +
00382b 85ec     +LDD R30 , Y + 12
00382c 85fd     +LDD R31 , Y + 12 + 1
00382d 856e     +LDD R22 , Y + 12 + 2
00382e 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00382f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x43:
                +
003830 50e1     +SUBI R30 , LOW ( 1 )
003831 40f0     +SBCI R31 , HIGH ( 1 )
003832 4060     +SBCI R22 , BYTE3 ( 1 )
003833 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
003834 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x44:
                +
003835 01de     +MOVW R26 , R28
003836 5ba4     +SUBI R26 , LOW ( - 76 )
003837 4fbf     +SBCI R27 , HIGH ( - 76 )
003838 900d     +LD R0 , X +
003839 91bc     +LD R27 , X
00383a 2da0     +MOV R26 , R0
                 	__GETW2SX 76
00383b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
                +
00383c 89a8     +LDD R26 , Y + 16
00383d 89b9     +LDD R27 , Y + 16 + 1
00383e 898a     +LDD R24 , Y + 16 + 2
00383f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
003840 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x46:
003841 920a      	ST   -Y,R0
003842 921a      	ST   -Y,R1
003843 92fa      	ST   -Y,R15
003844 936a      	ST   -Y,R22
003845 937a      	ST   -Y,R23
003846 938a      	ST   -Y,R24
003847 939a      	ST   -Y,R25
003848 93aa      	ST   -Y,R26
003849 93ba      	ST   -Y,R27
00384a 93ea      	ST   -Y,R30
00384b 93fa      	ST   -Y,R31
00384c b7ef      	IN   R30,SREG
00384d 93ea      	ST   -Y,R30
00384e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x47:
00384f efef      	LDI  R30,LOW(255)
003850 93e0 314a 	STS  _Mx,R30
003852 e0e1      	LDI  R30,LOW(1)
003853 2ebe      	MOV  R11,R30
003854 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x48:
003855 93e0 314a 	STS  _Mx,R30
003857 e0e2      	LDI  R30,LOW(2)
003858 2ebe      	MOV  R11,R30
003859 efef      	LDI  R30,LOW(255)
00385a 93e0 3037 	STS  _rx_buffer_usartc0,R30
00385c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x49:
00385d 93e0 314a 	STS  _Mx,R30
00385f e0e4      	LDI  R30,LOW(4)
003860 2ebe      	MOV  R11,R30
003861 efef      	LDI  R30,LOW(255)
003862 93e0 3037 	STS  _rx_buffer_usartc0,R30
003864 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4A:
003865 93e0 314a 	STS  _Mx,R30
003867 e0e7      	LDI  R30,LOW(7)
003868 2ebe      	MOV  R11,R30
003869 efef      	LDI  R30,LOW(255)
00386a 93e0 3037 	STS  _rx_buffer_usartc0,R30
00386c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4B:
00386d 93e0 314a 	STS  _Mx,R30
00386f e0e3      	LDI  R30,LOW(3)
003870 2ebe      	MOV  R11,R30
003871 efef      	LDI  R30,LOW(255)
003872 93e0 3037 	STS  _rx_buffer_usartc0,R30
003874 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4C:
003875 93e0 314a 	STS  _Mx,R30
003877 efef      	LDI  R30,LOW(255)
003878 93e0 3037 	STS  _rx_buffer_usartc0,R30
00387a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x4D:
00387b efef      	LDI  R30,LOW(255)
00387c 93e0 3037 	STS  _rx_buffer_usartc0,R30
00387e 24aa      	CLR  R10
00387f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x4E:
003880 91e0 30c0 	LDS  R30,_l
003882 91a0 30bf 	LDS  R26,_ch
003884 17ae      	CP   R26,R30
003885 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x4F:
003886 e0e0      	LDI  R30,LOW(0)
003887 93e0 30c0 	STS  _l,R30
003889 efef      	LDI  R30,LOW(255)
00388a 93e0 314a 	STS  _Mx,R30
00388c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x50:
00388d ecaa      	LDI  R26,LOW(202)
00388e 940e 0fbc 	CALL _putchar
003890 ecaa      	LDI  R26,LOW(202)
003891 940c 0fbc 	JMP  _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x51:
003893 940e 0fbc 	CALL _putchar
003895 cfb9      	RJMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x52:
003896 e0e0      	LDI  R30,LOW(0)
003897 93e0 30bf 	STS  _ch,R30
003899 93e0 30f3 	STS  _check_sum,R30
00389b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x53:
00389c 91e0 30bf 	LDS  R30,_ch
00389e e0f0      	LDI  R31,0
00389f 5ce9      	SUBI R30,LOW(-_rx_buffer_usartc0)
0038a0 4cff      	SBCI R31,HIGH(-_rx_buffer_usartc0)
0038a1 81e0      	LD   R30,Z
0038a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x54:
0038a3 91a0 30f3 	LDS  R26,_check_sum
0038a5 0fea      	ADD  R30,R26
0038a6 93e0 30f3 	STS  _check_sum,R30
0038a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x55:
0038a9 24aa      	CLR  R10
0038aa e0e0      	LDI  R30,LOW(0)
0038ab 93e0 30f3 	STS  _check_sum,R30
0038ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x56:
0038ae 91a0 3037 	LDS  R26,_rx_buffer_usartc0
0038b0 e6e4      	LDI  R30,LOW(100)
0038b1 9fea      	MUL  R30,R26
0038b2 01f0      	MOVW R30,R0
0038b3 01df      	MOVW R26,R30
                +
0038b4 91e0 3038+LDS R30 , _rx_buffer_usartc0 + ( 1 )
                 	__GETB1MN _rx_buffer_usartc0,1
0038b6 e0f0      	LDI  R31,0
0038b7 0fea      	ADD  R30,R26
0038b8 1ffb      	ADC  R31,R27
0038b9 940e 415d 	CALL __CWD1
0038bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x57:
0038bc 93e0 3153 	STS  _date1,R30
0038be 93f0 3154 	STS  _date1+1,R31
0038c0 9360 3155 	STS  _date1+2,R22
0038c2 9370 3156 	STS  _date1+3,R23
                +
0038c4 e6a4     +LDI R26 , LOW ( 0x64 )
0038c5 e0b0     +LDI R27 , HIGH ( 0x64 )
0038c6 e080     +LDI R24 , BYTE3 ( 0x64 )
0038c7 e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
0038c8 940e 4171 	CALL __MULD12U
0038ca 01df      	MOVW R26,R30
0038cb 01cb      	MOVW R24,R22
0038cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x58:
                +
0038cd 91e0 3039+LDS R30 , _rx_buffer_usartc0 + ( 2 )
                 	__GETB1MN _rx_buffer_usartc0,2
0038cf e0f0      	LDI  R31,0
0038d0 940e 415d 	CALL __CWD1
0038d2 940e 40d2 	CALL __ADDD12
0038d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x59:
0038d5 940e 415d 	CALL __CWD1
0038d7 940e 40d2 	CALL __ADDD12
0038d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5A:
0038da 93e0 3159 	STS  _time1,R30
0038dc 93f0 315a 	STS  _time1+1,R31
0038de 9360 315b 	STS  _time1+2,R22
0038e0 9370 315c 	STS  _time1+3,R23
0038e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5B:
0038e3 91e0 3159 	LDS  R30,_time1
0038e5 91f0 315a 	LDS  R31,_time1+1
0038e7 9160 315b 	LDS  R22,_time1+2
0038e9 9170 315c 	LDS  R23,_time1+3
0038eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x5C:
0038ec e4af      	LDI  R26,LOW(_X)
0038ed e3b1      	LDI  R27,HIGH(_X)
0038ee 940e 073e 	CALL _get_CNTRTC
0038f0 de2f      	RCALL SUBOPT_0x1D
0038f1 940e 426c 	CALL __PUTPARD1
0038f3 de27      	RCALL SUBOPT_0x1C
0038f4 940e 426c 	CALL __PUTPARD1
0038f6 e5e3      	LDI  R30,LOW(_date1)
0038f7 e3f1      	LDI  R31,HIGH(_date1)
0038f8 93fa      	ST   -Y,R31
0038f9 93ea      	ST   -Y,R30
0038fa e5a9      	LDI  R26,LOW(_time1)
0038fb e3b1      	LDI  R27,HIGH(_time1)
0038fc 940c 07ab 	JMP  _calcDateTime
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5D:
0038fe 91a0 3153 	LDS  R26,_date1
003900 91b0 3154 	LDS  R27,_date1+1
003902 9180 3155 	LDS  R24,_date1+2
003904 9190 3156 	LDS  R25,_date1+3
                +
003906 e4e0     +LDI R30 , LOW ( 0xF4240 )
003907 e4f2     +LDI R31 , HIGH ( 0xF4240 )
003908 e06f     +LDI R22 , BYTE3 ( 0xF4240 )
003909 e070     +LDI R23 , BYTE4 ( 0xF4240 )
                 	__GETD1N 0xF4240
00390a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5E:
                +
00390b e1e0     +LDI R30 , LOW ( 0x2710 )
00390c e2f7     +LDI R31 , HIGH ( 0x2710 )
00390d e060     +LDI R22 , BYTE3 ( 0x2710 )
00390e e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00390f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5F:
003910 91a0 3153 	LDS  R26,_date1
003912 91b0 3154 	LDS  R27,_date1+1
003914 9180 3155 	LDS  R24,_date1+2
003916 9190 3156 	LDS  R25,_date1+3
003918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x60:
003919 91e0 30bf 	LDS  R30,_ch
00391b e0f0      	LDI  R31,0
00391c 5ae3      	SUBI R30,LOW(-_bufdt)
00391d 4cfe      	SBCI R31,HIGH(-_bufdt)
00391e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x61:
00391f 91a0 3159 	LDS  R26,_time1
003921 91b0 315a 	LDS  R27,_time1+1
003923 9180 315b 	LDS  R24,_time1+2
003925 9190 315c 	LDS  R25,_time1+3
003927 cfe3      	RJMP SUBOPT_0x5E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x62:
003928 efe4      	LDI  R30,LOW(_info)
003929 e3f0      	LDI  R31,HIGH(_info)
00392a 93fa      	ST   -Y,R31
00392b 93ea      	ST   -Y,R30
00392c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x63:
00392d e0f0      	LDI  R31,0
00392e 0fee      	LSL  R30
00392f 1fff      	ROL  R31
003930 0fea      	ADD  R30,R26
003931 1ffb      	ADC  R31,R27
003932 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x64:
003933 2766      	CLR  R22
003934 2777      	CLR  R23
003935 940e 426c 	CALL __PUTPARD1
003937 e084      	LDI  R24,4
003938 940e 3312 	CALL _sprintf
00393a 9628      	ADIW R28,8
00393b 940c 0fe6 	JMP  _monitor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x65:
00393d 93fa      	ST   -Y,R31
00393e 93ea      	ST   -Y,R30
00393f e0e0      	LDI  R30,LOW(0)
003940 93ea      	ST   -Y,R30
003941 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x66:
003942 e0e6      	LDI  R30,LOW(_twie_master)
003943 e3f6      	LDI  R31,HIGH(_twie_master)
003944 93fa      	ST   -Y,R31
003945 93ea      	ST   -Y,R30
003946 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x67:
003947 93fa      	ST   -Y,R31
003948 93ea      	ST   -Y,R30
003949 e0e2      	LDI  R30,LOW(2)
00394a 93ea      	ST   -Y,R30
00394b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x68:
00394c 93fa      	ST   -Y,R31
00394d 93ea      	ST   -Y,R30
00394e e0a2      	LDI  R26,LOW(2)
00394f 940e 3537 	CALL _twi_master_trans
003951 cff0      	RJMP SUBOPT_0x66
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x69:
003952 e0e0      	LDI  R30,LOW(0)
003953 e0f0      	LDI  R31,HIGH(0)
003954 93fa      	ST   -Y,R31
003955 93ea      	ST   -Y,R30
003956 e0a0      	LDI  R26,LOW(0)
003957 940e 3537 	CALL _twi_master_trans
003959 e1aa      	LDI  R26,LOW(26)
00395a e0b0      	LDI  R27,0
00395b 940e 3f1b 	CALL _delay_ms
00395d cfe4      	RJMP SUBOPT_0x66
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6A:
00395e 93fa      	ST   -Y,R31
00395f 93ea      	ST   -Y,R30
003960 e0e1      	LDI  R30,LOW(1)
003961 93ea      	ST   -Y,R30
003962 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6B:
003963 93fa      	ST   -Y,R31
003964 93ea      	ST   -Y,R30
003965 e0a1      	LDI  R26,LOW(1)
003966 940e 3537 	CALL _twi_master_trans
003968 cfd9      	RJMP SUBOPT_0x66
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x6C:
003969 93e0 362d 	STS  _UP,R30
00396b 93f0 362e 	STS  _UP+1,R31
00396d 9360 362f 	STS  _UP+2,R22
00396f 9370 3630 	STS  _UP+3,R23
003971 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6D:
003972 91a0 362d 	LDS  R26,_UP
003974 91b0 362e 	LDS  R27,_UP+1
003976 9180 362f 	LDS  R24,_UP+2
003978 9190 3630 	LDS  R25,_UP+3
00397a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6E:
00397b 940e 4197 	CALL __MULD12
00397d 01df      	MOVW R26,R30
00397e 01cb      	MOVW R24,R22
00397f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6F:
003980 940e 410d 	CALL __ASRD12
003982 93e0 3631 	STS  _X1,R30
003984 93f0 3632 	STS  _X1+1,R31
003986 9360 3633 	STS  _X1+2,R22
003988 9370 3634 	STS  _X1+3,R23
00398a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x70:
00398b 91a0 3631 	LDS  R26,_X1
00398d 91b0 3632 	LDS  R27,_X1+1
00398f 9180 3633 	LDS  R24,_X1+2
003991 9190 3634 	LDS  R25,_X1+3
003993 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x71:
003994 93e0 3635 	STS  _X2,R30
003996 93f0 3636 	STS  _X2+1,R31
003998 9360 3637 	STS  _X2+2,R22
00399a 9370 3638 	STS  _X2+3,R23
00399c dfee      	RCALL SUBOPT_0x70
00399d 940e 40d2 	CALL __ADDD12
00399f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x72:
0039a0 91e0 3639 	LDS  R30,_B5
0039a2 91f0 363a 	LDS  R31,_B5+1
0039a4 9160 363b 	LDS  R22,_B5+2
0039a6 9170 363c 	LDS  R23,_B5+3
0039a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x73:
                +
0039a9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0039aa e0f0     +LDI R31 , HIGH ( 0x41200000 )
0039ab e260     +LDI R22 , BYTE3 ( 0x41200000 )
0039ac e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0039ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x74:
0039ae 91e0 3641 	LDS  R30,_B6
0039b0 91f0 3642 	LDS  R31,_B6+1
0039b2 9160 3643 	LDS  R22,_B6+2
0039b4 9170 3644 	LDS  R23,_B6+3
0039b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x75:
0039b7 91a0 3641 	LDS  R26,_B6
0039b9 91b0 3642 	LDS  R27,_B6+1
0039bb 9180 3643 	LDS  R24,_B6+2
0039bd 9190 3644 	LDS  R25,_B6+3
0039bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x76:
0039c0 940e 4162 	CALL __CWD2
0039c2 cfb8      	RJMP SUBOPT_0x6E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x77:
0039c3 93e0 3645 	STS  _X3,R30
0039c5 93f0 3646 	STS  _X3+1,R31
0039c7 9360 3647 	STS  _X3+2,R22
0039c9 9370 3648 	STS  _X3+3,R23
0039cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x78:
                +
0039cc 5fee     +SUBI R30 , LOW ( - 2 )
0039cd 4fff     +SBCI R31 , HIGH ( - 2 )
0039ce 4f6f     +SBCI R22 , BYTE3 ( - 2 )
0039cf 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
0039d0 940e 412e 	CALL __ASRD1
0039d2 940e 412e 	CALL __ASRD1
0039d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x79:
0039d5 940e 4197 	CALL __MULD12
0039d7 940e 4146 	CALL __ASRD16
0039d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7A:
0039da 91a0 3655 	LDS  R26,_B7
0039dc 91b0 3656 	LDS  R27,_B7+1
0039de 9180 3657 	LDS  R24,_B7+2
0039e0 9190 3658 	LDS  R25,_B7+3
0039e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7B:
0039e3 91e0 3651 	LDS  R30,_B4
0039e5 91f0 3652 	LDS  R31,_B4+1
0039e7 9160 3653 	LDS  R22,_B4+2
0039e9 9170 3654 	LDS  R23,_B4+3
0039eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7C:
0039ec 91a0 364d 	LDS  R26,_p
0039ee 91b0 364e 	LDS  R27,_p+1
0039f0 9180 364f 	LDS  R24,_p+2
0039f2 9190 3650 	LDS  R25,_p+3
0039f4 e0e8      	LDI  R30,LOW(8)
0039f5 940e 410d 	CALL __ASRD12
0039f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7D:
0039f8 93e0 3631 	STS  _X1,R30
0039fa 93f0 3632 	STS  _X1+1,R31
0039fc 9360 3633 	STS  _X1+2,R22
0039fe 9370 3634 	STS  _X1+3,R23
003a00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7E:
003a01 91e0 364d 	LDS  R30,_p
003a03 91f0 364e 	LDS  R31,_p+1
003a05 9160 364f 	LDS  R22,_p+2
003a07 9170 3650 	LDS  R23,_p+3
003a09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7F:
003a0a 91a0 364d 	LDS  R26,_p
003a0c 91b0 364e 	LDS  R27,_p+1
003a0e 9180 364f 	LDS  R24,_p+2
003a10 9190 3650 	LDS  R25,_p+3
003a12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x80:
003a13 e0e0      	LDI  R30,LOW(0)
003a14 e0f0      	LDI  R31,HIGH(0)
003a15 93fa      	ST   -Y,R31
003a16 93ea      	ST   -Y,R30
003a17 e0a0      	LDI  R26,LOW(0)
003a18 940e 3537 	CALL _twi_master_trans
003a1a e0e3      	LDI  R30,LOW(3)
003a1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x81:
003a1c e2e0      	LDI  R30,LOW(32)
003a1d 93ea      	ST   -Y,R30
003a1e e0ec      	LDI  R30,LOW(12)
003a1f 93ea      	ST   -Y,R30
003a20 e1e0      	LDI  R30,LOW(16)
003a21 93ea      	ST   -Y,R30
003a22 e4a0      	LDI  R26,LOW(64)
003a23 940c 15da 	JMP  _ad7705_init
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x82:
003a25 93fa      	ST   -Y,R31
003a26 93ea      	ST   -Y,R30
                +
003a27 ebe9     +LDI R30 , LOW ( 2 * _0x0 + ( 219 ) )
003a28 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 219 ) )
                 	__POINTW1FN _0x0,219
003a29 93fa      	ST   -Y,R31
003a2a 93ea      	ST   -Y,R30
003a2b 91e0 3153 	LDS  R30,_date1
003a2d 91f0 3154 	LDS  R31,_date1+1
003a2f 9160 3155 	LDS  R22,_date1+2
003a31 9170 3156 	LDS  R23,_date1+3
003a33 940e 426c 	CALL __PUTPARD1
003a35 e084      	LDI  R24,4
003a36 940e 3312 	CALL _sprintf
003a38 9628      	ADIW R28,8
003a39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x83:
003a3a 2fe1      	MOV  R30,R17
003a3b e0f0      	LDI  R31,0
003a3c 01de      	MOVW R26,R28
003a3d 9612      	ADIW R26,2
003a3e 0fae      	ADD  R26,R30
003a3f 1fbf      	ADC  R27,R31
003a40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x84:
003a41 e9e7      	LDI  R30,LOW(_file)
003a42 e3f3      	LDI  R31,HIGH(_file)
003a43 93fa      	ST   -Y,R31
003a44 93ea      	ST   -Y,R30
003a45 e0e4      	LDI  R30,LOW(_fNAME)
003a46 e3f0      	LDI  R31,HIGH(_fNAME)
003a47 93fa      	ST   -Y,R31
003a48 93ea      	ST   -Y,R30
003a49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x85:
003a4a 940e 2abf 	CALL _f_open
003a4c 93e0 3162 	STS  _res,R30
003a4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
003a4f 940e 2e45 	CALL _f_close
003a51 93e0 3162 	STS  _res,R30
003a53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x87:
003a54 2fe1      	MOV  R30,R17
003a55 e0f0      	LDI  R31,0
003a56 01de      	MOVW R26,R28
003a57 9611      	ADIW R26,1
003a58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x88:
003a59 93fa      	ST   -Y,R31
003a5a 93ea      	ST   -Y,R30
003a5b e080      	LDI  R24,0
003a5c 940e 3312 	CALL _sprintf
003a5e 9624      	ADIW R28,4
003a5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x89:
003a60 940e 0fe6 	CALL _monitor
003a62 e6a4      	LDI  R26,LOW(100)
003a63 e0b0      	LDI  R27,0
003a64 940c 3f1b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8A:
003a66 91a0 3162 	LDS  R26,_res
003a68 940c 1006 	JMP  _error
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8B:
003a6a e9e7      	LDI  R30,LOW(_file)
003a6b e3f3      	LDI  R31,HIGH(_file)
003a6c 93fa      	ST   -Y,R31
003a6d 93ea      	ST   -Y,R30
003a6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8C:
003a6f 93fa      	ST   -Y,R31
003a70 93ea      	ST   -Y,R30
003a71 ebe7      	LDI  R30,LOW(_path)
003a72 e3f5      	LDI  R31,HIGH(_path)
003a73 cebf      	RJMP SUBOPT_0x64
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8D:
003a74 93fa      	ST   -Y,R31
003a75 93ea      	ST   -Y,R30
003a76 e0ee      	LDI  R30,LOW(14)
003a77 e0f0      	LDI  R31,HIGH(14)
003a78 93fa      	ST   -Y,R31
003a79 93ea      	ST   -Y,R30
003a7a e6a3      	LDI  R26,LOW(_nbytes)
003a7b e3b1      	LDI  R27,HIGH(_nbytes)
003a7c 940e 2bf1 	CALL _f_write
003a7e 93e0 3162 	STS  _res,R30
003a80 30e0      	CPI  R30,0
003a81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x8E:
                +
003a82 e0e9     +LDI R30 , LOW ( 2 * _0x0 + ( 299 ) )
003a83 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 299 ) )
                 	__POINTW1FN _0x0,299
003a84 93fa      	ST   -Y,R31
003a85 93ea      	ST   -Y,R30
003a86 91e0 3163 	LDS  R30,_nbytes
003a88 91f0 3164 	LDS  R31,_nbytes+1
003a8a 2766      	CLR  R22
003a8b 2777      	CLR  R23
003a8c 940e 426c 	CALL __PUTPARD1
                +
003a8e e0ee     +LDI R30 , LOW ( 0xE )
003a8f e0f0     +LDI R31 , HIGH ( 0xE )
003a90 e060     +LDI R22 , BYTE3 ( 0xE )
003a91 e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
003a92 940e 426c 	CALL __PUTPARD1
003a94 e088      	LDI  R24,8
003a95 940e 3312 	CALL _sprintf
003a97 962c      	ADIW R28,12
003a98 940c 0fe6 	JMP  _monitor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8F:
003a9a e9a7      	LDI  R26,LOW(_file)
003a9b e3b3      	LDI  R27,HIGH(_file)
003a9c cfb2      	RJMP SUBOPT_0x86
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x90:
003a9d 93fa      	ST   -Y,R31
003a9e 93ea      	ST   -Y,R30
003a9f e0e4      	LDI  R30,LOW(_fNAME)
003aa0 e3f0      	LDI  R31,HIGH(_fNAME)
003aa1 ce91      	RJMP SUBOPT_0x64
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x91:
003aa2 ece4      	LDI  R30,LOW(_buffer)
003aa3 e3f5      	LDI  R31,HIGH(_buffer)
003aa4 93fa      	ST   -Y,R31
003aa5 93ea      	ST   -Y,R30
003aa6 e2e4      	LDI  R30,LOW(36)
003aa7 e0f0      	LDI  R31,HIGH(36)
003aa8 93fa      	ST   -Y,R31
003aa9 93ea      	ST   -Y,R30
003aaa e6a3      	LDI  R26,LOW(_nbytes)
003aab e3b1      	LDI  R27,HIGH(_nbytes)
003aac 940e 2bf1 	CALL _f_write
003aae 93e0 3162 	STS  _res,R30
003ab0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x92:
003ab1 91a0 36b8 	LDS  R26,_RESULT_sr
003ab3 91b0 36b9 	LDS  R27,_RESULT_sr+1
003ab5 9180 36ba 	LDS  R24,_RESULT_sr+2
003ab7 9190 36bb 	LDS  R25,_RESULT_sr+3
003ab9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x93:
003aba 93ed      	ST   X+,R30
003abb 93fc      	ST   X,R31
003abc 91e0 3055 	LDS  R30,_nn
003abe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x94:
003abf e0f0      	LDI  R31,0
003ac0 0fee      	LSL  R30
003ac1 1fff      	ROL  R31
003ac2 0fae      	ADD  R26,R30
003ac3 1fbf      	ADC  R27,R31
003ac4 940e 423b 	CALL __GETW1P
003ac6 0de0      	ADD  R30,R0
003ac7 1df1      	ADC  R31,R1
003ac8 01db      	MOVW R26,R22
003ac9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x95:
003aca 91e0 3055 	LDS  R30,_nn
003acc 5fef      	SUBI R30,-LOW(1)
003acd 93e0 3055 	STS  _nn,R30
003acf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x96:
003ad0 5ee1      	SUBI R30,LOW(993)
003ad1 40f3      	SBCI R31,HIGH(993)
003ad2 2766      	CLR  R22
003ad3 2777      	CLR  R23
003ad4 940e 3f91 	CALL __CDF1
003ad6 01df      	MOVW R26,R30
003ad7 01cb      	MOVW R24,R22
                +
003ad8 eced     +LDI R30 , LOW ( 0x419ECCCD )
003ad9 ecfc     +LDI R31 , HIGH ( 0x419ECCCD )
003ada e96e     +LDI R22 , BYTE3 ( 0x419ECCCD )
003adb e471     +LDI R23 , BYTE4 ( 0x419ECCCD )
                 	__GETD1N 0x419ECCCD
003adc 940e 4069 	CALL __DIVF21
                +
003ade e0a0     +LDI R26 , LOW ( 0x43888000 )
003adf e8b0     +LDI R27 , HIGH ( 0x43888000 )
003ae0 e888     +LDI R24 , BYTE3 ( 0x43888000 )
003ae1 e493     +LDI R25 , BYTE4 ( 0x43888000 )
                 	__GETD2N 0x43888000
003ae2 940e 3fcb 	CALL __ADDF12
                +
003ae4 e0a0     +LDI R26 , LOW ( 0x41200000 )
003ae5 e0b0     +LDI R27 , HIGH ( 0x41200000 )
003ae6 e280     +LDI R24 , BYTE3 ( 0x41200000 )
003ae7 e491     +LDI R25 , BYTE4 ( 0x41200000 )
                 	__GETD2N 0x41200000
003ae8 940e 401b 	CALL __MULF12
003aea 940e 3f58 	CALL __CFD1U
003aec 012f      	MOVW R4,R30
003aed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x97:
003aee 91e0 36b4 	LDS  R30,_RESULT
003af0 91f0 36b5 	LDS  R31,_RESULT+1
003af2 940e 4141 	CALL __ASRW8
003af4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x98:
003af5 91e0 3055 	LDS  R30,_nn
003af7 e6ae      	LDI  R26,LOW(_adca_SD)
003af8 e3b0      	LDI  R27,HIGH(_adca_SD)
003af9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x99:
003afa e0f0      	LDI  R31,0
003afb 0fee      	LSL  R30
003afc 1fff      	ROL  R31
003afd 0fae      	ADD  R26,R30
003afe 1fbf      	ADC  R27,R31
003aff 940e 423b 	CALL __GETW1P
003b01 940e 4133 	CALL __LSRW4
003b03 01d0      	MOVW R26,R0
003b04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9A:
003b05 e0f0      	LDI  R31,0
003b06 0fee      	LSL  R30
003b07 1fff      	ROL  R31
003b08 0fae      	ADD  R26,R30
003b09 1fbf      	ADC  R27,R31
003b0a e0e0      	LDI  R30,LOW(0)
003b0b e0f0      	LDI  R31,HIGH(0)
003b0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x9B:
003b0d e3a2      	LDI  R26,LOW(50)
003b0e e0b0      	LDI  R27,0
003b0f 940c 3f1b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9C:
003b11 940e 0fe6 	CALL _monitor
003b13 cff9      	RJMP SUBOPT_0x9B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9D:
003b14 e0b0      	LDI  R27,0
003b15 940e 3f1b 	CALL _delay_ms
003b17 91e0 0684 	LDS  R30,1668
003b19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x9E:
003b1a 91e0 0684 	LDS  R30,1668
003b1c 7eef      	ANDI R30,0xEF
003b1d 93e0 0684 	STS  1668,R30
003b1f cfed      	RJMP SUBOPT_0x9B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9F:
003b20 91e0 0684 	LDS  R30,1668
003b22 61e0      	ORI  R30,0x10
003b23 93e0 0684 	STS  1668,R30
003b25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA0:
003b26 e0e1      	LDI  R30,LOW(1)
003b27 93e0 0605 	STS  1541,R30
003b29 e0aa      	LDI  R26,LOW(10)
003b2a e0b0      	LDI  R27,0
003b2b 940c 3f1b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA1:
003b2d 91a0 3659 	LDS  R26,_Tempf
003b2f 91b0 365a 	LDS  R27,_Tempf+1
003b31 9180 365b 	LDS  R24,_Tempf+2
003b33 9190 365c 	LDS  R25,_Tempf+3
003b35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA2:
003b36 de72      	RCALL SUBOPT_0x73
003b37 940e 401b 	CALL __MULF12
003b39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA3:
003b3a decf      	RCALL SUBOPT_0x7F
                +
003b3b e0ea     +LDI R30 , LOW ( 0xA )
003b3c e0f0     +LDI R31 , HIGH ( 0xA )
003b3d e060     +LDI R22 , BYTE3 ( 0xA )
003b3e e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
003b3f 940e 41e7 	CALL __DIVD21
003b41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA4:
                +
003b42 91e0 369e+LDS R30 , _U1out + ( 1 )
                 	__GETB1MN _U1out,1
003b44 73ef      	ANDI R30,LOW(0x3F)
                +
003b45 93e0 369e+STS _U1out + ( 1 ) , R30
                 	__PUTB1MN _U1out,1
                +
003b47 91e0 369e+LDS R30 , _U1out + ( 1 )
                 	__GETB1MN _U1out,1
003b49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA5:
003b4a e0f0      	LDI  R31,0
003b4b 940e 415d 	CALL __CWD1
003b4d 01df      	MOVW R26,R30
003b4e 01cb      	MOVW R24,R22
003b4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA6:
003b50 940e 423f 	CALL __GETD1P
                +
003b52 83e9     +STD Y + 1 , R30
003b53 83fa     +STD Y + 1 + 1 , R31
003b54 836b     +STD Y + 1 + 2 , R22
003b55 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
003b56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA7:
                +
003b57 81ed     +LDD R30 , Y + 5
003b58 81fe     +LDD R31 , Y + 5 + 1
003b59 816f     +LDD R22 , Y + 5 + 2
003b5a 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
003b5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA8:
                +
003b5c 81a9     +LDD R26 , Y + 1
003b5d 81ba     +LDD R27 , Y + 1 + 1
003b5e 818b     +LDD R24 , Y + 1 + 2
003b5f 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
003b60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA9:
003b61 85e9      	LDD  R30,Y+9
003b62 85fa      	LDD  R31,Y+9+1
003b63 81a1      	LDD  R26,Z+1
003b64 93aa      	ST   -Y,R26
003b65 85ea      	LDD  R30,Y+10
003b66 85fb      	LDD  R31,Y+10+1
003b67 96f2      	ADIW R30,50
003b68 93fa      	ST   -Y,R31
003b69 93ea      	ST   -Y,R30
003b6a dc8a      	RCALL SUBOPT_0x3C
003b6b 940e 426c 	CALL __PUTPARD1
003b6d e0a1      	LDI  R26,LOW(1)
003b6e 940c 1f2f 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAA:
                +
003b70 a1a2     +LDD R26 , Z + 34
003b71 a1b3     +LDD R27 , Z + 34 + 1
003b72 a184     +LDD R24 , Z + 34 + 2
003b73 a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
003b74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xAB:
003b75 93fa      	ST   -Y,R31
003b76 93ea      	ST   -Y,R30
003b77 dc78      	RCALL SUBOPT_0x3B
003b78 940e 426c 	CALL __PUTPARD1
003b7a e0a1      	LDI  R26,LOW(1)
003b7b 940e 1ecb 	CALL _disk_read
003b7d 30e0      	CPI  R30,0
003b7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xAC:
003b7f 93fa      	ST   -Y,R31
003b80 93ea      	ST   -Y,R30
                +
003b81 e0a0     +LDI R26 , LOW ( 0x0 )
003b82 e0b0     +LDI R27 , HIGH ( 0x0 )
003b83 e080     +LDI R24 , BYTE3 ( 0x0 )
003b84 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
003b85 940c 21ed 	JMP  _move_window_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAD:
003b87 db93      	RCALL SUBOPT_0x1C
003b88 940e 424a 	CALL __PUTDP1
003b8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xAE:
003b8b 940e 4267 	CALL __PUTDZ20
003b8d 81e9      	LDD  R30,Y+1
003b8e 81fa      	LDD  R31,Y+1+1
003b8f 96f2      	ADIW R30,50
003b90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xAF:
003b91 940e 423f 	CALL __GETD1P
003b93 01d0      	MOVW R26,R0
003b94 940e 424a 	CALL __PUTDP1
003b96 81e9      	LDD  R30,Y+1
003b97 81fa      	LDD  R31,Y+1+1
003b98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB0:
                +
003b99 89a2     +LDD R26 , Z + 18
003b9a 89b3     +LDD R27 , Z + 18 + 1
003b9b 8984     +LDD R24 , Z + 18 + 2
003b9c 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
003b9d 940e 4271 	CALL __PUTPARD2
003b9f e0a1      	LDI  R26,LOW(1)
003ba0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xB1:
                +
003ba1 30a2     +CPI R26 , LOW ( 0x2 )
003ba2 e0e0     +LDI R30 , HIGH ( 0x2 )
003ba3 07be     +CPC R27 , R30
003ba4 e0e0     +LDI R30 , BYTE3 ( 0x2 )
003ba5 078e     +CPC R24 , R30
003ba6 e0e0     +LDI R30 , BYTE4 ( 0x2 )
003ba7 079e     +CPC R25 , R30
                 	__CPD2N 0x2
003ba8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB2:
003ba9 940e 423f 	CALL __GETD1P
003bab cc2c      	RJMP SUBOPT_0x37
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xB3:
003bac 85ec      	LDD  R30,Y+12
003bad 85fd      	LDD  R31,Y+12+1
003bae 93fa      	ST   -Y,R31
003baf 93ea      	ST   -Y,R30
003bb0 01d9      	MOVW R26,R18
003bb1 e0e0      	LDI  R30,LOW(512)
003bb2 e0f2      	LDI  R31,HIGH(512)
003bb3 940e 41af 	CALL __DIVW21U
                +
003bb5 81ae     +LDD R26 , Y + 6
003bb6 81bf     +LDD R27 , Y + 6 + 1
003bb7 8588     +LDD R24 , Y + 6 + 2
003bb8 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
003bb9 2766      	CLR  R22
003bba 2777      	CLR  R23
003bbb 940e 40d7 	CALL __ADDD21
003bbd 940e 21ed 	CALL _move_window_G101
003bbf 30e0      	CPI  R30,0
003bc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB4:
003bc1 85ac      	LDD  R26,Y+12
003bc2 85bd      	LDD  R27,Y+12+1
003bc3 96d2      	ADIW R26,50
003bc4 01f9      	MOVW R30,R18
003bc5 70f1      	ANDI R31,HIGH(0x1FF)
003bc6 0fae      	ADD  R26,R30
003bc7 1fbf      	ADC  R27,R31
003bc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB5:
003bc9 85ec      	LDD  R30,Y+12
003bca 85fd      	LDD  R31,Y+12+1
003bcb 93fa      	ST   -Y,R31
003bcc 93ea      	ST   -Y,R30
                +
003bcd 85aa     +LDD R26 , Y + 10
003bce 85bb     +LDD R27 , Y + 10 + 1
003bcf 858c     +LDD R24 , Y + 10 + 2
003bd0 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
003bd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB6:
                +
003bd2 e0e0     +LDI R30 , LOW ( 0x100 )
003bd3 e0f1     +LDI R31 , HIGH ( 0x100 )
003bd4 e060     +LDI R22 , BYTE3 ( 0x100 )
003bd5 e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
003bd6 940e 41c2 	CALL __DIVD21U
003bd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB7:
                +
003bd9 81ae     +LDD R26 , Y + 6
003bda 81bf     +LDD R27 , Y + 6 + 1
003bdb 8588     +LDD R24 , Y + 6 + 2
003bdc 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
003bdd 940e 40d7 	CALL __ADDD21
003bdf 940e 21ed 	CALL _move_window_G101
003be1 30e0      	CPI  R30,0
003be2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB8:
003be3 940e 4191 	CALL __MULB1W2U
003be5 70f1      	ANDI R31,HIGH(0x1FF)
003be6 85ac      	LDD  R26,Y+12
003be7 85bd      	LDD  R27,Y+12+1
003be8 96d2      	ADIW R26,50
003be9 0fae      	ADD  R26,R30
003bea 1fbf      	ADC  R27,R31
003beb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB9:
003bec 940e 423b 	CALL __GETW1P
003bee 2766      	CLR  R22
003bef 2777      	CLR  R23
003bf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBA:
                +
003bf1 e8e0     +LDI R30 , LOW ( 0x80 )
003bf2 e0f0     +LDI R31 , HIGH ( 0x80 )
003bf3 e060     +LDI R22 , BYTE3 ( 0x80 )
003bf4 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
003bf5 940e 41c2 	CALL __DIVD21U
003bf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBB:
                +
003bf8 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
003bf9 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
003bfa ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
003bfb ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
003bfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBC:
                +
003bfd 85ae     +LDD R26 , Y + 14
003bfe 85bf     +LDD R27 , Y + 14 + 1
003bff 8988     +LDD R24 , Y + 14 + 2
003c00 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
003c01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xBD:
003c02 89ea      	LDD  R30,Y+18
003c03 89fb      	LDD  R31,Y+18+1
003c04 93fa      	ST   -Y,R31
003c05 93ea      	ST   -Y,R30
003c06 01d8      	MOVW R26,R16
003c07 e0e0      	LDI  R30,LOW(512)
003c08 e0f2      	LDI  R31,HIGH(512)
003c09 940e 41af 	CALL __DIVW21U
003c0b dc1a      	RCALL SUBOPT_0x41
003c0c 2766      	CLR  R22
003c0d 2777      	CLR  R23
003c0e 940e 40d7 	CALL __ADDD21
003c10 940e 21ed 	CALL _move_window_G101
003c12 2f5e      	MOV  R21,R30
003c13 3050      	CPI  R21,0
003c14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBE:
003c15 89aa      	LDD  R26,Y+18
003c16 89bb      	LDD  R27,Y+18+1
003c17 96d2      	ADIW R26,50
003c18 01f8      	MOVW R30,R16
003c19 70f1      	ANDI R31,HIGH(0x1FF)
003c1a 0fea      	ADD  R30,R26
003c1b 1ffb      	ADC  R31,R27
003c1c 019f      	MOVW R18,R30
003c1d 85ee      	LDD  R30,Y+14
003c1e 70e1      	ANDI R30,LOW(0x1)
003c1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xBF:
                +
003c20 85aa     +LDD R26 , Y + 10
003c21 85bb     +LDD R27 , Y + 10 + 1
003c22 858c     +LDD R24 , Y + 10 + 2
003c23 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
003c24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC0:
003c25 89ea      	LDD  R30,Y+18
003c26 89fb      	LDD  R31,Y+18+1
003c27 93fa      	ST   -Y,R31
003c28 93ea      	ST   -Y,R30
003c29 cc12      	RJMP SUBOPT_0x45
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC1:
003c2a dbfb      	RCALL SUBOPT_0x41
003c2b 940e 40d7 	CALL __ADDD21
003c2d 940e 21ed 	CALL _move_window_G101
003c2f 2f5e      	MOV  R21,R30
003c30 3050      	CPI  R21,0
003c31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC2:
003c32 940e 4191 	CALL __MULB1W2U
003c34 70f1      	ANDI R31,HIGH(0x1FF)
003c35 89aa      	LDD  R26,Y+18
003c36 89bb      	LDD  R27,Y+18+1
003c37 96d2      	ADIW R26,50
003c38 0fea      	ADD  R30,R26
003c39 1ffb      	ADC  R31,R27
003c3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC3:
                +
003c3b 81ad     +LDD R26 , Y + 5
003c3c 81be     +LDD R27 , Y + 5 + 1
003c3d 818f     +LDD R24 , Y + 5 + 2
003c3e 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
003c3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC4:
003c40 85a9      	LDD  R26,Y+9
003c41 85ba      	LDD  R27,Y+9+1
003c42 965e      	ADIW R26,30
003c43 940e 423f 	CALL __GETD1P
003c45 dff5      	RCALL SUBOPT_0xC3
003c46 940e 42df 	CALL __CPD21
003c48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC5:
                +
003c49 81e9     +LDD R30 , Y + 1
003c4a 81fa     +LDD R31 , Y + 1 + 1
003c4b 816b     +LDD R22 , Y + 1 + 2
003c4c 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
003c4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xC6:
                +
003c4e 30a1     +CPI R26 , LOW ( 0x1 )
003c4f e0e0     +LDI R30 , HIGH ( 0x1 )
003c50 07be     +CPC R27 , R30
003c51 e0e0     +LDI R30 , BYTE3 ( 0x1 )
003c52 078e     +CPC R24 , R30
003c53 e0e0     +LDI R30 , BYTE4 ( 0x1 )
003c54 079e     +CPC R25 , R30
                 	__CPD2N 0x1
003c55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0xC7:
                +
003c56 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
003c57 efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
003c58 07be     +CPC R27 , R30
003c59 efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
003c5a 078e     +CPC R24 , R30
003c5b efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
003c5c 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
003c5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC8:
                +
003c5e e0a0     +LDI R26 , LOW ( 0x0 )
003c5f e0b0     +LDI R27 , HIGH ( 0x0 )
003c60 e080     +LDI R24 , BYTE3 ( 0x0 )
003c61 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
003c62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC9:
                +
003c63 85a6     +LDD R26 , Z + 14
003c64 85b7     +LDD R27 , Z + 14 + 1
003c65 8980     +LDD R24 , Z + 14 + 2
003c66 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
003c67 cfee      	RJMP SUBOPT_0xC7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xCA:
003c68 85a9      	LDD  R26,Y+9
003c69 85ba      	LDD  R27,Y+9+1
003c6a 961e      	ADIW R26,14
003c6b 940e 4245 	CALL __GETD1P_INC
003c6d db0f      	RCALL SUBOPT_0x29
003c6e 940e 424f 	CALL __PUTDP1_DEC
003c70 85a9      	LDD  R26,Y+9
003c71 85ba      	LDD  R27,Y+9+1
003c72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xCB:
                +
003c73 83ed     +STD Y + 5 , R30
003c74 83fe     +STD Y + 5 + 1 , R31
003c75 836f     +STD Y + 5 + 2 , R22
003c76 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
003c77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xCC:
003c78 db36      	RCALL SUBOPT_0x30
003c79 940e 42d0 	CALL __CPD10
003c7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xCD:
                +
003c7c 81ac     +LDD R26 , Y + 4
003c7d 81bd     +LDD R27 , Y + 4 + 1
003c7e 818e     +LDD R24 , Y + 4 + 2
003c7f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
003c80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xCE:
003c81 940e 4258 	CALL __GETD1S0
003c83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xCF:
003c84 89ec      	LDD  R30,Y+20
003c85 89fd      	LDD  R31,Y+20+1
003c86 93fa      	ST   -Y,R31
003c87 93ea      	ST   -Y,R30
003c88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD0:
                +
003c89 89aa     +LDD R26 , Y + 18
003c8a 89bb     +LDD R27 , Y + 18 + 1
003c8b 898c     +LDD R24 , Y + 18 + 2
003c8c 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
003c8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD1:
003c8e db66      	RCALL SUBOPT_0x3C
003c8f db96      	RCALL SUBOPT_0x41
003c90 940e 42da 	CALL __CPD12
003c92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD2:
003c93 db2b      	RCALL SUBOPT_0x33
003c94 db96      	RCALL SUBOPT_0x42
003c95 940e 42d0 	CALL __CPD10
003c97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD3:
                +
003c98 85ea     +LDD R30 , Y + 10
003c99 85fb     +LDD R31 , Y + 10 + 1
003c9a 856c     +LDD R22 , Y + 10 + 2
003c9b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
003c9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD4:
                +
003c9d 89ea     +LDD R30 , Y + 18
003c9e 89fb     +LDD R31 , Y + 18 + 1
003c9f 896c     +LDD R22 , Y + 18 + 2
003ca0 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
003ca1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD5:
003ca2 940e 4276 	CALL __SWAPD12
003ca4 940e 40dc 	CALL __SUBD12
003ca6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD6:
003ca7 940e 425d 	CALL __GETD2S0
003ca9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD7:
003caa 940e 423f 	CALL __GETD1P
                +
003cac 83ea     +STD Y + 2 , R30
003cad 83fb     +STD Y + 2 + 1 , R31
003cae 836c     +STD Y + 2 + 2 , R22
003caf 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
003cb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xD8:
                +
003cb1 81aa     +LDD R26 , Y + 2
003cb2 81bb     +LDD R27 , Y + 2 + 1
003cb3 818c     +LDD R24 , Y + 2 + 2
003cb4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
003cb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xD9:
003cb6 85a8      	LDD  R26,Y+8
003cb7 85b9      	LDD  R27,Y+8+1
003cb8 940e 423b 	CALL __GETW1P
003cba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDA:
003cbb 967e      	ADIW R30,30
003cbc 01df      	MOVW R26,R30
003cbd 940e 423f 	CALL __GETD1P
003cbf dff1      	RCALL SUBOPT_0xD8
003cc0 940e 42df 	CALL __CPD21
003cc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDB:
                +
003cc3 81ea     +LDD R30 , Y + 2
003cc4 81fb     +LDD R31 , Y + 2 + 1
003cc5 816c     +LDD R22 , Y + 2 + 2
003cc6 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
003cc7 940e 42d0 	CALL __CPD10
003cc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xDC:
                +
003cca 81ea     +LDD R30 , Y + 2
003ccb 81fb     +LDD R31 , Y + 2 + 1
003ccc 816c     +LDD R22 , Y + 2 + 2
003ccd 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
003cce 85a8     +LDD R26 , Y + 8
003ccf 85b9     +LDD R27 , Y + 8 + 1
003cd0 961a     +ADIW R26 , 10
003cd1 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 8,10
003cd3 cfe2      	RJMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDD:
                +
003cd4 83ea     +STD Y + 2 , R30
003cd5 83fb     +STD Y + 2 + 1 , R31
003cd6 836c     +STD Y + 2 + 2 , R22
003cd7 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
003cd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xDE:
003cd9 2766      	CLR  R22
003cda 2777      	CLR  R23
003cdb 940e 40d2 	CALL __ADDD12
003cdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xDF:
003cde 70ef      	ANDI R30,LOW(0xF)
003cdf 70f0      	ANDI R31,HIGH(0xF)
003ce0 0fee      	LSL  R30
003ce1 940e 4125 	CALL __LSLW4
003ce3 0fea      	ADD  R30,R26
003ce4 1ffb      	ADC  R31,R27
003ce5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE0:
003ce6 940e 423f 	CALL __GETD1P
003ce8 940e 42d0 	CALL __CPD10
003cea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xE1:
003ceb 85a9      	LDD  R26,Y+9
003cec 85ba      	LDD  R27,Y+9+1
003ced 940e 423b 	CALL __GETW1P
003cef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE2:
003cf0 93fa      	ST   -Y,R31
003cf1 93ea      	ST   -Y,R30
003cf2 85eb      	LDD  R30,Y+11
003cf3 85fc      	LDD  R31,Y+11+1
                +
003cf4 85a2     +LDD R26 , Z + 10
003cf5 85b3     +LDD R27 , Z + 10 + 1
003cf6 8584     +LDD R24 , Z + 10 + 2
003cf7 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
003cf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE3:
003cf9 dade      	RCALL SUBOPT_0x37
003cfa cafa      	RJMP SUBOPT_0x3C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE4:
003cfb 93fa      	ST   -Y,R31
003cfc 93ea      	ST   -Y,R30
                +
003cfd 81ae     +LDD R26 , Y + 6
003cfe 81bf     +LDD R27 , Y + 6 + 1
003cff 8588     +LDD R24 , Y + 6 + 2
003d00 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
003d01 940c 24ea 	JMP  _clust2sect
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE5:
003d03 93ba      	ST   -Y,R27
003d04 93aa      	ST   -Y,R26
003d05 940e 42e6 	CALL __SAVELOCR4
003d07 81ec      	LDD  R30,Y+4
003d08 81fd      	LDD  R31,Y+4+1
003d09 93fa      	ST   -Y,R31
003d0a 93ea      	ST   -Y,R30
003d0b e0a0      	LDI  R26,LOW(0)
003d0c e0b0      	LDI  R27,0
003d0d 940e 2522 	CALL _dir_seek_G101
003d0f 2f1e      	MOV  R17,R30
003d10 3010      	CPI  R17,0
003d11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xE6:
003d12 81ac      	LDD  R26,Y+4
003d13 81bd      	LDD  R27,Y+4+1
003d14 940e 423b 	CALL __GETW1P
003d16 93fa      	ST   -Y,R31
003d17 93ea      	ST   -Y,R30
003d18 81ee      	LDD  R30,Y+6
003d19 81ff      	LDD  R31,Y+6+1
                +
003d1a 85a6     +LDD R26 , Z + 14
003d1b 85b7     +LDD R27 , Z + 14 + 1
003d1c 8980     +LDD R24 , Z + 14 + 2
003d1d 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
003d1e 940e 21ed 	CALL _move_window_G101
003d20 2f1e      	MOV  R17,R30
003d21 3010      	CPI  R17,0
003d22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE7:
003d23 933a      	ST   -Y,R19
003d24 932a      	ST   -Y,R18
003d25 81ee      	LDD  R30,Y+6
003d26 81ff      	LDD  R31,Y+6+1
003d27 89a4      	LDD  R26,Z+20
003d28 89b5      	LDD  R27,Z+21
003d29 93ba      	ST   -Y,R27
003d2a 93aa      	ST   -Y,R26
003d2b e0ab      	LDI  R26,LOW(11)
003d2c e0b0      	LDI  R27,0
003d2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE8:
003d2e 940e 423b 	CALL __GETW1P
003d30 83ee      	STD  Y+6,R30
003d31 83ff      	STD  Y+6+1,R31
003d32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE9:
003d33 85e8      	LDD  R30,Y+8
003d34 85f9      	LDD  R31,Y+8+1
003d35 81ae      	LDD  R26,Y+6
003d36 81bf      	LDD  R27,Y+6+1
003d37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xEA:
003d38 85e8      	LDD  R30,Y+8
003d39 85f9      	LDD  R31,Y+8+1
003d3a 9631      	ADIW R30,1
003d3b 87e8      	STD  Y+8,R30
003d3c 87f9      	STD  Y+8+1,R31
003d3d 9731      	SBIW R30,1
003d3e 81ae      	LDD  R26,Y+6
003d3f 81bf      	LDD  R27,Y+6+1
003d40 0fae      	ADD  R26,R30
003d41 1fbf      	ADC  R27,R31
003d42 910c      	LD   R16,X
003d43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xEB:
003d44 2fe2      	MOV  R30,R18
003d45 5f2f      	SUBI R18,-1
003d46 e0f0      	LDI  R31,0
003d47 0fe4      	ADD  R30,R20
003d48 1ff5      	ADC  R31,R21
003d49 8300      	ST   Z,R16
003d4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xEC:
003d4b 0fea      	ADD  R30,R26
003d4c 1ffb      	ADC  R31,R27
003d4d 85ab      	LDD  R26,Y+11
003d4e 85bc      	LDD  R27,Y+11+1
003d4f 93ed      	ST   X+,R30
003d50 93fc      	ST   X,R31
003d51 3201      	CPI  R16,33
003d52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xED:
                +
003d53 81ae     +LDD R26 , Y + 6
003d54 81bf     +LDD R27 , Y + 6 + 1
003d55 9616     +ADIW R26 , 6
003d56 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 6,6
003d58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xEE:
003d59 81ee      	LDD  R30,Y+6
003d5a 81ff      	LDD  R31,Y+6+1
003d5b 93fa      	ST   -Y,R31
003d5c 93ea      	ST   -Y,R30
003d5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xEF:
003d5e e0e0      	LDI  R30,LOW(0)
003d5f e0f0      	LDI  R31,HIGH(0)
003d60 93ed      	ST   X+,R30
003d61 93fc      	ST   X,R31
003d62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF0:
003d63 01d9      	MOVW R26,R18
003d64 9654      	ADIW R26,20
003d65 ce86      	RJMP SUBOPT_0xB9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF1:
003d66 01d9      	MOVW R26,R18
003d67 965a      	ADIW R26,26
003d68 940e 423b 	CALL __GETW1P
003d6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF2:
003d6b 2766      	CLR  R22
003d6c 2777      	CLR  R23
003d6d 940e 40eb 	CALL __ORD12
003d6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF3:
003d70 940e 426c 	CALL __PUTPARD1
003d72 e0a1      	LDI  R26,LOW(1)
003d73 940e 1ecb 	CALL _disk_read
003d75 30e0      	CPI  R30,0
003d76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF4:
003d77 96f2      	ADIW R30,50
003d78 50e2      	SUBI R30,LOW(-510)
003d79 4ffe      	SBCI R31,HIGH(-510)
003d7a 01df      	MOVW R26,R30
003d7b 940e 423b 	CALL __GETW1P
003d7d 35e5      	CPI  R30,LOW(0xAA55)
003d7e eaaa      	LDI  R26,HIGH(0xAA55)
003d7f 07fa      	CPC  R31,R26
003d80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xF5:
003d81 940e 423f 	CALL __GETD1P
                +
003d83 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
003d84 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
003d85 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
003d86 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
003d87 34e6     +CPI R30 , LOW ( 0x544146 )
003d88 e4a1     +LDI R26 , HIGH ( 0x544146 )
003d89 07fa     +CPC R31 , R26
003d8a e5a4     +LDI R26 , BYTE3 ( 0x544146 )
003d8b 076a     +CPC R22 , R26
003d8c e0a0     +LDI R26 , BYTE4 ( 0x544146 )
003d8d 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
003d8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF6:
003d8f eca1      	LDI  R26,LOW(_FatFs_G101)
003d90 e3b6      	LDI  R27,HIGH(_FatFs_G101)
003d91 e0f0      	LDI  R31,0
003d92 0fee      	LSL  R30
003d93 1fff      	ROL  R31
003d94 0fae      	ADD  R26,R30
003d95 1fbf      	ADC  R27,R31
003d96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF7:
                +
003d97 8bea     +STD Y + 18 , R30
003d98 8bfb     +STD Y + 18 + 1 , R31
003d99 8b6c     +STD Y + 18 + 2 , R22
003d9a 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
003d9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF8:
003d9c 81ae      	LDD  R26,Y+6
003d9d 81bf      	LDD  R27,Y+6+1
003d9e 5ca0      	SUBI R26,LOW(-64)
003d9f 4fbf      	SBCI R27,HIGH(-64)
003da0 940e 423b 	CALL __GETW1P
003da2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF9:
                +
003da3 89ae     +LDD R26 , Y + 22
003da4 89bf     +LDD R27 , Y + 22 + 1
003da5 8d88     +LDD R24 , Y + 22 + 2
003da6 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
003da7 cf31      	RJMP SUBOPT_0xDE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xFA:
003da8 81ee      	LDD  R30,Y+6
003da9 81ff      	LDD  R31,Y+6+1
003daa 85a0      	LDD  R26,Z+8
003dab 85b1      	LDD  R27,Z+9
003dac 01fd      	MOVW R30,R26
003dad 940e 4133 	CALL __LSRW4
003daf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xFB:
                +
003db0 87ea     +STD Y + 10 , R30
003db1 87fb     +STD Y + 10 + 1 , R31
003db2 876c     +STD Y + 10 + 2 , R22
003db3 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
003db4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFC:
003db5 81ee      	LDD  R30,Y+6
003db6 81ff      	LDD  R31,Y+6+1
003db7 ddb8      	RCALL SUBOPT_0xAA
003db8 dee4      	RCALL SUBOPT_0xD4
003db9 940e 40d2 	CALL __ADDD12
003dbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xFD:
003dbc 89ae      	LDD  R26,Y+22
003dbd 89bf      	LDD  R27,Y+22+1
003dbe 940e 423b 	CALL __GETW1P
003dc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xFE:
003dc1 93fa      	ST   -Y,R31
003dc2 93ea      	ST   -Y,R30
003dc3 8de8      	LDD  R30,Y+24
003dc4 8df9      	LDD  R31,Y+24+1
003dc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xFF:
003dc6 81a2      	LDD  R26,Z+2
003dc7 81b3      	LDD  R27,Z+3
003dc8 940e 2a73 	CALL _validate_G101
003dca 2f1e      	MOV  R17,R30
003dcb 3010      	CPI  R17,0
003dcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x100:
003dcd 89ae      	LDD  R26,Y+22
003dce 89bf      	LDD  R27,Y+22+1
003dcf 961a      	ADIW R26,10
003dd0 940e 423f 	CALL __GETD1P
003dd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x101:
003dd3 89ee      	LDD  R30,Y+22
003dd4 89ff      	LDD  R31,Y+22+1
                +
003dd5 81a6     +LDD R26 , Z + 6
003dd6 81b7     +LDD R27 , Z + 6 + 1
003dd7 8580     +LDD R24 , Z + 6 + 2
003dd8 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
003dd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x102:
003dda 93fa      	ST   -Y,R31
003ddb 93ea      	ST   -Y,R30
003ddc de81      	RCALL SUBOPT_0xC8
003ddd 940c 2431 	JMP  _create_chain_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x103:
003ddf 89ae      	LDD  R26,Y+22
003de0 89bf      	LDD  R27,Y+22+1
003de1 9614      	ADIW R26,4
003de2 91ec      	LD   R30,X
003de3 68e0      	ORI  R30,0x80
003de4 93ec      	ST   X,R30
003de5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x104:
003de6 81e1      	LDD  R30,Z+1
003de7 93ea      	ST   -Y,R30
003de8 89ef      	LDD  R30,Y+23
003de9 8df8      	LDD  R31,Y+23+1
003dea 96b0      	ADIW R30,32
003deb 93fa      	ST   -Y,R31
003dec 93ea      	ST   -Y,R30
003ded 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x105:
                +
003dee 89a6     +LDD R26 , Z + 22
003def 89b7     +LDD R27 , Z + 22 + 1
003df0 8d80     +LDD R24 , Z + 22 + 2
003df1 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
003df2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x106:
003df3 940e 4271 	CALL __PUTPARD2
003df5 e0a1      	LDI  R26,LOW(1)
003df6 940e 1f2f 	CALL _disk_write
003df8 30e0      	CPI  R30,0
003df9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x107:
003dfa 89ae      	LDD  R26,Y+22
003dfb 89bf      	LDD  R27,Y+22+1
003dfc 9614      	ADIW R26,4
003dfd 91ec      	LD   R30,X
003dfe 7bef      	ANDI R30,0xBF
003dff 93ec      	ST   X,R30
003e00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x108:
003e01 89ee      	LDD  R30,Y+22
003e02 89ff      	LDD  R31,Y+22+1
003e03 81e5      	LDD  R30,Z+5
003e04 e0f0      	LDI  R31,0
003e05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x109:
003e06 89ee      	LDD  R30,Y+22
003e07 89ff      	LDD  R31,Y+22+1
003e08 dfe5      	RCALL SUBOPT_0x105
003e09 c9e6      	RJMP SUBOPT_0x3B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10A:
003e0a 89ae      	LDD  R26,Y+22
003e0b 89bf      	LDD  R27,Y+22+1
003e0c 9616      	ADIW R26,6
003e0d 940e 423b 	CALL __GETW1P
003e0f 70f1      	ANDI R31,HIGH(0x1FF)
003e10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10B:
003e11 85e8      	LDD  R30,Y+8
003e12 85f9      	LDD  R31,Y+8+1
003e13 93fa      	ST   -Y,R31
003e14 93ea      	ST   -Y,R30
003e15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10C:
003e16 9636      	ADIW R30,6
003e17 010f      	MOVW R0,R30
003e18 01df      	MOVW R26,R30
003e19 940e 423f 	CALL __GETD1P
003e1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10D:
003e1c 89ad      	LDD  R26,Y+21
003e1d 89be      	LDD  R27,Y+21+1
003e1e 940e 423b 	CALL __GETW1P
003e20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10E:
003e21 89ad      	LDD  R26,Y+21
003e22 89be      	LDD  R27,Y+21+1
003e23 961a      	ADIW R26,10
003e24 940e 423f 	CALL __GETD1P
003e26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10F:
                +
003e27 89a9     +LDD R26 , Y + 17
003e28 89ba     +LDD R27 , Y + 17 + 1
003e29 898b     +LDD R24 , Y + 17 + 2
003e2a 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
003e2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x110:
                +
003e2c 8be9     +STD Y + 17 , R30
003e2d 8bfa     +STD Y + 17 + 1 , R31
003e2e 8b6b     +STD Y + 17 + 2 , R22
003e2f 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
003e30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
003e31 89ad     +LDD R26 , Y + 21
003e32 89be     +LDD R27 , Y + 21 + 1
003e33 9616     +ADIW R26 , 6
003e34 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 21,6
003e36 89ad      	LDD  R26,Y+21
003e37 89be      	LDD  R27,Y+21+1
003e38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x112:
                +
003e39 87e9     +STD Y + 9 , R30
003e3a 87fa     +STD Y + 9 + 1 , R31
003e3b 876b     +STD Y + 9 + 2 , R22
003e3c 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
003e3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x113:
                +
003e3e 89e9     +LDD R30 , Y + 17
003e3f 89fa     +LDD R31 , Y + 17 + 1
003e40 896b     +LDD R22 , Y + 17 + 2
003e41 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
003e42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x114:
003e43 d9ec      	RCALL SUBOPT_0x43
003e44 01df      	MOVW R26,R30
003e45 01cb      	MOVW R24,R22
                +
003e46 85e9     +LDD R30 , Y + 9
003e47 85fa     +LDD R31 , Y + 9 + 1
003e48 856b     +LDD R22 , Y + 9 + 2
003e49 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
003e4a 940e 41c2 	CALL __DIVD21U
003e4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x115:
                +
003e4d 85e9     +LDD R30 , Y + 9
003e4e 85fa     +LDD R31 , Y + 9 + 1
003e4f 856b     +LDD R22 , Y + 9 + 2
003e50 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
003e51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x116:
003e52 940e 423f 	CALL __GETD1P
                +
003e54 87ed     +STD Y + 13 , R30
003e55 87fe     +STD Y + 13 + 1 , R31
003e56 876f     +STD Y + 13 + 2 , R22
003e57 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
003e58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x117:
                +
003e59 85ed     +LDD R30 , Y + 13
003e5a 85fe     +LDD R31 , Y + 13 + 1
003e5b 856f     +LDD R22 , Y + 13 + 2
003e5c 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
003e5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x118:
                +
003e5e 87ed     +STD Y + 13 , R30
003e5f 87fe     +STD Y + 13 + 1 , R31
003e60 876f     +STD Y + 13 + 2 , R22
003e61 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
003e62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x119:
                +
003e63 85ad     +LDD R26 , Y + 13
003e64 85be     +LDD R27 , Y + 13 + 1
003e65 858f     +LDD R24 , Y + 13 + 2
003e66 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
003e67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11A:
003e68 89ad      	LDD  R26,Y+21
003e69 89be      	LDD  R27,Y+21+1
003e6a 9614      	ADIW R26,4
003e6b 91ec      	LD   R30,X
003e6c 68e0      	ORI  R30,0x80
003e6d 93ec      	ST   X,R30
003e6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11B:
003e6f dfe9      	RCALL SUBOPT_0x117
                +
003e70 89ad     +LDD R26 , Y + 21
003e71 89be     +LDD R27 , Y + 21 + 1
003e72 9652     +ADIW R26 , 18
003e73 940e 424a+CALL __PUTDP1
                 	__PUTD1SNS 21,18
003e75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11C:
003e76 93fa      	ST   -Y,R31
003e77 93ea      	ST   -Y,R30
                +
003e78 85af     +LDD R26 , Y + 15
003e79 89b8     +LDD R27 , Y + 15 + 1
003e7a 8989     +LDD R24 , Y + 15 + 2
003e7b 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
003e7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x11D:
                +
003e7d 85a9     +LDD R26 , Y + 9
003e7e 85ba     +LDD R27 , Y + 9 + 1
003e7f 858b     +LDD R24 , Y + 9 + 2
003e80 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
003e81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11E:
003e82 89ed      	LDD  R30,Y+21
003e83 89fe      	LDD  R31,Y+21+1
                +
003e84 81a6     +LDD R26 , Z + 6
003e85 81b7     +LDD R27 , Z + 6 + 1
003e86 8580     +LDD R24 , Z + 6 + 2
003e87 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
003e88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11F:
003e89 940e 423b 	CALL __GETW1P
003e8b 9631      	ADIW R30,1
003e8c 93ed      	ST   X+,R30
003e8d 93fc      	ST   X,R31
003e8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x120:
003e8f 93ba      	ST   -Y,R27
003e90 93aa      	ST   -Y,R26
003e91 9724      	SBIW R28,4
003e92 e0e0      	LDI  R30,LOW(0)
003e93 83e8      	ST   Y,R30
003e94 83e9      	STD  Y+1,R30
003e95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x121:
003e96 dde5      	RCALL SUBOPT_0xCD
003e97 cc9e      	RJMP SUBOPT_0xA2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x122:
003e98 d95c      	RCALL SUBOPT_0x3C
003e99 d951      	RCALL SUBOPT_0x3A
003e9a 940e 40ae 	CALL __CMPF12
003e9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x123:
003e9d d94d      	RCALL SUBOPT_0x3A
                +
003e9e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
003e9f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
003ea0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
003ea1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
003ea2 940e 401b 	CALL __MULF12
003ea4 d91a      	RCALL SUBOPT_0x33
003ea5 5f3f      	SUBI R19,-LOW(1)
003ea6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x124:
                +
003ea7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
003ea8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
003ea9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
003eaa e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
003eab 940e 3fcb 	CALL __ADDF12
003ead 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x125:
                +
003eae eced     +LDI R30 , LOW ( 0x3DCCCCCD )
003eaf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
003eb0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
003eb1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
003eb2 940e 401b 	CALL __MULF12
003eb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x126:
003eb5 85a8      	LDD  R26,Y+8
003eb6 85b9      	LDD  R27,Y+8+1
003eb7 9611      	ADIW R26,1
003eb8 87a8      	STD  Y+8,R26
003eb9 87b9      	STD  Y+8+1,R27
003eba 9711      	SBIW R26,1
003ebb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x127:
003ebc 2fe0      	MOV  R30,R16
003ebd 5de0      	SUBI R30,-LOW(48)
003ebe 93ec      	ST   X,R30
003ebf 2fe0      	MOV  R30,R16
003ec0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x128:
003ec1 940e 4276 	CALL __SWAPD12
003ec3 940e 3fc4 	CALL __SUBF12
003ec5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x129:
003ec6 85e8      	LDD  R30,Y+8
003ec7 85f9      	LDD  R31,Y+8+1
003ec8 9631      	ADIW R30,1
003ec9 87e8      	STD  Y+8,R30
003eca 87f9      	STD  Y+8+1,R31
003ecb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12A:
003ecc 932a      	ST   -Y,R18
003ecd 81af      	LDD  R26,Y+7
003ece 85b8      	LDD  R27,Y+7+1
003ecf 85e9      	LDD  R30,Y+9
003ed0 85fa      	LDD  R31,Y+9+1
003ed1 9509      	ICALL
003ed2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x12B:
                +
003ed3 01fe     +MOVW R30 , R28
003ed4 5ae6     +SUBI R30 , LOW ( - 90 )
003ed5 4fff     +SBCI R31 , HIGH ( - 90 )
003ed6 9001     +LD R0 , Z +
003ed7 81f0     +LD R31 , Z
003ed8 2de0     +MOV R30 , R0
                 	__GETW1SX 90
003ed9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x12C:
003eda 9734      	SBIW R30,4
                +
003edb 01de     +MOVW R26 , R28
003edc 5aa6     +SUBI R26 , LOW ( - 90 )
003edd 4fbf     +SBCI R27 , HIGH ( - 90 )
003ede 93ed     +ST X + , R30
003edf 93fc     +ST X , R31
                 	__PUTW1SX 90
003ee0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12D:
003ee1 81af      	LDD  R26,Y+7
003ee2 85b8      	LDD  R27,Y+7+1
003ee3 85e9      	LDD  R30,Y+9
003ee4 85fa      	LDD  R31,Y+9+1
003ee5 9509      	ICALL
003ee6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x12E:
                +
003ee7 01de     +MOVW R26 , R28
003ee8 5aa6     +SUBI R26 , LOW ( - 90 )
003ee9 4fbf     +SBCI R27 , HIGH ( - 90 )
003eea 900d     +LD R0 , X +
003eeb 91bc     +LD R27 , X
003eec 2da0     +MOV R26 , R0
                 	__GETW2SX 90
003eed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12F:
003eee dfe4      	RCALL SUBOPT_0x12B
003eef cfea      	RJMP SUBOPT_0x12C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x130:
003ef0 87ee      	STD  Y+14,R30
003ef1 87ff      	STD  Y+14+1,R31
003ef2 85ae      	LDD  R26,Y+14
003ef3 85bf      	LDD  R27,Y+14+1
003ef4 940e 3394 	CALL _strlen
003ef6 2f1e      	MOV  R17,R30
003ef7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x131:
003ef8 dfee      	RCALL SUBOPT_0x12E
003ef9 9614      	ADIW R26,4
003efa 940e 423b 	CALL __GETW1P
003efc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x132:
003efd 7f0b      	ANDI R16,LOW(251)
003efe 89ed      	LDD  R30,Y+21
003eff 93ea      	ST   -Y,R30
                +
003f00 01de     +MOVW R26 , R28
003f01 5aa9     +SUBI R26 , LOW ( - 87 )
003f02 4fbf     +SBCI R27 , HIGH ( - 87 )
003f03 900d     +LD R0 , X +
003f04 91bc     +LD R27 , X
003f05 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
003f06 01fe     +MOVW R30 , R28
003f07 5ae7     +SUBI R30 , LOW ( - 89 )
003f08 4fff     +SBCI R31 , HIGH ( - 89 )
003f09 9001     +LD R0 , Z +
003f0a 81f0     +LD R31 , Z
003f0b 2de0     +MOV R30 , R0
                 	__GETW1SX 89
003f0c 9509      	ICALL
003f0d 3050      	CPI  R21,0
003f0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x133:
003f0f 81ae      	LDD  R26,Y+6
003f10 81bf      	LDD  R27,Y+6+1
003f11 9611      	ADIW R26,1
003f12 83ae      	STD  Y+6,R26
003f13 83bf      	STD  Y+6+1,R27
003f14 9711      	SBIW R26,1
003f15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x134:
                +
003f16 81ea     +LDD R30 , Y + 2
003f17 81fb     +LDD R31 , Y + 2 + 1
003f18 816c     +LDD R22 , Y + 2 + 2
003f19 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
003f1a cf62      	RJMP SUBOPT_0x11D
                 
                 
                 	.CSEG
                 _delay_ms:
003f1b 9610      	adiw r26,0
003f1c f039      	breq __delay_ms1
                 __delay_ms0:
                +
003f1d e480     +LDI R24 , LOW ( 0x1F40 )
003f1e e19f     +LDI R25 , HIGH ( 0x1F40 )
                +__DELAY_USW_LOOP :
003f1f 9701     +SBIW R24 , 1
003f20 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1F40
003f21 95a8      	wdr
003f22 9711      	sbiw r26,1
003f23 f7c9      	brne __delay_ms0
                 __delay_ms1:
003f24 9508      	ret
                 
                 __ANEGF1:
003f25 9730      	SBIW R30,0
003f26 4060      	SBCI R22,0
003f27 4070      	SBCI R23,0
003f28 f009      	BREQ __ANEGF10
003f29 5870      	SUBI R23,0x80
                 __ANEGF10:
003f2a 9508      	RET
                 
                 __ROUND_REPACK:
003f2b 2355      	TST  R21
003f2c f442      	BRPL __REPACK
003f2d 3850      	CPI  R21,0x80
003f2e f411      	BRNE __ROUND_REPACK0
003f2f ffe0      	SBRS R30,0
003f30 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
003f31 9631      	ADIW R30,1
003f32 1f69      	ADC  R22,R25
003f33 1f79      	ADC  R23,R25
003f34 f06b      	BRVS __REPACK1
                 
                 __REPACK:
003f35 e850      	LDI  R21,0x80
003f36 2757      	EOR  R21,R23
003f37 f411      	BRNE __REPACK0
003f38 935f      	PUSH R21
003f39 c0cf      	RJMP __ZERORES
                 __REPACK0:
003f3a 3f5f      	CPI  R21,0xFF
003f3b f031      	BREQ __REPACK1
003f3c 0f66      	LSL  R22
003f3d 0c00      	LSL  R0
003f3e 9557      	ROR  R21
003f3f 9567      	ROR  R22
003f40 2f75      	MOV  R23,R21
003f41 9508      	RET
                 __REPACK1:
003f42 935f      	PUSH R21
003f43 2000      	TST  R0
003f44 f00a      	BRMI __REPACK2
003f45 c0cf      	RJMP __MAXRES
                 __REPACK2:
003f46 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
003f47 e850      	LDI  R21,0x80
003f48 2e19      	MOV  R1,R25
003f49 2215      	AND  R1,R21
003f4a 0f88      	LSL  R24
003f4b 1f99      	ROL  R25
003f4c 2795      	EOR  R25,R21
003f4d 0f55      	LSL  R21
003f4e 9587      	ROR  R24
                 
                 __UNPACK1:
003f4f e850      	LDI  R21,0x80
003f50 2e07      	MOV  R0,R23
003f51 2205      	AND  R0,R21
003f52 0f66      	LSL  R22
003f53 1f77      	ROL  R23
003f54 2775      	EOR  R23,R21
003f55 0f55      	LSL  R21
003f56 9567      	ROR  R22
003f57 9508      	RET
                 
                 __CFD1U:
003f58 9468      	SET
003f59 c001      	RJMP __CFD1U0
                 __CFD1:
003f5a 94e8      	CLT
                 __CFD1U0:
003f5b 935f      	PUSH R21
003f5c dff2      	RCALL __UNPACK1
003f5d 3870      	CPI  R23,0x80
003f5e f018      	BRLO __CFD10
003f5f 3f7f      	CPI  R23,0xFF
003f60 f408      	BRCC __CFD10
003f61 c0a7      	RJMP __ZERORES
                 __CFD10:
003f62 e156      	LDI  R21,22
003f63 1b57      	SUB  R21,R23
003f64 f4aa      	BRPL __CFD11
003f65 9551      	NEG  R21
003f66 3058      	CPI  R21,8
003f67 f40e      	BRTC __CFD19
003f68 3059      	CPI  R21,9
                 __CFD19:
003f69 f030      	BRLO __CFD17
003f6a efef      	SER  R30
003f6b efff      	SER  R31
003f6c ef6f      	SER  R22
003f6d e77f      	LDI  R23,0x7F
003f6e f977      	BLD  R23,7
003f6f c01a      	RJMP __CFD15
                 __CFD17:
003f70 2777      	CLR  R23
003f71 2355      	TST  R21
003f72 f0b9      	BREQ __CFD15
                 __CFD18:
003f73 0fee      	LSL  R30
003f74 1fff      	ROL  R31
003f75 1f66      	ROL  R22
003f76 1f77      	ROL  R23
003f77 955a      	DEC  R21
003f78 f7d1      	BRNE __CFD18
003f79 c010      	RJMP __CFD15
                 __CFD11:
003f7a 2777      	CLR  R23
                 __CFD12:
003f7b 3058      	CPI  R21,8
003f7c f028      	BRLO __CFD13
003f7d 2fef      	MOV  R30,R31
003f7e 2ff6      	MOV  R31,R22
003f7f 2f67      	MOV  R22,R23
003f80 5058      	SUBI R21,8
003f81 cff9      	RJMP __CFD12
                 __CFD13:
003f82 2355      	TST  R21
003f83 f031      	BREQ __CFD15
                 __CFD14:
003f84 9576      	LSR  R23
003f85 9567      	ROR  R22
003f86 95f7      	ROR  R31
003f87 95e7      	ROR  R30
003f88 955a      	DEC  R21
003f89 f7d1      	BRNE __CFD14
                 __CFD15:
003f8a 2000      	TST  R0
003f8b f40a      	BRPL __CFD16
003f8c d163      	RCALL __ANEGD1
                 __CFD16:
003f8d 915f      	POP  R21
003f8e 9508      	RET
                 
                 __CDF1U:
003f8f 9468      	SET
003f90 c001      	RJMP __CDF1U0
                 __CDF1:
003f91 94e8      	CLT
                 __CDF1U0:
003f92 9730      	SBIW R30,0
003f93 4060      	SBCI R22,0
003f94 4070      	SBCI R23,0
003f95 f0b1      	BREQ __CDF10
003f96 2400      	CLR  R0
003f97 f026      	BRTS __CDF11
003f98 2377      	TST  R23
003f99 f412      	BRPL __CDF11
003f9a 9400      	COM  R0
003f9b d154      	RCALL __ANEGD1
                 __CDF11:
003f9c 2e17      	MOV  R1,R23
003f9d e17e      	LDI  R23,30
003f9e 2011      	TST  R1
                 __CDF12:
003f9f f032      	BRMI __CDF13
003fa0 957a      	DEC  R23
003fa1 0fee      	LSL  R30
003fa2 1fff      	ROL  R31
003fa3 1f66      	ROL  R22
003fa4 1c11      	ROL  R1
003fa5 cff9      	RJMP __CDF12
                 __CDF13:
003fa6 2fef      	MOV  R30,R31
003fa7 2ff6      	MOV  R31,R22
003fa8 2d61      	MOV  R22,R1
003fa9 935f      	PUSH R21
003faa df8a      	RCALL __REPACK
003fab 915f      	POP  R21
                 __CDF10:
003fac 9508      	RET
                 
                 __SWAPACC:
003fad 934f      	PUSH R20
003fae 01af      	MOVW R20,R30
003faf 01fd      	MOVW R30,R26
003fb0 01da      	MOVW R26,R20
003fb1 01ab      	MOVW R20,R22
003fb2 01bc      	MOVW R22,R24
003fb3 01ca      	MOVW R24,R20
003fb4 2d40      	MOV  R20,R0
003fb5 2c01      	MOV  R0,R1
003fb6 2e14      	MOV  R1,R20
003fb7 914f      	POP  R20
003fb8 9508      	RET
                 
                 __UADD12:
003fb9 0fea      	ADD  R30,R26
003fba 1ffb      	ADC  R31,R27
003fbb 1f68      	ADC  R22,R24
003fbc 9508      	RET
                 
                 __NEGMAN1:
003fbd 95e0      	COM  R30
003fbe 95f0      	COM  R31
003fbf 9560      	COM  R22
003fc0 5fef      	SUBI R30,-1
003fc1 4fff      	SBCI R31,-1
003fc2 4f6f      	SBCI R22,-1
003fc3 9508      	RET
                 
                 __SUBF12:
003fc4 935f      	PUSH R21
003fc5 df81      	RCALL __UNPACK
003fc6 3890      	CPI  R25,0x80
003fc7 f171      	BREQ __ADDF129
003fc8 e850      	LDI  R21,0x80
003fc9 2615      	EOR  R1,R21
                 
003fca c004      	RJMP __ADDF120
                 
                 __ADDF12:
003fcb 935f      	PUSH R21
003fcc df7a      	RCALL __UNPACK
003fcd 3890      	CPI  R25,0x80
003fce f139      	BREQ __ADDF129
                 
                 __ADDF120:
003fcf 3870      	CPI  R23,0x80
003fd0 f121      	BREQ __ADDF128
                 __ADDF121:
003fd1 2f57      	MOV  R21,R23
003fd2 1b59      	SUB  R21,R25
003fd3 f12b      	BRVS __ADDF1211
003fd4 f412      	BRPL __ADDF122
003fd5 dfd7      	RCALL __SWAPACC
003fd6 cffa      	RJMP __ADDF121
                 __ADDF122:
003fd7 3158      	CPI  R21,24
003fd8 f018      	BRLO __ADDF123
003fd9 27aa      	CLR  R26
003fda 27bb      	CLR  R27
003fdb 2788      	CLR  R24
                 __ADDF123:
003fdc 3058      	CPI  R21,8
003fdd f028      	BRLO __ADDF124
003fde 2fab      	MOV  R26,R27
003fdf 2fb8      	MOV  R27,R24
003fe0 2788      	CLR  R24
003fe1 5058      	SUBI R21,8
003fe2 cff9      	RJMP __ADDF123
                 __ADDF124:
003fe3 2355      	TST  R21
003fe4 f029      	BREQ __ADDF126
                 __ADDF125:
003fe5 9586      	LSR  R24
003fe6 95b7      	ROR  R27
003fe7 95a7      	ROR  R26
003fe8 955a      	DEC  R21
003fe9 f7d9      	BRNE __ADDF125
                 __ADDF126:
003fea 2d50      	MOV  R21,R0
003feb 2551      	EOR  R21,R1
003fec f072      	BRMI __ADDF127
003fed dfcb      	RCALL __UADD12
003fee f438      	BRCC __ADDF129
003fef 9567      	ROR  R22
003ff0 95f7      	ROR  R31
003ff1 95e7      	ROR  R30
003ff2 9573      	INC  R23
003ff3 f413      	BRVC __ADDF129
003ff4 c020      	RJMP __MAXRES
                 __ADDF128:
003ff5 dfb7      	RCALL __SWAPACC
                 __ADDF129:
003ff6 df3e      	RCALL __REPACK
003ff7 915f      	POP  R21
003ff8 9508      	RET
                 __ADDF1211:
003ff9 f7d8      	BRCC __ADDF128
003ffa cffb      	RJMP __ADDF129
                 __ADDF127:
003ffb 1bea      	SUB  R30,R26
003ffc 0bfb      	SBC  R31,R27
003ffd 0b68      	SBC  R22,R24
003ffe f051      	BREQ __ZERORES
003fff f410      	BRCC __ADDF1210
004000 9400      	COM  R0
004001 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
004002 2366      	TST  R22
004003 f392      	BRMI __ADDF129
004004 0fee      	LSL  R30
004005 1fff      	ROL  R31
004006 1f66      	ROL  R22
004007 957a      	DEC  R23
004008 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
004009 27ee      	CLR  R30
00400a 27ff      	CLR  R31
00400b 2766      	CLR  R22
00400c 2777      	CLR  R23
00400d 915f      	POP  R21
00400e 9508      	RET
                 
                 __MINRES:
00400f efef      	SER  R30
004010 efff      	SER  R31
004011 e76f      	LDI  R22,0x7F
004012 ef7f      	SER  R23
004013 915f      	POP  R21
004014 9508      	RET
                 
                 __MAXRES:
004015 efef      	SER  R30
004016 efff      	SER  R31
004017 e76f      	LDI  R22,0x7F
004018 e77f      	LDI  R23,0x7F
004019 915f      	POP  R21
00401a 9508      	RET
                 
                 __MULF12:
00401b 935f      	PUSH R21
00401c df2a      	RCALL __UNPACK
00401d 3870      	CPI  R23,0x80
00401e f351      	BREQ __ZERORES
00401f 3890      	CPI  R25,0x80
004020 f341      	BREQ __ZERORES
004021 2401      	EOR  R0,R1
004022 9408      	SEC
004023 1f79      	ADC  R23,R25
004024 f423      	BRVC __MULF124
004025 f31c      	BRLT __ZERORES
                 __MULF125:
004026 2000      	TST  R0
004027 f33a      	BRMI __MINRES
004028 cfec      	RJMP __MAXRES
                 __MULF124:
004029 920f      	PUSH R0
00402a 931f      	PUSH R17
00402b 932f      	PUSH R18
00402c 933f      	PUSH R19
00402d 934f      	PUSH R20
00402e 2711      	CLR  R17
00402f 2722      	CLR  R18
004030 2799      	CLR  R25
004031 9f68      	MUL  R22,R24
004032 01a0      	MOVW R20,R0
004033 9f8f      	MUL  R24,R31
004034 2d30      	MOV  R19,R0
004035 0d41      	ADD  R20,R1
004036 1f59      	ADC  R21,R25
004037 9f6b      	MUL  R22,R27
004038 0d30      	ADD  R19,R0
004039 1d41      	ADC  R20,R1
00403a 1f59      	ADC  R21,R25
00403b 9f8e      	MUL  R24,R30
00403c d027      	RCALL __MULF126
00403d 9fbf      	MUL  R27,R31
00403e d025      	RCALL __MULF126
00403f 9f6a      	MUL  R22,R26
004040 d023      	RCALL __MULF126
004041 9fbe      	MUL  R27,R30
004042 d01d      	RCALL __MULF127
004043 9faf      	MUL  R26,R31
004044 d01b      	RCALL __MULF127
004045 9fae      	MUL  R26,R30
004046 0d11      	ADD  R17,R1
004047 1f29      	ADC  R18,R25
004048 1f39      	ADC  R19,R25
004049 1f49      	ADC  R20,R25
00404a 1f59      	ADC  R21,R25
00404b 2fe3      	MOV  R30,R19
00404c 2ff4      	MOV  R31,R20
00404d 2f65      	MOV  R22,R21
00404e 2f52      	MOV  R21,R18
00404f 914f      	POP  R20
004050 913f      	POP  R19
004051 912f      	POP  R18
004052 911f      	POP  R17
004053 900f      	POP  R0
004054 2366      	TST  R22
004055 f02a      	BRMI __MULF122
004056 0f55      	LSL  R21
004057 1fee      	ROL  R30
004058 1fff      	ROL  R31
004059 1f66      	ROL  R22
00405a c002      	RJMP __MULF123
                 __MULF122:
00405b 9573      	INC  R23
00405c f24b      	BRVS __MULF125
                 __MULF123:
00405d decd      	RCALL __ROUND_REPACK
00405e 915f      	POP  R21
00405f 9508      	RET
                 
                 __MULF127:
004060 0d10      	ADD  R17,R0
004061 1d21      	ADC  R18,R1
004062 1f39      	ADC  R19,R25
004063 c002      	RJMP __MULF128
                 __MULF126:
004064 0d20      	ADD  R18,R0
004065 1d31      	ADC  R19,R1
                 __MULF128:
004066 1f49      	ADC  R20,R25
004067 1f59      	ADC  R21,R25
004068 9508      	RET
                 
                 __DIVF21:
004069 935f      	PUSH R21
00406a dedc      	RCALL __UNPACK
00406b 3870      	CPI  R23,0x80
00406c f421      	BRNE __DIVF210
00406d 2011      	TST  R1
                 __DIVF211:
00406e f40a      	BRPL __DIVF219
00406f cf9f      	RJMP __MINRES
                 __DIVF219:
004070 cfa4      	RJMP __MAXRES
                 __DIVF210:
004071 3890      	CPI  R25,0x80
004072 f409      	BRNE __DIVF218
                 __DIVF217:
004073 cf95      	RJMP __ZERORES
                 __DIVF218:
004074 2401      	EOR  R0,R1
004075 9408      	SEC
004076 0b97      	SBC  R25,R23
004077 f41b      	BRVC __DIVF216
004078 f3d4      	BRLT __DIVF217
004079 2000      	TST  R0
00407a cff3      	RJMP __DIVF211
                 __DIVF216:
00407b 2f79      	MOV  R23,R25
00407c 931f      	PUSH R17
00407d 932f      	PUSH R18
00407e 933f      	PUSH R19
00407f 934f      	PUSH R20
004080 2411      	CLR  R1
004081 2711      	CLR  R17
004082 2722      	CLR  R18
004083 2733      	CLR  R19
004084 2744      	CLR  R20
004085 2755      	CLR  R21
004086 e290      	LDI  R25,32
                 __DIVF212:
004087 17ae      	CP   R26,R30
004088 07bf      	CPC  R27,R31
004089 0786      	CPC  R24,R22
00408a 0741      	CPC  R20,R17
00408b f030      	BRLO __DIVF213
00408c 1bae      	SUB  R26,R30
00408d 0bbf      	SBC  R27,R31
00408e 0b86      	SBC  R24,R22
00408f 0b41      	SBC  R20,R17
004090 9408      	SEC
004091 c001      	RJMP __DIVF214
                 __DIVF213:
004092 9488      	CLC
                 __DIVF214:
004093 1f55      	ROL  R21
004094 1f22      	ROL  R18
004095 1f33      	ROL  R19
004096 1c11      	ROL  R1
004097 1faa      	ROL  R26
004098 1fbb      	ROL  R27
004099 1f88      	ROL  R24
00409a 1f44      	ROL  R20
00409b 959a      	DEC  R25
00409c f751      	BRNE __DIVF212
00409d 01f9      	MOVW R30,R18
00409e 2d61      	MOV  R22,R1
00409f 914f      	POP  R20
0040a0 913f      	POP  R19
0040a1 912f      	POP  R18
0040a2 911f      	POP  R17
0040a3 2366      	TST  R22
0040a4 f032      	BRMI __DIVF215
0040a5 0f55      	LSL  R21
0040a6 1fee      	ROL  R30
0040a7 1fff      	ROL  R31
0040a8 1f66      	ROL  R22
0040a9 957a      	DEC  R23
0040aa f243      	BRVS __DIVF217
                 __DIVF215:
0040ab de7f      	RCALL __ROUND_REPACK
0040ac 915f      	POP  R21
0040ad 9508      	RET
                 
                 __CMPF12:
0040ae 2399      	TST  R25
0040af f09a      	BRMI __CMPF120
0040b0 2377      	TST  R23
0040b1 f042      	BRMI __CMPF121
0040b2 1797      	CP   R25,R23
0040b3 f048      	BRLO __CMPF122
0040b4 f429      	BRNE __CMPF121
0040b5 17ae      	CP   R26,R30
0040b6 07bf      	CPC  R27,R31
0040b7 0786      	CPC  R24,R22
0040b8 f020      	BRLO __CMPF122
0040b9 f031      	BREQ __CMPF123
                 __CMPF121:
0040ba 9498      	CLZ
0040bb 9488      	CLC
0040bc 9508      	RET
                 __CMPF122:
0040bd 9498      	CLZ
0040be 9408      	SEC
0040bf 9508      	RET
                 __CMPF123:
0040c0 9418      	SEZ
0040c1 9488      	CLC
0040c2 9508      	RET
                 __CMPF120:
0040c3 2377      	TST  R23
0040c4 f7c2      	BRPL __CMPF122
0040c5 1797      	CP   R25,R23
0040c6 f398      	BRLO __CMPF121
0040c7 f7a9      	BRNE __CMPF122
0040c8 17ea      	CP   R30,R26
0040c9 07fb      	CPC  R31,R27
0040ca 0768      	CPC  R22,R24
0040cb f388      	BRLO __CMPF122
0040cc f399      	BREQ __CMPF123
0040cd cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0040ce 2400      	CLR  R0
0040cf 0daf      	ADD  R26,R15
0040d0 1db0      	ADC  R27,R0
0040d1 9508      	RET
                 
                 __ADDD12:
0040d2 0fea      	ADD  R30,R26
0040d3 1ffb      	ADC  R31,R27
0040d4 1f68      	ADC  R22,R24
0040d5 1f79      	ADC  R23,R25
0040d6 9508      	RET
                 
                 __ADDD21:
0040d7 0fae      	ADD  R26,R30
0040d8 1fbf      	ADC  R27,R31
0040d9 1f86      	ADC  R24,R22
0040da 1f97      	ADC  R25,R23
0040db 9508      	RET
                 
                 __SUBD12:
0040dc 1bea      	SUB  R30,R26
0040dd 0bfb      	SBC  R31,R27
0040de 0b68      	SBC  R22,R24
0040df 0b79      	SBC  R23,R25
0040e0 9508      	RET
                 
                 __SUBD21:
0040e1 1bae      	SUB  R26,R30
0040e2 0bbf      	SBC  R27,R31
0040e3 0b86      	SBC  R24,R22
0040e4 0b97      	SBC  R25,R23
0040e5 9508      	RET
                 
                 __ANDD12:
0040e6 23ea      	AND  R30,R26
0040e7 23fb      	AND  R31,R27
0040e8 2368      	AND  R22,R24
0040e9 2379      	AND  R23,R25
0040ea 9508      	RET
                 
                 __ORD12:
0040eb 2bea      	OR   R30,R26
0040ec 2bfb      	OR   R31,R27
0040ed 2b68      	OR   R22,R24
0040ee 2b79      	OR   R23,R25
0040ef 9508      	RET
                 
                 __ANEGD1:
0040f0 95f0      	COM  R31
0040f1 9560      	COM  R22
0040f2 9570      	COM  R23
0040f3 95e1      	NEG  R30
0040f4 4fff      	SBCI R31,-1
0040f5 4f6f      	SBCI R22,-1
0040f6 4f7f      	SBCI R23,-1
0040f7 9508      	RET
                 
                 __LSRW12:
0040f8 23ee      	TST  R30
0040f9 2e0e      	MOV  R0,R30
0040fa 01fd      	MOVW R30,R26
0040fb f021      	BREQ __LSRW12R
                 __LSRW12L:
0040fc 95f6      	LSR  R31
0040fd 95e7      	ROR  R30
0040fe 940a      	DEC  R0
0040ff f7e1      	BRNE __LSRW12L
                 __LSRW12R:
004100 9508      	RET
                 
                 __LSLD12:
004101 23ee      	TST  R30
004102 2e0e      	MOV  R0,R30
004103 01fd      	MOVW R30,R26
004104 01bc      	MOVW R22,R24
004105 f031      	BREQ __LSLD12R
                 __LSLD12L:
004106 0fee      	LSL  R30
004107 1fff      	ROL  R31
004108 1f66      	ROL  R22
004109 1f77      	ROL  R23
00410a 940a      	DEC  R0
00410b f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00410c 9508      	RET
                 
                 __ASRD12:
00410d 23ee      	TST  R30
00410e 2e0e      	MOV  R0,R30
00410f 01fd      	MOVW R30,R26
004110 01bc      	MOVW R22,R24
004111 f031      	BREQ __ASRD12R
                 __ASRD12L:
004112 9575      	ASR  R23
004113 9567      	ROR  R22
004114 95f7      	ROR  R31
004115 95e7      	ROR  R30
004116 940a      	DEC  R0
004117 f7d1      	BRNE __ASRD12L
                 __ASRD12R:
004118 9508      	RET
                 
                 __LSRD12:
004119 23ee      	TST  R30
00411a 2e0e      	MOV  R0,R30
00411b 01fd      	MOVW R30,R26
00411c 01bc      	MOVW R22,R24
00411d f031      	BREQ __LSRD12R
                 __LSRD12L:
00411e 9576      	LSR  R23
00411f 9567      	ROR  R22
004120 95f7      	ROR  R31
004121 95e7      	ROR  R30
004122 940a      	DEC  R0
004123 f7d1      	BRNE __LSRD12L
                 __LSRD12R:
004124 9508      	RET
                 
                 __LSLW4:
004125 0fee      	LSL  R30
004126 1fff      	ROL  R31
                 __LSLW3:
004127 0fee      	LSL  R30
004128 1fff      	ROL  R31
                 __LSLW2:
004129 0fee      	LSL  R30
00412a 1fff      	ROL  R31
00412b 0fee      	LSL  R30
00412c 1fff      	ROL  R31
00412d 9508      	RET
                 
                 __ASRD1:
00412e 9575      	ASR  R23
00412f 9567      	ROR  R22
004130 95f7      	ROR  R31
004131 95e7      	ROR  R30
004132 9508      	RET
                 
                 __LSRW4:
004133 95f6      	LSR  R31
004134 95e7      	ROR  R30
                 __LSRW3:
004135 95f6      	LSR  R31
004136 95e7      	ROR  R30
                 __LSRW2:
004137 95f6      	LSR  R31
004138 95e7      	ROR  R30
004139 95f6      	LSR  R31
00413a 95e7      	ROR  R30
00413b 9508      	RET
                 
                 __LSLD1:
00413c 0fee      	LSL  R30
00413d 1fff      	ROL  R31
00413e 1f66      	ROL  R22
00413f 1f77      	ROL  R23
004140 9508      	RET
                 
                 __ASRW8:
004141 2fef      	MOV  R30,R31
004142 27ff      	CLR  R31
004143 fde7      	SBRC R30,7
004144 efff      	SER  R31
004145 9508      	RET
                 
                 __ASRD16:
004146 2fe6      	MOV  R30,R22
004147 2ff7      	MOV  R31,R23
004148 2766      	CLR  R22
004149 fdf7      	SBRC R31,7
00414a ef6f      	SER  R22
00414b 2f76      	MOV  R23,R22
00414c 9508      	RET
                 
                 __LSRD16:
00414d 2fe6      	MOV  R30,R22
00414e 2ff7      	MOV  R31,R23
00414f e060      	LDI  R22,0
004150 e070      	LDI  R23,0
004151 9508      	RET
                 
                 __LSLD16:
004152 2f6e      	MOV  R22,R30
004153 2f7f      	MOV  R23,R31
004154 e0e0      	LDI  R30,0
004155 e0f0      	LDI  R31,0
004156 9508      	RET
                 
                 __CBD1:
004157 2ffe      	MOV  R31,R30
004158 0fff      	ADD  R31,R31
004159 0bff      	SBC  R31,R31
00415a 2f6f      	MOV  R22,R31
00415b 2f7f      	MOV  R23,R31
00415c 9508      	RET
                 
                 __CWD1:
00415d 2f6f      	MOV  R22,R31
00415e 0f66      	ADD  R22,R22
00415f 0b66      	SBC  R22,R22
004160 2f76      	MOV  R23,R22
004161 9508      	RET
                 
                 __CWD2:
004162 2f8b      	MOV  R24,R27
004163 0f88      	ADD  R24,R24
004164 0b88      	SBC  R24,R24
004165 2f98      	MOV  R25,R24
004166 9508      	RET
                 
                 __COMD1:
004167 95e0      	COM  R30
004168 95f0      	COM  R31
004169 9560      	COM  R22
00416a 9570      	COM  R23
00416b 9508      	RET
                 
                 __EQB12:
00416c 17ea      	CP   R30,R26
00416d e0e1      	LDI  R30,1
00416e f009      	BREQ __EQB12T
00416f 27ee      	CLR  R30
                 __EQB12T:
004170 9508      	RET
                 
                 __MULD12U:
004171 9f7a      	MUL  R23,R26
004172 2d70      	MOV  R23,R0
004173 9f6b      	MUL  R22,R27
004174 0d70      	ADD  R23,R0
004175 9ff8      	MUL  R31,R24
004176 0d70      	ADD  R23,R0
004177 9fe9      	MUL  R30,R25
004178 0d70      	ADD  R23,R0
004179 9f6a      	MUL  R22,R26
00417a 2d60      	MOV  R22,R0
00417b 0d71      	ADD  R23,R1
00417c 9ffb      	MUL  R31,R27
00417d 0d60      	ADD  R22,R0
00417e 1d71      	ADC  R23,R1
00417f 9fe8      	MUL  R30,R24
004180 0d60      	ADD  R22,R0
004181 1d71      	ADC  R23,R1
004182 2788      	CLR  R24
004183 9ffa      	MUL  R31,R26
004184 2df0      	MOV  R31,R0
004185 0d61      	ADD  R22,R1
004186 1f78      	ADC  R23,R24
004187 9feb      	MUL  R30,R27
004188 0df0      	ADD  R31,R0
004189 1d61      	ADC  R22,R1
00418a 1f78      	ADC  R23,R24
00418b 9fea      	MUL  R30,R26
00418c 2de0      	MOV  R30,R0
00418d 0df1      	ADD  R31,R1
00418e 1f68      	ADC  R22,R24
00418f 1f78      	ADC  R23,R24
004190 9508      	RET
                 
                 __MULB1W2U:
004191 2f6e      	MOV  R22,R30
004192 9f6a      	MUL  R22,R26
004193 01f0      	MOVW R30,R0
004194 9f6b      	MUL  R22,R27
004195 0df0      	ADD  R31,R0
004196 9508      	RET
                 
                 __MULD12:
004197 d090      	RCALL __CHKSIGND
004198 dfd8      	RCALL __MULD12U
004199 f40e      	BRTC __MULD121
00419a df55      	RCALL __ANEGD1
                 __MULD121:
00419b 9508      	RET
                 
                 __DIVB21U:
00419c 2400      	CLR  R0
00419d e098      	LDI  R25,8
                 __DIVB21U1:
00419e 0faa      	LSL  R26
00419f 1c00      	ROL  R0
0041a0 1a0e      	SUB  R0,R30
0041a1 f410      	BRCC __DIVB21U2
0041a2 0e0e      	ADD  R0,R30
0041a3 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0041a4 60a1      	SBR  R26,1
                 __DIVB21U3:
0041a5 959a      	DEC  R25
0041a6 f7b9      	BRNE __DIVB21U1
0041a7 2fea      	MOV  R30,R26
0041a8 2da0      	MOV  R26,R0
0041a9 9508      	RET
                 
                 __DIVB21:
0041aa d071      	RCALL __CHKSIGNB
0041ab dff0      	RCALL __DIVB21U
0041ac f40e      	BRTC __DIVB211
0041ad 95e1      	NEG  R30
                 __DIVB211:
0041ae 9508      	RET
                 
                 __DIVW21U:
0041af 2400      	CLR  R0
0041b0 2411      	CLR  R1
0041b1 e190      	LDI  R25,16
                 __DIVW21U1:
0041b2 0faa      	LSL  R26
0041b3 1fbb      	ROL  R27
0041b4 1c00      	ROL  R0
0041b5 1c11      	ROL  R1
0041b6 1a0e      	SUB  R0,R30
0041b7 0a1f      	SBC  R1,R31
0041b8 f418      	BRCC __DIVW21U2
0041b9 0e0e      	ADD  R0,R30
0041ba 1e1f      	ADC  R1,R31
0041bb c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0041bc 60a1      	SBR  R26,1
                 __DIVW21U3:
0041bd 959a      	DEC  R25
0041be f799      	BRNE __DIVW21U1
0041bf 01fd      	MOVW R30,R26
0041c0 01d0      	MOVW R26,R0
0041c1 9508      	RET
                 
                 __DIVD21U:
0041c2 933f      	PUSH R19
0041c3 934f      	PUSH R20
0041c4 935f      	PUSH R21
0041c5 2400      	CLR  R0
0041c6 2411      	CLR  R1
0041c7 2744      	CLR  R20
0041c8 2755      	CLR  R21
0041c9 e230      	LDI  R19,32
                 __DIVD21U1:
0041ca 0faa      	LSL  R26
0041cb 1fbb      	ROL  R27
0041cc 1f88      	ROL  R24
0041cd 1f99      	ROL  R25
0041ce 1c00      	ROL  R0
0041cf 1c11      	ROL  R1
0041d0 1f44      	ROL  R20
0041d1 1f55      	ROL  R21
0041d2 1a0e      	SUB  R0,R30
0041d3 0a1f      	SBC  R1,R31
0041d4 0b46      	SBC  R20,R22
0041d5 0b57      	SBC  R21,R23
0041d6 f428      	BRCC __DIVD21U2
0041d7 0e0e      	ADD  R0,R30
0041d8 1e1f      	ADC  R1,R31
0041d9 1f46      	ADC  R20,R22
0041da 1f57      	ADC  R21,R23
0041db c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0041dc 60a1      	SBR  R26,1
                 __DIVD21U3:
0041dd 953a      	DEC  R19
0041de f759      	BRNE __DIVD21U1
0041df 01fd      	MOVW R30,R26
0041e0 01bc      	MOVW R22,R24
0041e1 01d0      	MOVW R26,R0
0041e2 01ca      	MOVW R24,R20
0041e3 915f      	POP  R21
0041e4 914f      	POP  R20
0041e5 913f      	POP  R19
0041e6 9508      	RET
                 
                 __DIVD21:
0041e7 d040      	RCALL __CHKSIGND
0041e8 dfd9      	RCALL __DIVD21U
0041e9 f40e      	BRTC __DIVD211
0041ea df05      	RCALL __ANEGD1
                 __DIVD211:
0041eb 9508      	RET
                 
                 __MODB21:
0041ec 94e8      	CLT
0041ed ffa7      	SBRS R26,7
0041ee c002      	RJMP __MODB211
0041ef 95a1      	NEG  R26
0041f0 9468      	SET
                 __MODB211:
0041f1 fde7      	SBRC R30,7
0041f2 95e1      	NEG  R30
0041f3 dfa8      	RCALL __DIVB21U
0041f4 2fea      	MOV  R30,R26
0041f5 f40e      	BRTC __MODB212
0041f6 95e1      	NEG  R30
                 __MODB212:
0041f7 9508      	RET
                 
                 __MODD21U:
0041f8 dfc9      	RCALL __DIVD21U
0041f9 01fd      	MOVW R30,R26
0041fa 01bc      	MOVW R22,R24
0041fb 9508      	RET
                 
                 __MODD21:
0041fc 94e8      	CLT
0041fd ff97      	SBRS R25,7
0041fe c009      	RJMP __MODD211
0041ff 95a0      	COM  R26
004200 95b0      	COM  R27
004201 9580      	COM  R24
004202 9590      	COM  R25
004203 5faf      	SUBI R26,-1
004204 4fbf      	SBCI R27,-1
004205 4f8f      	SBCI R24,-1
004206 4f9f      	SBCI R25,-1
004207 9468      	SET
                 __MODD211:
004208 fd77      	SBRC R23,7
004209 dee6      	RCALL __ANEGD1
00420a dfb7      	RCALL __DIVD21U
00420b 01fd      	MOVW R30,R26
00420c 01bc      	MOVW R22,R24
00420d f40e      	BRTC __MODD212
00420e dee1      	RCALL __ANEGD1
                 __MODD212:
00420f 9508      	RET
                 
                 __MANDD12:
004210 94e8      	CLT
004211 ff77      	SBRS R23,7
004212 c002      	RJMP __MANDD121
004213 dedc      	RCALL __ANEGD1
004214 9468      	SET
                 __MANDD121:
004215 23ea      	AND  R30,R26
004216 23fb      	AND  R31,R27
004217 2368      	AND  R22,R24
004218 2379      	AND  R23,R25
004219 f40e      	BRTC __MANDD122
00421a ded5      	RCALL __ANEGD1
                 __MANDD122:
00421b 9508      	RET
                 
                 __CHKSIGNB:
00421c 94e8      	CLT
00421d ffe7      	SBRS R30,7
00421e c002      	RJMP __CHKSB1
00421f 95e1      	NEG  R30
004220 9468      	SET
                 __CHKSB1:
004221 ffa7      	SBRS R26,7
004222 c004      	RJMP __CHKSB2
004223 95a1      	NEG  R26
004224 f800      	BLD  R0,0
004225 9403      	INC  R0
004226 fa00      	BST  R0,0
                 __CHKSB2:
004227 9508      	RET
                 
                 __CHKSIGND:
004228 94e8      	CLT
004229 ff77      	SBRS R23,7
00422a c002      	RJMP __CHKSD1
00422b dec4      	RCALL __ANEGD1
00422c 9468      	SET
                 __CHKSD1:
00422d ff97      	SBRS R25,7
00422e c00b      	RJMP __CHKSD2
00422f 2400      	CLR  R0
004230 95a0      	COM  R26
004231 95b0      	COM  R27
004232 9580      	COM  R24
004233 9590      	COM  R25
004234 9611      	ADIW R26,1
004235 1d80      	ADC  R24,R0
004236 1d90      	ADC  R25,R0
004237 f800      	BLD  R0,0
004238 9403      	INC  R0
004239 fa00      	BST  R0,0
                 __CHKSD2:
00423a 9508      	RET
                 
                 __GETW1P:
00423b 91ed      	LD   R30,X+
00423c 91fc      	LD   R31,X
00423d 9711      	SBIW R26,1
00423e 9508      	RET
                 
                 __GETD1P:
00423f 91ed      	LD   R30,X+
004240 91fd      	LD   R31,X+
004241 916d      	LD   R22,X+
004242 917c      	LD   R23,X
004243 9713      	SBIW R26,3
004244 9508      	RET
                 
                 __GETD1P_INC:
004245 91ed      	LD   R30,X+
004246 91fd      	LD   R31,X+
004247 916d      	LD   R22,X+
004248 917d      	LD   R23,X+
004249 9508      	RET
                 
                 __PUTDP1:
00424a 93ed      	ST   X+,R30
00424b 93fd      	ST   X+,R31
00424c 936d      	ST   X+,R22
00424d 937c      	ST   X,R23
00424e 9508      	RET
                 
                 __PUTDP1_DEC:
00424f 937e      	ST   -X,R23
004250 936e      	ST   -X,R22
004251 93fe      	ST   -X,R31
004252 93ee      	ST   -X,R30
004253 9508      	RET
                 
                 __GETW1PF:
004254 9005      	LPM  R0,Z+
004255 91f4      	LPM  R31,Z
004256 2de0      	MOV  R30,R0
004257 9508      	RET
                 
                 __GETD1S0:
004258 81e8      	LD   R30,Y
004259 81f9      	LDD  R31,Y+1
00425a 816a      	LDD  R22,Y+2
00425b 817b      	LDD  R23,Y+3
00425c 9508      	RET
                 
                 __GETD2S0:
00425d 81a8      	LD   R26,Y
00425e 81b9      	LDD  R27,Y+1
00425f 818a      	LDD  R24,Y+2
004260 819b      	LDD  R25,Y+3
004261 9508      	RET
                 
                 __PUTD1S0:
004262 83e8      	ST   Y,R30
004263 83f9      	STD  Y+1,R31
004264 836a      	STD  Y+2,R22
004265 837b      	STD  Y+3,R23
004266 9508      	RET
                 
                 __PUTDZ20:
004267 83a0      	ST   Z,R26
004268 83b1      	STD  Z+1,R27
004269 8382      	STD  Z+2,R24
00426a 8393      	STD  Z+3,R25
00426b 9508      	RET
                 
                 __PUTPARD1:
00426c 937a      	ST   -Y,R23
00426d 936a      	ST   -Y,R22
00426e 93fa      	ST   -Y,R31
00426f 93ea      	ST   -Y,R30
004270 9508      	RET
                 
                 __PUTPARD2:
004271 939a      	ST   -Y,R25
004272 938a      	ST   -Y,R24
004273 93ba      	ST   -Y,R27
004274 93aa      	ST   -Y,R26
004275 9508      	RET
                 
                 __SWAPD12:
004276 2e18      	MOV  R1,R24
004277 2f86      	MOV  R24,R22
004278 2d61      	MOV  R22,R1
004279 2e19      	MOV  R1,R25
00427a 2f97      	MOV  R25,R23
00427b 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00427c 2e1b      	MOV  R1,R27
00427d 2fbf      	MOV  R27,R31
00427e 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00427f 2e1a      	MOV  R1,R26
004280 2fae      	MOV  R26,R30
004281 2de1      	MOV  R30,R1
004282 9508      	RET
                 
                 __EEPROMRDD:
004283 95a8      	WDR
004284 91e0 01cf 	LDS  R30,NVM_STATUS
004286 fde7      	SBRC R30,7
004287 cffb      	RJMP __EEPROMRDD
004288 5fb0      	SUBI R27,-0x10
004289 91ed      	LD   R30,X+
00428a 91fd      	LD   R31,X+
00428b 916d      	LD   R22,X+
00428c 917c      	LD   R23,X
00428d 50a3      	SUBI R26,LOW(0x1003)
00428e 41b0      	SBCI R27,HIGH(0x1003)
00428f 9508      	RET
                 
                 __EEPROMWRD:
004290 d007      	RCALL __EEPROMWRW
004291 9612      	ADIW R26,2
004292 010f      	MOVW R0,R30
004293 01fb      	MOVW R30,R22
004294 d003      	RCALL __EEPROMWRW
004295 01f0      	MOVW R30,R0
004296 9712      	SBIW R26,2
004297 9508      	RET
                 
                 __EEPROMWRW:
004298 d007      	RCALL __EEPROMWRB
004299 9611      	ADIW R26,1
00429a 93ef      	PUSH R30
00429b 2fef      	MOV  R30,R31
00429c d003      	RCALL __EEPROMWRB
00429d 91ef      	POP  R30
00429e 9711      	SBIW R26,1
00429f 9508      	RET
                 
                 __EEPROMWRB:
0042a0 d023      	RCALL __NVMREADY
0042a1 5fb0      	SUBI R27,-0x10
0042a2 918c      	LD   R24,X
0042a3 178e      	CP   R24,R30
0042a4 f411      	BRNE __EEPROMWRB1
0042a5 51b0      	SUBI R27,0x10
0042a6 9508      	RET
                 __EEPROMWRB1:
0042a7 2f9e      	MOV  R25,R30
                 
                 __EEPROMWRA:
0042a8 d01b      	RCALL __NVMREADY
0042a9 937f      	PUSH R23
0042aa b77f      	IN   R23,SREG
0042ab 94f8      	CLI
0042ac 939c      	ST   X,R25
0042ad 51b0      	SUBI R27,0x10
0042ae 93a0 01c0 	STS  NVM_ADDR0,R26
0042b0 93b0 01c1 	STS  NVM_ADDR1,R27
0042b2 e080      	LDI  R24,0
0042b3 9380 01c2 	STS  NVM_ADDR2,R24
0042b5 e385      	LDI  R24,0x35
0042b6 9380 01ca 	STS  NVM_CMD,R24
0042b8 ed88      	LDI  R24,0xD8
0042b9 e091      	LDI  R25,0x01
0042ba bf84      	OUT  CCP,R24
0042bb 9390 01cb 	STS  NVM_CTRLA,R25
0042bd d006      	RCALL __NVMREADY
0042be e080      	LDI  R24,0
0042bf 9380 01ca 	STS  NVM_CMD,R24
0042c1 bf7f      	OUT  SREG,R23
0042c2 917f      	POP  R23
0042c3 9508      	RET
                 
                 __NVMREADY:
0042c4 95a8      	WDR
0042c5 9180 01cf 	LDS  R24,NVM_STATUS
0042c7 fd87      	SBRC R24,7
0042c8 cffb      	RJMP __NVMREADY
0042c9 9508      	RET
                 
                 __CPD01:
0042ca 2400      	CLR  R0
0042cb 160e      	CP   R0,R30
0042cc 060f      	CPC  R0,R31
0042cd 0606      	CPC  R0,R22
0042ce 0607      	CPC  R0,R23
0042cf 9508      	RET
                 
                 __CPD10:
0042d0 9730      	SBIW R30,0
0042d1 4060      	SBCI R22,0
0042d2 4070      	SBCI R23,0
0042d3 9508      	RET
                 
                 __CPD02:
0042d4 2400      	CLR  R0
0042d5 160a      	CP   R0,R26
0042d6 060b      	CPC  R0,R27
0042d7 0608      	CPC  R0,R24
0042d8 0609      	CPC  R0,R25
0042d9 9508      	RET
                 
                 __CPD12:
0042da 17ea      	CP   R30,R26
0042db 07fb      	CPC  R31,R27
0042dc 0768      	CPC  R22,R24
0042dd 0779      	CPC  R23,R25
0042de 9508      	RET
                 
                 __CPD21:
0042df 17ae      	CP   R26,R30
0042e0 07bf      	CPC  R27,R31
0042e1 0786      	CPC  R24,R22
0042e2 0797      	CPC  R25,R23
0042e3 9508      	RET
                 
                 __SAVELOCR6:
0042e4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0042e5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0042e6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0042e7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0042e8 931a      	ST   -Y,R17
0042e9 930a      	ST   -Y,R16
0042ea 9508      	RET
                 
                 __LOADLOCR6:
0042eb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0042ec 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0042ed 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0042ee 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0042ef 8119      	LDD  R17,Y+1
0042f0 8108      	LD   R16,Y
0042f1 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0042f2 0fac      	ADD  R26,R28
0042f3 1fbd      	ADC  R27,R29
                 __INITLOC0:
0042f4 9005      	LPM  R0,Z+
0042f5 920d      	ST   X+,R0
0042f6 958a      	DEC  R24
0042f7 f7e1      	BRNE __INITLOC0
0042f8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATxmega256A3B register use summary:
r0 : 212 r1 :  62 r2 :   0 r3 :   4 r4 :   4 r5 :   3 r6 :   3 r7 :   2 
r8 :   6 r9 :   4 r10:  34 r11:  11 r12:   1 r13:   1 r14:   0 r15:   8 
r16: 176 r17: 299 r18: 152 r19:  91 r20:  73 r21: 110 r22: 380 r23: 328 
r24: 293 r25: 222 r26:1653 r27: 658 r28: 142 r29:   2 r30:4058 r31:1141 
x  : 295 y  :1916 z  : 297 
Registers used: 33 out of 35 (94.3%)

ATxmega256A3B instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  85 add   :  97 
adiw  : 326 and   :  15 andi  : 215 asr   :   3 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  : 275 
brge  :  34 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  66 
brlt  :   5 brmi  :  11 brne  : 325 brpl  :   9 brsh  :  73 brtc  :   8 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  :1925 
cbi   :   0 cbr   :   2 clc   :   3 clh   :   0 cli   :   8 cln   :   0 
clr   : 149 cls   :   0 clt   :   8 clv   :   0 clz   :   2 com   :  20 
cp    :  64 cpc   : 124 cpi   : 382 cpse  :   0 dec   :  20 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   9 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   5 ijmp  :   0 in    :   8 inc   :   6 jmp   : 139 
ld    : 267 ldd   :1294 ldi   :1851 lds   : 559 lpm   :  20 lsl   :  39 
lsr   :  20 mov   : 230 movw  : 354 mul   :  25 muls  :   0 mulsu :   0 
neg   :   9 nop   :   0 or    :  17 ori   :  67 out   :  38 pop   : 136 
push  : 136 rcall : 219 ret   : 418 reti  :   2 rjmp  : 646 rol   :  53 
ror   :  32 sbc   :  23 sbci  : 205 sbi   :   0 sbic  :   0 sbis  :   0 
sbiw  :  83 sbr   :   6 sbrc  :  12 sbrs  :  31 sec   :   5 seh   :   0 
sei   :   2 sen   :   0 ser   :  10 ses   :   0 set   :   7 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    : 640 std   : 291 sts   : 814 
sub   :  15 subi  : 234 swap  :   6 tst   :  29 wdr   :   3 
Instructions used: 80 out of 119 (67.2%)

ATxmega256A3B memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0085f2  33462    828  34290  270336  12.7%
[.dseg] 0x002000 0x0036ca      0   1738   1738   16384  10.6%
[.eseg] 0x000001 0x000005      0      4      4    4096   0.1%

Assembly complete, 0 errors, 23 warnings
